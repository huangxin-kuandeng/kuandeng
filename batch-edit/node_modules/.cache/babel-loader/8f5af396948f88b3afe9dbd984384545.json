{"ast":null,"code":"import { createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, resolveComponent as _resolveComponent, withCtx as _withCtx, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"contentEdit\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"p\", null, \"属性栏\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"确定\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"确定\");\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"确定\");\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nconst _hoisted_9 = {\n  class: \"footHeaderToggle\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = _resolveComponent(\"el-option\");\n\n  const _component_el_select = _resolveComponent(\"el-select\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n\n  const _component_el_scrollbar = _resolveComponent(\"el-scrollbar\");\n\n  const _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n\n  const _component_el_popover = _resolveComponent(\"el-popover\");\n\n  return _openBlock(), _createBlock(\"div\", _hoisted_1, [_createVNode(_component_el_popover, {\n    placement: $data.placement,\n    width: $data.popWidth,\n    trigger: \"manual\",\n    \"popper-options\": {\n      boundariesElement: 'body',\n      gpuAcceleration: false\n    },\n    visible: $data.visible,\n    \"onUpdate:visible\": _cache[10] || (_cache[10] = $event => $data.visible = $event)\n  }, {\n    reference: _withCtx(() => [_createVNode(\"div\", _hoisted_9, [_createVNode(_component_el_tooltip, {\n      class: \"item\",\n      effect: \"dark\",\n      content: \"修改\",\n      placement: \"top\",\n      enterable: $data.enterable\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: _cache[7] || (_cache[7] = _withModifiers($event => $options.editImage($event), [\"stop\"])),\n        icon: \"el-icon-edit-outline\",\n        title: \"修改\"\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"enterable\"]), _createVNode(_component_el_tooltip, {\n      class: \"item\",\n      effect: \"dark\",\n      content: \"质检标记\",\n      placement: \"top\",\n      enterable: $data.enterable\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: _cache[8] || (_cache[8] = _withModifiers($event => $options.checkImage($event), [\"stop\"])),\n        icon: \"el-icon-location\",\n        title: \"质检标记\"\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"enterable\"]), _createVNode(_component_el_tooltip, {\n      class: \"item\",\n      effect: \"dark\",\n      content: \"问题标记\",\n      placement: \"top\",\n      enterable: $data.enterable\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: _cache[9] || (_cache[9] = _withModifiers($event => $options.tagImage(), [\"stop\"])),\n        icon: \"el-icon-add-location\",\n        title: \"问题标记\"\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"enterable\"])])]),\n    default: _withCtx(() => [_hoisted_2, _createVNode(_component_el_scrollbar, {\n      \"max-height\": \"450px\",\n      style: {\n        \"padding-bottom\": \"30px\"\n      }\n    }, {\n      default: _withCtx(() => [$data.formType == 1 ? (_openBlock(), _createBlock(_component_el_form, {\n        key: 0,\n        ref: \"editForm\",\n        model: $data.editForm,\n        \"label-width\": \"150px\",\n        size: \"medium\",\n        rules: $data.editRules,\n        \"label-position\": 'left',\n        disabled: $props.editDisabled\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList($data.formDatas, formChild => {\n          return _openBlock(), _createBlock(\"div\", {\n            key: formChild.fieldName\n          }, [formChild.display ? (_openBlock(), _createBlock(_component_el_form_item, {\n            key: 0,\n            label: formChild.fieldTitle,\n            prop: formChild.fieldName\n          }, {\n            default: _withCtx(() => [formChild.fieldInput == 'select' ? (_openBlock(), _createBlock(_component_el_select, {\n              key: 0,\n              modelValue: $data.editForm[formChild.fieldName],\n              \"onUpdate:modelValue\": $event => $data.editForm[formChild.fieldName] = $event,\n              placeholder: \"formChild.message\",\n              onChange: $event => $options.groupLinkage(formChild.fieldName)\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList(formChild.cloneValues, options => {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  key: options.value,\n                  label: options.name,\n                  value: options.value\n                }, null, 8\n                /* PROPS */\n                , [\"label\", \"value\"]);\n              }), 128\n              /* KEYED_FRAGMENT */\n              ))]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])) : (_openBlock(), _createBlock(_component_el_input, {\n              key: 1,\n              type: \"text\",\n              modelValue: $data.editForm[formChild.fieldName],\n              \"onUpdate:modelValue\": $event => $data.editForm[formChild.fieldName] = $event\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"]))]),\n            _: 2\n            /* DYNAMIC */\n\n          }, 1032\n          /* PROPS, DYNAMIC_SLOTS */\n          , [\"label\", \"prop\"])) : _createCommentVNode(\"v-if\", true)]);\n        }), 128\n        /* KEYED_FRAGMENT */\n        )), _createVNode(_component_el_form_item, {\n          size: \"large\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            size: \"medium\",\n            onClick: _cache[1] || (_cache[1] = $event => $options.submitEdit('editForm'))\n          }, {\n            default: _withCtx(() => [_hoisted_3]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_button, {\n            size: \"medium\",\n            onClick: _cache[2] || (_cache[2] = $event => $data.visible = false)\n          }, {\n            default: _withCtx(() => [_hoisted_4]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"model\", \"rules\", \"disabled\"])) : _createCommentVNode(\"v-if\", true), $data.formType == 2 ? (_openBlock(), _createBlock(_component_el_form, {\n        key: 1,\n        ref: \"checkForm\",\n        model: $data.checkForm,\n        \"label-width\": \"120px\",\n        size: \"medium\",\n        \"label-position\": 'left',\n        rules: $data.checkRules,\n        disabled: $props.stateDisabled && $props.checkDisabled ? true : false\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList($data.formDatas, formChild => {\n          return _openBlock(), _createBlock(\"div\", {\n            key: formChild.fieldName\n          }, [_createVNode(_component_el_form_item, {\n            label: formChild.fieldTitle,\n            prop: formChild.fieldName\n          }, {\n            default: _withCtx(() => [formChild.fieldName == 'STATE' ? (_openBlock(), _createBlock(_component_el_radio_group, {\n              key: 0,\n              modelValue: $data.checkForm[formChild.fieldName],\n              \"onUpdate:modelValue\": $event => $data.checkForm[formChild.fieldName] = $event,\n              size: \"medium\",\n              disabled: $props.stateDisabled\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList(formChild.fieldType.fieldTypeValues, formdata => {\n                return _openBlock(), _createBlock(_component_el_radio, {\n                  key: formdata.value,\n                  value: formdata.value,\n                  label: formdata.value,\n                  border: \"\"\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(formdata.name), 1\n                  /* TEXT */\n                  )]),\n                  _: 2\n                  /* DYNAMIC */\n\n                }, 1032\n                /* PROPS, DYNAMIC_SLOTS */\n                , [\"value\", \"label\"]);\n              }), 128\n              /* KEYED_FRAGMENT */\n              ))]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"modelValue\", \"onUpdate:modelValue\", \"disabled\"])) : formChild.fieldName == 'DESC' ? (_openBlock(), _createBlock(_component_el_input, {\n              key: 1,\n              type: \"textarea\",\n              modelValue: $data.checkForm[formChild.fieldName],\n              \"onUpdate:modelValue\": $event => $data.checkForm[formChild.fieldName] = $event,\n              disabled: $props.checkDisabled\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\", \"disabled\"])) : formChild.fieldInput == 'select' ? (_openBlock(), _createBlock(_component_el_select, {\n              key: 2,\n              modelValue: $data.checkForm[formChild.fieldName],\n              \"onUpdate:modelValue\": $event => $data.checkForm[formChild.fieldName] = $event,\n              placeholder: formChild.fieldTitle,\n              onChange: $event => $options.groupLinkage(formChild.fieldName),\n              disabled: $props.checkDisabled\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList(formChild.cloneValues || [], options => {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  key: options.value,\n                  label: options.name,\n                  value: options.value\n                }, null, 8\n                /* PROPS */\n                , [\"label\", \"value\"]);\n              }), 128\n              /* KEYED_FRAGMENT */\n              ))]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"modelValue\", \"onUpdate:modelValue\", \"placeholder\", \"onChange\", \"disabled\"])) : _createCommentVNode(\"v-if\", true)]),\n            _: 2\n            /* DYNAMIC */\n\n          }, 1032\n          /* PROPS, DYNAMIC_SLOTS */\n          , [\"label\", \"prop\"])]);\n        }), 128\n        /* KEYED_FRAGMENT */\n        )), _createVNode(_component_el_form_item, {\n          size: \"large\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            size: \"medium\",\n            onClick: _cache[3] || (_cache[3] = $event => $options.submitCheck('checkForm'))\n          }, {\n            default: _withCtx(() => [_hoisted_5]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_button, {\n            size: \"medium\",\n            onClick: _cache[4] || (_cache[4] = $event => $data.visible = false)\n          }, {\n            default: _withCtx(() => [_hoisted_6]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_el_pagination, {\n          onSizeChange: $options.handleSizeChange,\n          onCurrentChange: $options.handleCurrentChange,\n          small: \"\",\n          layout: \"prev, pager, next, jumper\",\n          \"current-page\": $data.page.currentPage,\n          \"page-count\": $data.page.totalPage,\n          style: {\n            \"position\": \"absolute\",\n            \"bottom\": \"0px\"\n          }\n        }, null, 8\n        /* PROPS */\n        , [\"onSizeChange\", \"onCurrentChange\", \"current-page\", \"page-count\"])]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"model\", \"rules\", \"disabled\"])) : _createCommentVNode(\"v-if\", true), $data.formType == 3 ? (_openBlock(), _createBlock(_component_el_form, {\n        key: 2,\n        ref: \"imageForm\",\n        model: _ctx.imageForm,\n        \"label-width\": \"150px\",\n        size: \"medium\",\n        rules: _ctx.imageRules,\n        \"label-position\": 'left'\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList($data.formDatas, formChild => {\n          return _openBlock(), _createBlock(\"div\", {\n            key: formChild.fieldName\n          }, [_createVNode(_component_el_form_item, {\n            label: formChild.fieldTitle,\n            prop: formChild.fieldName\n          }, {\n            default: _withCtx(() => [formChild.fieldInput == 'select' ? (_openBlock(), _createBlock(_component_el_select, {\n              key: 0,\n              modelValue: $data.editForm[formChild.fieldName],\n              \"onUpdate:modelValue\": $event => $data.editForm[formChild.fieldName] = $event,\n              placeholder: \"formChild.message\",\n              onChange: $event => $options.groupLinkage(formChild.fieldName)\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList(formChild.cloneValues, options => {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  key: options.value,\n                  label: options.name,\n                  value: options.value\n                }, null, 8\n                /* PROPS */\n                , [\"label\", \"value\"]);\n              }), 128\n              /* KEYED_FRAGMENT */\n              ))]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])) : (_openBlock(), _createBlock(_component_el_input, {\n              key: 1,\n              type: \"text\",\n              modelValue: $data.editForm[formChild.fieldName],\n              \"onUpdate:modelValue\": $event => $data.editForm[formChild.fieldName] = $event\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"]))]),\n            _: 2\n            /* DYNAMIC */\n\n          }, 1032\n          /* PROPS, DYNAMIC_SLOTS */\n          , [\"label\", \"prop\"])]);\n        }), 128\n        /* KEYED_FRAGMENT */\n        )), _createVNode(_component_el_form_item, {\n          size: \"large\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            size: \"medium\",\n            onClick: _cache[5] || (_cache[5] = $event => $options.submitImage('imageForm'))\n          }, {\n            default: _withCtx(() => [_hoisted_7]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_button, {\n            size: \"medium\",\n            onClick: _cache[6] || (_cache[6] = $event => $data.visible = false)\n          }, {\n            default: _withCtx(() => [_hoisted_8]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"model\", \"rules\"])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"placement\", \"width\", \"visible\"])]);\n}","map":{"version":3,"sources":["D:\\web_editor_hd\\src\\main\\webapp\\batch-edit\\src\\components\\contentComponents\\contentEdit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"contentEdit\">\n    <el-popover\n      :placement=\"placement\"\n      :width=\"popWidth\"\n      trigger=\"manual\"\n      :popper-options=\"{\n        boundariesElement: 'body',\n        gpuAcceleration: false,\n      }\"\n      v-model:visible=\"visible\"\n    >\n      <p>属性栏</p>\n      <el-scrollbar max-height=\"450px\" style=\"padding-bottom: 30px\">\n        <el-form\n          v-if=\"formType == 1\"\n          ref=\"editForm\"\n          :model=\"editForm\"\n          label-width=\"150px\"\n          size=\"medium\"\n          :rules=\"editRules\"\n          :label-position=\"'left'\"\n          :disabled=\"editDisabled\"\n        >\n          <div v-for=\"formChild in formDatas\" :key=\"formChild.fieldName\">\n            <el-form-item\n              v-if=\"formChild.display\"\n              :label=\"formChild.fieldTitle\"\n              :prop=\"formChild.fieldName\"\n            >\n              <el-select\n                v-if=\"formChild.fieldInput == 'select'\"\n                v-model=\"editForm[formChild.fieldName]\"\n                placeholder=\"formChild.message\"\n                @change=\"groupLinkage(formChild.fieldName)\"\n              >\n                <el-option\n                  v-for=\"options in formChild.cloneValues\"\n                  :key=\"options.value\"\n                  :label=\"options.name\"\n                  :value=\"options.value\"\n                ></el-option>\n              </el-select>\n              <el-input\n                v-else\n                type=\"text\"\n                v-model=\"editForm[formChild.fieldName]\"\n              ></el-input>\n            </el-form-item>\n          </div>\n          <el-form-item size=\"large\">\n            <el-button\n              type=\"primary\"\n              size=\"medium\"\n              @click=\"submitEdit('editForm')\"\n              >确定</el-button\n            >\n            <el-button size=\"medium\" @click=\"visible = false\">取消</el-button>\n          </el-form-item>\n        </el-form>\n        <el-form\n          v-if=\"formType == 2\"\n          ref=\"checkForm\"\n          :model=\"checkForm\"\n          label-width=\"120px\"\n          size=\"medium\"\n          :label-position=\"'left'\"\n          :rules=\"checkRules\"\n          :disabled=\"stateDisabled && checkDisabled ? true : false\"\n        >\n          <div v-for=\"formChild in formDatas\" :key=\"formChild.fieldName\">\n            <el-form-item\n              :label=\"formChild.fieldTitle\"\n              :prop=\"formChild.fieldName\"\n            >\n              <el-radio-group\n                v-if=\"formChild.fieldName == 'STATE'\"\n                v-model=\"checkForm[formChild.fieldName]\"\n                size=\"medium\"\n                :disabled=\"stateDisabled\"\n              >\n                <el-radio\n                  v-for=\"formdata in formChild.fieldType.fieldTypeValues\"\n                  :key=\"formdata.value\"\n                  :value=\"formdata.value\"\n                  :label=\"formdata.value\"\n                  border\n                  >{{ formdata.name }}</el-radio\n                >\n              </el-radio-group>\n              <el-input\n                v-else-if=\"formChild.fieldName == 'DESC'\"\n                type=\"textarea\"\n                v-model=\"checkForm[formChild.fieldName]\"\n                :disabled=\"checkDisabled\"\n              ></el-input>\n              <el-select\n                v-else-if=\"formChild.fieldInput == 'select'\"\n                v-model=\"checkForm[formChild.fieldName]\"\n                :placeholder=\"formChild.fieldTitle\"\n                @change=\"groupLinkage(formChild.fieldName)\"\n                :disabled=\"checkDisabled\"\n              >\n                <el-option\n                  v-for=\"options in formChild.cloneValues || []\"\n                  :key=\"options.value\"\n                  :label=\"options.name\"\n                  :value=\"options.value\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </div>\n          <el-form-item size=\"large\">\n            <el-button\n              type=\"primary\"\n              size=\"medium\"\n              @click=\"submitCheck('checkForm')\"\n              >确定</el-button\n            >\n            <el-button size=\"medium\" @click=\"visible = false\">取消</el-button>\n          </el-form-item>\n          <el-pagination\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n            small\n            layout=\"prev, pager, next, jumper\"\n            :current-page=\"page.currentPage\"\n            :page-count=\"page.totalPage\"\n            style=\"position: absolute; bottom: 0px\"\n          >\n          </el-pagination>\n        </el-form>\n        <el-form\n          v-if=\"formType == 3\"\n          ref=\"imageForm\"\n          :model=\"imageForm\"\n          label-width=\"150px\"\n          size=\"medium\"\n          :rules=\"imageRules\"\n          :label-position=\"'left'\"\n        >\n          <div v-for=\"formChild in formDatas\" :key=\"formChild.fieldName\">\n            <el-form-item\n              :label=\"formChild.fieldTitle\"\n              :prop=\"formChild.fieldName\"\n            >\n              <el-select\n                v-if=\"formChild.fieldInput == 'select'\"\n                v-model=\"editForm[formChild.fieldName]\"\n                placeholder=\"formChild.message\"\n                @change=\"groupLinkage(formChild.fieldName)\"\n              >\n                <el-option\n                  v-for=\"options in formChild.cloneValues\"\n                  :key=\"options.value\"\n                  :label=\"options.name\"\n                  :value=\"options.value\"\n                ></el-option>\n              </el-select>\n              <el-input\n                v-else\n                type=\"text\"\n                v-model=\"editForm[formChild.fieldName]\"\n              ></el-input>\n            </el-form-item>\n          </div>\n          <el-form-item size=\"large\">\n            <el-button\n              type=\"primary\"\n              size=\"medium\"\n              @click=\"submitImage('imageForm')\"\n              >确定</el-button\n            >\n            <el-button size=\"medium\" @click=\"visible = false\">取消</el-button>\n          </el-form-item>\n        </el-form>\n      </el-scrollbar>\n      <template #reference>\n        <div class=\"footHeaderToggle\">\n          <el-tooltip\n            class=\"item\"\n            effect=\"dark\"\n            content=\"修改\"\n            placement=\"top\"\n            :enterable=\"enterable\"\n          >\n            <el-button\n              @click.stop=\"editImage($event)\"\n              icon=\"el-icon-edit-outline\"\n              title=\"修改\"\n            ></el-button>\n          </el-tooltip>\n          <el-tooltip\n            class=\"item\"\n            effect=\"dark\"\n            content=\"质检标记\"\n            placement=\"top\"\n            :enterable=\"enterable\"\n          >\n            <el-button\n              @click.stop=\"checkImage($event)\"\n              icon=\"el-icon-location\"\n              title=\"质检标记\"\n            ></el-button>\n          </el-tooltip>\n          <el-tooltip\n            class=\"item\"\n            effect=\"dark\"\n            content=\"问题标记\"\n            placement=\"top\"\n            :enterable=\"enterable\"\n          >\n            <el-button\n              @click.stop=\"tagImage()\"\n              icon=\"el-icon-add-location\"\n              title=\"问题标记\"\n            ></el-button>\n          </el-tooltip>\n        </div>\n      </template>\n    </el-popover>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"contentEdit\",\n  data() {\n    return {\n      editTagId: null,\n      page: {\n        currentPage: 1,\n        pageSize: 1,\n        totalPage: 1,\n      },\n      enterable: false,\n      //根据用户权限校验：作业员可修改；质检员只读。\n      toggleClass: this.hideHeader\n        ? \"el-icon-caret-top\"\n        : \"el-icon-caret-bottom\",\n      visible: false,\n      childInstanseTag: this.instanseTag,\n      formType: 1,\n      popWidth: 400,\n      placement: \"right\",\n      formDatas: [],\n      editForm: {},\n      checkForm: {\n        ERROR_TYPE: \"\",\n        ATTRIBUTE: \"\",\n        STATE: \"\",\n        DESC: \"\",\n      },\n      ATTRIBUTE_filter: [\n        \"AREA_FLAG\",\n        \"OPERATOR\",\n        \"SOURCE\",\n        \"SDATE\",\n        \"FLAG\",\n        \"TASK_ID\",\n        \"BATCH\",\n        \"SEQ\",\n      ],\n      editRules: {},\n      checkRules: {\n        ERROR_TYPE: [\n          { required: false, message: \"请选择错误类型\", trigger: \"change\" },\n        ],\n        ATTRIBUTE: [\n          { required: false, message: \"请选择错误属性\", trigger: \"change\" },\n        ],\n        STATE: [\n          { required: false, message: \"请选择标记状态\", trigger: \"change\" },\n        ],\n        DESC: [{ required: false, message: \"请输入内容描述\", trigger: \"blur\" }],\n      },\n    };\n  },\n  props: [\n    \"editId\",\n    \"entityId\",\n    \"editTags\",\n    \"modelName\",\n    \"editDisabled\",\n    \"checkDisabled\",\n    \"stateDisabled\",\n    \"tagDatas\",\n  ],\n  mounted() {},\n  methods: {\n    getInstanse(model) {\n      var modelFile = this.$tags[model] || {};\n      var fields = modelFile.fields || [];\n      return fields;\n    },\n    // 每次进行属性编辑时，初始化当前编辑界面\n    attributeInstanseInit() {\n      this.editRules = {};\n      this.editForm = {};\n      this.formDatas = [];\n      var modelAttr = this.$fruit[this.modelName] || {},\n        fields = modelAttr.fields || [],\n        cloneFields = this.$_.cloneDeep(fields);\n      cloneFields.forEach((d) => {\n        if (d.display) {\n          var trigger = d.fieldInput == \"select\" ? \"change\" : \"blur\";\n          var text = d.fieldInput == \"select\" ? \"选择\" : \"输入\";\n          var message = \"请\" + text + d.fieldTitle;\n\n          var defaultValue = this.editTags[d.fieldName] || \"\";\n          this.editForm[d.fieldName] = defaultValue || d.defaultValue || \"\";\n          this.editRules[d.fieldName] = [\n            { required: false, message: message, trigger: trigger },\n          ];\n          d.message = message;\n        }\n      });\n      this.formDatas = cloneFields;\n    },\n    // 每次进行属性编辑时，初始化当前编辑界面\n    questionInstanseInit(modelName) {\n      this.imageRules = {};\n      this.imageForm = {};\n      this.formDatas = [];\n      var modelAttr = this.$tags[modelName] || {},\n        fields = modelAttr.fields || [],\n        cloneFields = this.$_.cloneDeep(fields);\n      cloneFields.forEach((d) => {\n        // if (d.display) {\n        var trigger = d.fieldInput == \"select\" ? \"change\" : \"blur\";\n        var text = d.fieldInput == \"select\" ? \"选择\" : \"输入\";\n        var message = \"请\" + text + d.fieldTitle;\n\n        var defaultValue = this.editTags[d.fieldName] || \"\";\n        this.imageForm[d.fieldName] = defaultValue || d.defaultValue || \"\";\n        this.imageRules[d.fieldName] = [\n          { required: false, message: message, trigger: trigger },\n        ];\n        d.message = message;\n        // }\n      });\n      this.formDatas = cloneFields;\n    },\n    // 质检标记初始化\n    tagInstanseInit() {\n      this.formDatas = [];\n      var instanseTags = this.getInstanse(\"QUALITY_TAG\");\n      instanseTags.forEach((d) => {\n        if (d.fieldName == \"STATE\") {\n          this.formDatas[3] = d;\n          this.checkForm[d.fieldName] = d.defaultValue || \"\";\n        } else if (d.fieldName == \"ERROR_TYPE\") {\n          this.formDatas[0] = d;\n          this.checkForm[d.fieldName] = d.defaultValue || \"\";\n        } else if (d.fieldName == \"DESC\") {\n          this.formDatas[2] = d;\n          this.checkForm[d.fieldName] = d.defaultValue || \"\";\n        } else if (d.fieldName == \"ATTRIBUTE\") {\n          d.fieldInput = \"select\";\n          d.fieldType = { fieldTypeValues: [] };\n          this.formDatas[1] = d;\n          this.checkForm[d.fieldName] = d.defaultValue || \"\";\n        }\n      });\n    },\n    /*\n     **级联关系的联动处理**\n     *1、传fieldName：\n     *****   则查看当前fieldName下是否存在子集关系，并进行更新选项\n     *2、不传fieldName：\n     *****   则查看当前模型下所有的级联关系，并进行更新所有选项\n     */\n    groupLinkage(fieldName, type) {\n      var $this = this;\n      var modelFields = $this.$fruit[$this.modelName] || null;\n      var fields = modelFields ? modelFields.fields : [];\n\n      if (fieldName == \"ERROR_TYPE\") {\n        var attrs = this.formDatas.find((d) => {\n          return d.fieldName == \"ATTRIBUTE\";\n        });\n        if (![\"3\", \"4\", \"8\"].includes($this.checkForm[fieldName] + \"\")) {\n          attrs.cloneValues = [];\n        } else {\n          attrs.cloneValues =\n            fields\n              .filter(function (d) {\n                return !$this.ATTRIBUTE_filter.includes(d.fieldName);\n              })\n              .map(function (d) {\n                return {\n                  name: d.fieldTitle || d.fieldName,\n                  value: d.fieldName,\n                };\n              }) || [];\n        }\n        if (!type) {\n          $this.checkForm[\"ATTRIBUTE\"] = \"\";\n        }\n        console.log(this.ATTRIBUTE_filter);\n      } else {\n        fields.forEach((d) => {\n          if (fieldName && d.fieldName != fieldName) {\n            return;\n          }\n          var selectGroup = d.selectGroup || [];\n          if (selectGroup.length) {\n            var fieldTypeValues = d.fieldType.fieldTypeValues || [];\n            var value = $this.editForm[d.fieldName] || d.defaultValue;\n            var selectValue = fieldTypeValues.find((s) => {\n              return s.value == value;\n            });\n            for (var i = 0; i < selectGroup.length; i++) {\n              $this.groupSelectChange(selectGroup[i], selectValue, fieldName);\n            }\n          }\n        });\n      }\n    },\n    // 级联菜单--子集可选项变化\n    groupSelectChange(fieldName, selectValue, f_Name) {\n      var fieldSelect = [];\n      var field = this.formDatas.find((d) => {\n        return d.fieldName == fieldName;\n      });\n      if (selectValue && selectValue.id) {\n        fieldSelect = field.fieldType.fieldTypeValues.filter((d) => {\n          return d.parentId == selectValue.id;\n        });\n      }\n      field.cloneValues = fieldSelect;\n      if (f_Name) {\n        this.editForm[fieldName] = field.defaultValue;\n      }\n    },\n    /*\n     **编辑属性面板的处理**\n     *1、editImage：\n     *****   属性编辑\n     *2、checkImage：\n     *****   质检标状态编辑\n     */\n    editImage(e) {\n      this.attributeInstanseInit();\n      this.groupLinkage();\n      if (window.innerWidth - e.clientX < 600) {\n        this.placement = \"left\";\n      } else {\n        this.placement = \"right\";\n      }\n      this.popWidth = 400;\n      this.formType = 1;\n      this.visible = true;\n    },\n    // 点击质检标记\n    checkImage(e) {\n      this.page.currentPage = 1;\n      this.tagInstanseInit();\n      this.changeTagEditor();\n      if (this.page.totalPage) {\n        if (window.innerWidth - e.clientX < 500) {\n          this.placement = \"left\";\n        } else {\n          this.placement = \"right\";\n        }\n        this.popWidth = 400;\n        this.formType = 2;\n        this.visible = true;\n      } else if (!this.page.totalPage && this.tagDatas.length) {\n        this.visible = false;\n        this.$notify({\n          title: \"提示\",\n          message: \"未匹配到质检标记\",\n          type: \"warning\",\n        });\n      }\n    },\n    // 属性栏编辑分页监听\n    handleSizeChange(val) {\n      this.page.currentPage = val;\n      this.submitCheck(\"checkForm\", true);\n      this.changeTagEditor();\n    },\n    handleCurrentChange(val) {\n      this.page.currentPage = val;\n      this.submitCheck(\"checkForm\", true);\n      this.changeTagEditor();\n    },\n    // 质检标记不同分页,其中的属性改变时\n    changeTagEditor() {\n      var f_id = this.entityId;\n      // var f_id = \"28\";\n      var thisData = this.tagDatas.filter((d) => {\n        return d.cloneTag.FEATURE_ID == f_id;\n      });\n      var pageData = thisData[this.page.currentPage - 1];\n      this.page.totalPage = thisData.length;\n      if (pageData) {\n        this.editTagId = pageData.id;\n      }\n      for (var item in this.checkForm) {\n        if (pageData) {\n          // this.checkForm[item] =\n          //   pageData.cloneTag[item] || this.checkForm[item];\n          this.checkForm[item] = pageData.cloneTag[item] || \"\";\n        }\n      }\n      this.groupLinkage(\"ERROR_TYPE\", true);\n    },\n    changeTagEditorForm(u_id, properties) {\n      if (u_id && u_id == this.editTagId) {\n        for (var item in properties) {\n          this.checkForm[item] = properties[item];\n        }\n      }\n    },\n    // 问题标记--点击按钮\n    tagImage() {\n      // if (this.checkDisabled) {\n      //   this.$notify({\n      //     title: \"提示\",\n      //     message: \"当前用户不是质检员！\",\n      //     type: \"warning\",\n      //   });\n      //   return;\n      // }\n      this.questionInstanseInit(\"QUESTION_TAG\");\n      this.formType = 3;\n      this.visible = true;\n    },\n    // 模型属性面板--点击确定\n    submitEdit(formName) {\n      var $this = this;\n      $this.$refs[formName].validate((valid) => {\n        if (valid) {\n          $this.visible = false;\n          $this.$emit(\"editList\", $this.editId, $this.editForm);\n        } else {\n          return false;\n        }\n      });\n    },\n    // 质检标记属性面板--点击确定\n    submitCheck(formName, type) {\n      var $this = this;\n      $this.$refs[formName].validate((valid) => {\n        if (valid) {\n          $this.$emit(\"checkList\", $this.editTagId, $this.checkForm);\n          if (this.page.currentPage == this.page.totalPage && !type) {\n            $this.visible = false;\n          } else if (!type) {\n            this.page.currentPage++;\n            this.changeTagEditor();\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    // 问题标记属性面板--点击确定\n    submitImage(formName) {\n      var $this = this;\n      $this.$refs[formName].validate((valid) => {\n        if (valid) {\n          $this.visible = false;\n          $this.$emit(\"tagImage\", $this.editId, $this.imageForm);\n        } else {\n          return false;\n        }\n      });\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n.contentEdit {\n  float: left;\n  margin: 0 auto;\n  padding: 0px;\n  position: absolute;\n  right: 5px;\n  bottom: 35px;\n  width: auto;\n  z-index: 10;\n}\n.contentEdit .footHeaderToggle button {\n  background-color: rgba(0, 0, 0, 0.4);\n  border: 1px solid rgba(58, 142, 230, 0);\n  min-height: 20px;\n  padding: 5px;\n  font-size: 18px;\n  color: rgba(255, 255, 255, 0.6);\n}\n.contentEdit .footHeaderToggle button:focus,\n.contentEdit .footHeaderToggle button:hover {\n  border: 1px solid rgba(58, 142, 230, 1);\n  color: rgba(255, 255, 255, 1);\n}\n.el-form .el-radio-group .el-radio {\n  margin-right: 5px;\n  padding: 5px 10px 0px 5px;\n  height: 26px;\n  margin-bottom: 5px;\n  float: left;\n  margin-left: 0px !important;\n}\n.el-popover {\n  padding-right: 0px;\n}\n.el-popover .el-form {\n  padding-right: 15px;\n  overflow-x: hidden;\n}\n.el-popover p {\n  font-weight: bold;\n  margin: 5px 0px;\n}\n.el-popover .el-form .el-select {\n  width: 100%;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}