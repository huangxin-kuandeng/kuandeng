{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"indexFooter\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"导出\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_footHeader = _resolveComponent(\"footHeader\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  const _component_el_drawer = _resolveComponent(\"el-drawer\");\n\n  return _openBlock(), _createBlock(\"div\", _hoisted_1, [_createVNode(_component_footHeader, {\n    onTableToggle: $options.tableToggle,\n    hideHeader: true\n  }, null, 8\n  /* PROPS */\n  , [\"onTableToggle\"]), _createVNode(_component_el_drawer, {\n    title: \"\",\n    modelValue: $data.table,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.table = $event),\n    direction: \"btt\",\n    size: \"500\",\n    \"with-header\": false\n  }, {\n    default: _withCtx(() => [_createVNode(_component_footHeader, {\n      onTableToggle: $options.tableToggle,\n      hideHeader: false\n    }, null, 8\n    /* PROPS */\n    , [\"onTableToggle\"]), _createVNode(_component_el_button, {\n      class: \"export\",\n      type: \"default\",\n      icon: \"el-icon-upload2\",\n      title: \"导出\",\n      onClick: _cache[1] || (_cache[1] = $event => $options.exports())\n    }, {\n      default: _withCtx(() => [_hoisted_2]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_table, {\n      data: $data.tableData,\n      style: {\n        \"width\": \"100%\",\n        \"margin-bottom\": \"20px\"\n      },\n      \"row-key\": \"id\",\n      border: \"\",\n      \"empty-text\": \" - \",\n      \"max-height\": \"400\",\n      \"tree-props\": {\n        children: 'children',\n        hasChildren: 'hasChildren'\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        fixed: \"left\",\n        label: \"状态\",\n        width: \"120\",\n        type: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          icon: \"el-icon-check\",\n          \"row-class-name\": $options.tableRowType,\n          size: \"mini\",\n          title: \"\",\n          circle: \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"row-class-name\"]), _createVNode(_component_el_button, {\n          icon: \"el-icon-close\",\n          \"row-class-name\": $options.tableRowType,\n          size: \"mini\",\n          title: \"\",\n          circle: \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"row-class-name\"]), _createVNode(_component_el_button, {\n          icon: \"el-icon-right\",\n          \"row-class-name\": $options.tableRowType,\n          size: \"mini\",\n          title: \"\",\n          circle: \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"row-class-name\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_table_column, {\n        prop: \"errortype\",\n        label: \"错误类别\",\n        width: \"180\",\n        type: \"\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"checknum\",\n        label: \"检查项编码\",\n        width: \"180\",\n        type: \"\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"datatype\",\n        label: \"数据类型\",\n        type: \"\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"question\",\n        label: \"问题描述\",\n        type: \"\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"tagsource\",\n        label: \"标记类型\",\n        type: \"\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"progress\",\n        label: \"核标进度\",\n        type: \"\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        width: \"100\"\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"data\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"])]);\n}","map":{"version":3,"sources":["D:\\project\\batch-edit\\src\\components\\footerForm.vue"],"names":[],"mappings":";;AACO,EAAA,KAAK,EAAC;;;iDAgBJ,I;;;;;;;;;;;;;uBAhBP,YAAA,CAqFM,KArFN,EAAA,UAAA,EAqFM,CApFJ,YAAA,CAA4D,qBAA5D,EAA4D;AAA/C,IAAA,aAAW,EAAE,QAAA,CAAA,WAAkC;AAApB,IAAA,UAAU,EAAE;AAAQ,GAA5D,E,IAAA,E;;AAAA,I,iBAAA,CAoFI,EAnFJ,YAAA,CAkFY,oBAlFZ,EAkFY;AAjFV,IAAA,KAAK,EAAC,EAiFI;gBAhFD,KAAA,CAAA,KAgFC;+DAhFD,KAAA,CAAA,KAAA,GAAK,M,CAgFJ;AA/EV,IAAA,SAAS,EAAC,KA+EA;AA9EV,IAAA,IAAI,EAAC,KA8EK;AA7ET,mBAAa;AA6EJ,GAlFZ,E;sBAOE,MAA6D,CAA7D,YAAA,CAA6D,qBAA7D,EAA6D;AAAhD,MAAA,aAAW,EAAE,QAAA,CAAA,WAAmC;AAArB,MAAA,UAAU,EAAE;AAAS,KAA7D,E,IAAA,E;;AAAA,M,iBAAA,CAA6D,EAC7D,YAAA,CAOC,oBAPD,EAOC;AANC,MAAA,KAAK,EAAC,QAMP;AALC,MAAA,IAAI,EAAC,SAKN;AAJC,MAAA,IAAI,EAAC,iBAIN;AAHC,MAAA,KAAK,EAAC,IAGP;AAFE,MAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,MAAA,IAAE,QAAA,CAAA,OAAA,EAAF;AAEP,KAPD,E;wBAMG,MAAE,C,UAAA,C;;;;KANL,CAD6D,EAS7D,YAAA,CAiEW,mBAjEX,EAiEW;AAhER,MAAA,IAAI,EAAE,KAAA,CAAA,SAgEE;AA/DT,MAAA,KAAwC,EAAxC;AAAA,iBAAA,MAAA;AAAA,yBAAA;AAAA,OA+DS;AA9DT,iBAAQ,IA8DC;AA7DT,MAAA,MAAM,EAAN,EA6DS;AA5DT,oBAAW,KA4DF;AA3DT,oBAAW,KA2DF;AA1DR,oBAAY;AAAA,QAAA,QAAA,EAAA,UAAA;AAAA,QAAA,WAAA,EAAA;AAAA;AA0DJ,KAjEX,E;wBASE,MAsBkB,CAtBlB,YAAA,CAsBkB,0BAtBlB,EAsBkB;AAtBD,QAAA,KAAK,EAAC,MAsBL;AAtBY,QAAA,KAAK,EAAC,IAsBlB;AAtBuB,QAAA,KAAK,EAAC,KAsB7B;AAtBmC,QAAA,IAAI,EAAC;AAsBxC,OAtBlB,E;0BACE,MAMa,CANb,YAAA,CAMa,oBANb,EAMa;AALX,UAAA,IAAI,EAAC,eAKM;AAJV,4BAAgB,QAAA,CAAA,YAIN;AAHX,UAAA,IAAI,EAAC,MAGM;AAFX,UAAA,KAAK,EAAC,EAEK;AADX,UAAA,MAAM,EAAN;AACW,SANb,E,IAAA,E;;AAAA,U,kBAAA,CAMa,EACb,YAAA,CAMa,oBANb,EAMa;AALX,UAAA,IAAI,EAAC,eAKM;AAJV,4BAAgB,QAAA,CAAA,YAIN;AAHX,UAAA,IAAI,EAAC,MAGM;AAFX,UAAA,KAAK,EAAC,EAEK;AADX,UAAA,MAAM,EAAN;AACW,SANb,E,IAAA,E;;AAAA,U,kBAAA,CADa,EAQb,YAAA,CAMa,oBANb,EAMa;AALX,UAAA,IAAI,EAAC,eAKM;AAJV,4BAAgB,QAAA,CAAA,YAIN;AAHX,UAAA,IAAI,EAAC,MAGM;AAFX,UAAA,KAAK,EAAC,EAEK;AADX,UAAA,MAAM,EAAN;AACW,SANb,E,IAAA,E;;AAAA,U,kBAAA,CARa,C;;;;OAPf,CAsBkB,EAClB,YAAA,CAKmB,0BALnB,EAKmB;AAJjB,QAAA,IAAI,EAAC,WAIY;AAHjB,QAAA,KAAK,EAAC,MAGW;AAFjB,QAAA,KAAK,EAAC,KAEW;AADjB,QAAA,IAAI,EAAC;AACY,OALnB,CADkB,EAOlB,YAAA,CAKmB,0BALnB,EAKmB;AAJjB,QAAA,IAAI,EAAC,UAIY;AAHjB,QAAA,KAAK,EAAC,OAGW;AAFjB,QAAA,KAAK,EAAC,KAEW;AADjB,QAAA,IAAI,EAAC;AACY,OALnB,CAPkB,EAalB,YAAA,CAImB,0BAJnB,EAImB;AAHjB,QAAA,IAAI,EAAC,UAGY;AAFjB,QAAA,KAAK,EAAC,MAEW;AADjB,QAAA,IAAI,EAAC;AACY,OAJnB,CAbkB,EAkBlB,YAAA,CAImB,0BAJnB,EAImB;AAHjB,QAAA,IAAI,EAAC,UAGY;AAFjB,QAAA,KAAK,EAAC,MAEW;AADjB,QAAA,IAAI,EAAC;AACY,OAJnB,CAlBkB,EAuBlB,YAAA,CAImB,0BAJnB,EAImB;AAHjB,QAAA,IAAI,EAAC,WAGY;AAFjB,QAAA,KAAK,EAAC,MAEW;AADjB,QAAA,IAAI,EAAC;AACY,OAJnB,CAvBkB,EA4BlB,YAAA,CAImB,0BAJnB,EAImB;AAHjB,QAAA,IAAI,EAAC,UAGY;AAFjB,QAAA,KAAK,EAAC,MAEW;AADjB,QAAA,IAAI,EAAC;AACY,OAJnB,CA5BkB,EAiClB,YAAA,CAA0D,0BAA1D,EAA0D;AAAzC,QAAA,KAAK,EAAC,IAAmC;AAA9B,QAAA,KAAK,EAAC;AAAwB,OAA1D,CAjCkB,C;;;;KA/BpB,E;;AAAA,M,QAAA,CAT6D,C;;;;GAP/D,E;;AAAA,I,cAAA,CAmFI,CArFN,C","sourcesContent":["<template>\n  <div class=\"indexFooter\">\n    <footHeader @tableToggle=\"tableToggle\" :hideHeader=\"true\" />\n    <el-drawer\n      title=\"\"\n      v-model=\"table\"\n      direction=\"btt\"\n      size=\"500\"\n      :with-header=\"false\"\n    >\n      <footHeader @tableToggle=\"tableToggle\" :hideHeader=\"false\" />\n      <el-button\n        class=\"export\"\n        type=\"default\"\n        icon=\"el-icon-upload2\"\n        title=\"导出\"\n        @click=\"exports()\"\n        >导出</el-button\n      >\n      <el-table\n        :data=\"tableData\"\n        style=\"width: 100%; margin-bottom: 20px\"\n        row-key=\"id\"\n        border\n        empty-text=\" - \"\n        max-height=\"400\"\n        :tree-props=\"{ children: 'children', hasChildren: 'hasChildren' }\"\n      >\n        <el-table-column fixed=\"left\" label=\"状态\" width=\"120\" type=\"\">\n          <el-button\n            icon=\"el-icon-check\"\n            :row-class-name=\"tableRowType\"\n            size=\"mini\"\n            title=\"\"\n            circle\n          ></el-button>\n          <el-button\n            icon=\"el-icon-close\"\n            :row-class-name=\"tableRowType\"\n            size=\"mini\"\n            title=\"\"\n            circle\n          ></el-button>\n          <el-button\n            icon=\"el-icon-right\"\n            :row-class-name=\"tableRowType\"\n            size=\"mini\"\n            title=\"\"\n            circle\n          ></el-button>\n        </el-table-column>\n        <el-table-column\n          prop=\"errortype\"\n          label=\"错误类别\"\n          width=\"180\"\n          type=\"\"\n        ></el-table-column>\n        <el-table-column\n          prop=\"checknum\"\n          label=\"检查项编码\"\n          width=\"180\"\n          type=\"\"\n        ></el-table-column>\n        <el-table-column\n          prop=\"datatype\"\n          label=\"数据类型\"\n          type=\"\"\n        ></el-table-column>\n        <el-table-column\n          prop=\"question\"\n          label=\"问题描述\"\n          type=\"\"\n        ></el-table-column>\n        <el-table-column\n          prop=\"tagsource\"\n          label=\"标记类型\"\n          type=\"\"\n        ></el-table-column>\n        <el-table-column\n          prop=\"progress\"\n          label=\"核标进度\"\n          type=\"\"\n        ></el-table-column>\n        <el-table-column label=\"操作\" width=\"100\"></el-table-column>\n      </el-table>\n    </el-drawer>\n  </div>\n</template>\n\n<script>\nimport footHeader from \"@/components/contentComponents/footFormHeader.vue\";\nimport * as sysApi from \"../services/sys\";\nimport * as util from \"../services/util\";\nexport default {\n  name: \"indexFooter\",\n  props: {\n    msg: String,\n  },\n  data() {\n    return {\n      table: false,\n      tableData: [],\n    };\n  },\n  mounted() {\n    this.queryQualityTag();\n  },\n  methods: {\n    exports() {},\n    tableToggle(type) {\n      this.table = type;\n    },\n    tableRowType({ row, rowIndex }) {\n      if (rowIndex === 1) {\n        return \"warning-row\";\n      } else if (rowIndex === 3) {\n        return \"success-row\";\n      }\n      return \"\";\n    },\n    queryQualityTag() {\n      var $this = this;\n      var temp1 = [{ k: \"TASK_ID\", op: \"eq\", v: \"400949091\" }];\n      var $url =\n        $this.$config.kd_tag +\n        \"tag/osm/QUALITY_TAG/query?tagsJson=\" +\n        encodeURIComponent(JSON.stringify(temp1));\n      $this.tableData = [];\n      sysApi\n        .getAsyncDatas({\n          url: $url,\n        })\n        .then((res) => {\n          console.log($this.$tags);\n          var model = $this.$tags[\"QUALITY_TAG\"] || {};\n          var modelEntity = model.fields || [];\n          var errorType = $this.$_.filter(modelEntity, {\n            fieldName: \"ERROR_TYPE\",\n          })[0];\n          var types = errorType.fieldType.fieldTypeValues;\n          var tagSource = $this.$_.filter(modelEntity, {\n            fieldName: \"TAG_SOURCE\",\n          })[0];\n          var source = tagSource.fieldType.fieldTypeValues;\n          var nodes = (res.result && res.result.node) || [];\n          var newDatas = {};\n          nodes.forEach(function (entity) {\n            let tags = util.formatTags(entity.tag);\n            let ERROR_TYPE = tags.ERROR_TYPE;\n            let FEATURE = tags.FEATURE;\n            let CHECK_ITEM_ID = tags.CHECK_ITEM_ID;\n            let type = $this.$_.filter(types, { value: ERROR_TYPE })[0];\n            let type_name = type && type.name ? type.name : \"\";\n            var obj = {\n              id: \"\",\n              state: \"xx\",\n              children: [],\n              errortype: type_name,\n              checknum: \"\",\n              datatype: \"\",\n              question: \"\",\n              tagsource: \"\",\n              progress: \"\",\n              pid: -1,\n              changed: false,\n              misstate: false,\n              shelve: false,\n            };\n            //数据分类\n            if (ERROR_TYPE == \"0\") {\n              if (!newDatas[CHECK_ITEM_ID + \"-\" + FEATURE]) {\n                newDatas[CHECK_ITEM_ID + \"-\" + FEATURE] = obj;\n                newDatas[CHECK_ITEM_ID + \"-\" + FEATURE].datatype = FEATURE;\n                newDatas[CHECK_ITEM_ID + \"-\" + FEATURE].datas = [];\n              }\n              newDatas[CHECK_ITEM_ID + \"-\" + FEATURE].datas.push(entity);\n            } else {\n              // if (ERROR_TYPE && FEATURE) {\n              if (!newDatas[ERROR_TYPE + \"-\" + FEATURE]) {\n                newDatas[ERROR_TYPE + \"-\" + FEATURE] = obj;\n                newDatas[ERROR_TYPE + \"-\" + FEATURE].datatype = FEATURE;\n                newDatas[ERROR_TYPE + \"-\" + FEATURE].datas = [];\n              }\n              newDatas[ERROR_TYPE + \"-\" + FEATURE].datas.push(entity);\n            }\n          });\n\n          var num = 1;\n          var results = [];\n          for (let i in newDatas) {\n            let item = newDatas[i];\n            item.id = num;\n            let data = $this.$_.clone(item.datas);\n            delete item.datas;\n            var subResult = [],\n              progress = 0;\n            data.forEach(function (d) {\n              let tags = util.formatTags(d.tag);\n              num++;\n              let tagSource =\n                $this.$_.filter(source, { value: tags.TAG_SOURCE })[0] || {};\n              let tagSourceName = tagSource.name;\n              if (\n                tagSource.value == \"4\" ||\n                tagSource.value == \"5\" ||\n                tagSource.value == \"6\" ||\n                tagSource.value == \"7\"\n              ) {\n                tagSourceName = \"作业标\";\n              }\n              let subObj = {\n                id: num,\n                state: d.id,\n                errortype: \"\",\n                children: [],\n                checknum: tags.CHECK_ITEM_ID || \"\",\n                datatype: item.datatype,\n                question: tags.DESC,\n                tagsource: tagSourceName || \"\",\n                progress: \"\",\n                pid: item.id,\n                entityId: d.id,\n                changed: false,\n                misstate: false,\n                shelve: false,\n              };\n              if (tags.STATE == \"0\" || tags.STATE == \"1\") {\n                subResult.unshift(subObj);\n              } else {\n                progress += 1;\n                subResult.push(subObj);\n              }\n            });\n            item.progress = progress + \"/\" + data.length;\n            if (data.length) {\n              item.children = subResult;\n              results.push(item);\n            }\n            num++;\n          }\n          $this.tableData = results;\n        });\n    },\n  },\n  components: {\n    footHeader,\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n.indexFooter {\n  float: left;\n  position: absolute;\n  bottom: 0px;\n  z-index: 100;\n  height: 20px;\n  width: calc(100% - 10px);\n  padding: 0px 5px;\n}\n.indexFooter .el-table .el-button {\n  padding: 2px;\n  min-height: 10px;\n}\n.indexFooter button.export {\n  position: absolute;\n  right: 15px;\n  top: 10px;\n}\n.indexFooter .el-drawer {\n  overflow: initial;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}