{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, vShow as _vShow, withDirectives as _withDirectives, withCtx as _withCtx, resolveDirective as _resolveDirective } from \"vue\";\nconst _hoisted_1 = {\n  class: \"demonstration\"\n};\nconst _hoisted_2 = {\n  class: \"mark el-icon-warning\"\n};\nexport function render(_ctx, _cache) {\n  const _component_contentSearch = _resolveComponent(\"contentSearch\");\n\n  const _component_el_image = _resolveComponent(\"el-image\");\n\n  const _component_contentEdit = _resolveComponent(\"contentEdit\");\n\n  const _component_el_scrollbar = _resolveComponent(\"el-scrollbar\");\n\n  const _component_contentPage = _resolveComponent(\"contentPage\");\n\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n  const _directive_loading = _resolveDirective(\"loading\");\n\n  return _openBlock(), _createBlock(\"div\", {\n    class: [\"tabs\", _ctx.paneClass]\n  }, [_createVNode(_component_contentSearch, {\n    onRefresh: _ctx.refresh,\n    onFinish: _ctx.finishTask,\n    onRefreshForm: _ctx.refreshForm\n  }, null, 8\n  /* PROPS */\n  , [\"onRefresh\", \"onFinish\", \"onRefreshForm\"]), _withDirectives(_createVNode(_component_el_tabs, {\n    class: \"contentTabs\",\n    modelValue: _ctx.activeName,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.activeName = $event),\n    type: \"border-card\",\n    onTabClick: _ctx.handleClick\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.lists, list => {\n      return _openBlock(), _createBlock(_component_el_tab_pane, {\n        label: list.name,\n        name: list.value,\n        key: list.name\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_scrollbar, null, {\n          default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.filterActiveLists, aList => {\n            return _openBlock(), _createBlock(\"div\", {\n              key: aList.id,\n              class: \"blockImage hide\",\n              onMouseenter: _cache[1] || (_cache[1] = $event => _ctx.mouseenter($event)),\n              onMouseleave: _cache[2] || (_cache[2] = $event => _ctx.mouseleave($event))\n            }, [_createVNode(_component_el_image, {\n              style: {\n                \"height\": \"170px\"\n              },\n              src: \"https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg\",\n              \"preview-src-list\": ['https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg'],\n              fit: \"fill\"\n            }, null, 8\n            /* PROPS */\n            , [\"preview-src-list\"]), _createVNode(_component_contentEdit, {\n              ref: \"contentEdit\",\n              editTags: aList.tags,\n              tagDatas: _ctx.tagDatas,\n              modelName: aList.modelName,\n              editDisabled: _ctx.editDisabled,\n              editId: aList.id,\n              entityId: aList.entityId,\n              onEditList: _ctx.editList,\n              onCheckList: _ctx.checkList,\n              onTagImage: _ctx.tagImage\n            }, null, 8\n            /* PROPS */\n            , [\"editTags\", \"tagDatas\", \"modelName\", \"editDisabled\", \"editId\", \"entityId\", \"onEditList\", \"onCheckList\", \"onTagImage\"]), _createVNode(\"span\", _hoisted_1, _toDisplayString(aList.id), 1\n            /* TEXT */\n            ), _withDirectives(_createVNode(\"i\", _hoisted_2, null, 512\n            /* NEED_PATCH */\n            ), [[_vShow, _ctx.renderMarkType(aList)]])], 32\n            /* HYDRATE_EVENTS */\n            );\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_contentPage, {\n          pageTotleNum: _ctx.pageTotleNum,\n          onPageChange: _ctx.pageChange\n        }, null, 8\n        /* PROPS */\n        , [\"pageTotleNum\", \"onPageChange\"])]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"label\", \"name\"]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\", \"onTabClick\"]), [[_directive_loading, _ctx.fullscreenLoading, void 0, {\n    fullscreen: true,\n    lock: true\n  }]])], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"sources":["D:\\web_editor_hd\\src\\main\\webapp\\batch-edit\\src\\components\\content.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"tabs\" :class=\"paneClass\">\n    <contentSearch\n      @refresh=\"refresh\"\n      @finish=\"finishTask\"\n      @refreshForm=\"refreshForm\"\n    />\n    <el-tabs\n      v-loading.fullscreen.lock=\"fullscreenLoading\"\n      class=\"contentTabs\"\n      v-model=\"activeName\"\n      type=\"border-card\"\n      @tab-click=\"handleClick\"\n    >\n      <el-tab-pane\n        v-for=\"list in lists\"\n        :label=\"list.name\"\n        :name=\"list.value\"\n        :key=\"list.name\"\n      >\n        <el-scrollbar>\n          <div\n            v-for=\"aList in filterActiveLists\"\n            :key=\"aList.id\"\n            class=\"blockImage hide\"\n            @mouseenter=\"mouseenter($event)\"\n            @mouseleave=\"mouseleave($event)\"\n          >\n            <el-image\n              style=\"height: 170px\"\n              src=\"https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg\"\n              :preview-src-list=\"[\n                'https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg',\n              ]\"\n              fit=\"fill\"\n            >\n            </el-image>\n            <contentEdit\n              ref=\"contentEdit\"\n              :editTags=\"aList.tags\"\n              :tagDatas=\"tagDatas\"\n              :modelName=\"aList.modelName\"\n              :editDisabled=\"editDisabled\"\n              :editId=\"aList.id\"\n              :entityId=\"aList.entityId\"\n              @editList=\"editList\"\n              @checkList=\"checkList\"\n              @tagImage=\"tagImage\"\n            />\n            <span class=\"demonstration\">{{ aList.id }}</span>\n            <i class=\"mark el-icon-warning\" v-show=\"renderMarkType(aList)\"></i>\n          </div>\n        </el-scrollbar>\n        <contentPage :pageTotleNum=\"pageTotleNum\" @pageChange=\"pageChange\" />\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport contentSearch from \"@/components/contentComponents/contentSearch.vue\";\nimport contentPage from \"@/components/contentComponents/contentPage.vue\";\nimport contentEdit from \"@/components/contentComponents/contentEdit.vue\";\nimport * as sysApi from \"../services/sys\";\nimport * as util from \"../services/util\";\nexport default {\n  name: \"search\",\n  props: [\"tagDatas\"],\n  data() {\n    return {\n      paneClass: \"\",\n      editDisabled: false,\n      fullscreenLoading: false,\n      lists: [\n        {\n          name: \"数据\",\n          value: \"DATA\",\n          modelName: \"DATA\",\n        },\n      ],\n      activeLists: [],\n      value: \"\",\n      taskId: null,\n      featureGroupId: null,\n      pageTotleNum: 0,\n      editHistory: {},\n      pageNum: 0,\n      tagImageId: -1,\n      tagHistoryData: [],\n      editQuestionTag: {},\n      activeName: \"DATA\",\n    };\n  },\n  computed: {\n    filterActiveLists() {\n      var activeList = this.activeLists[this.pageNum - 1];\n      var datas = activeList ? activeList.datas : [];\n      return datas;\n    },\n  },\n  mounted() {\n    this.refresh(1);\n    // editDisabled：属性编辑栏根据用户权限验证是否可修改\n    var role = util.isRoleAuth(this.$user);\n    if ([1, 3].includes(role)) {\n      this.editDisabled = false;\n    } else {\n      this.editDisabled = true;\n    }\n  },\n  methods: {\n    contentClass(param) {\n      this.paneClass = param.contentClass;\n    },\n    // 模型类型切换\n    handleClick(tab) {\n      console.log(tab);\n      return;\n    },\n    mouseenter(event) {\n      event.currentTarget.className = \"blockImage show\";\n    },\n    mouseleave(event) {\n      event.currentTarget.className = \"blockImage hide\";\n    },\n    logout() {\n      console.log(\"退出\");\n    },\n    // 是否被标记的状态\n    renderMarkType(tag) {\n      if (!tag) {\n        return;\n      }\n      var entity = this.tagHistoryData.find((d) => {\n        var newTag = d.newTag || {};\n        return newTag.ENTITY_ID == tag.id;\n      });\n      if (entity) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    editList(id, form) {\n      if (!this.editHistory[id]) {\n        this.editHistory[id] = {\n          id: id,\n          tags: {},\n        };\n      }\n      var pageNumData = this.activeLists[this.pageNum - 1];\n      if (pageNumData && pageNumData.datas) {\n        var entity = pageNumData.datas.find((d) => {\n          return d.id == id;\n        });\n        if (entity) {\n          for (var key in form) {\n            this.editHistory[id].tags[key] = form[key];\n            entity.tags[key] = form[key];\n          }\n        }\n      }\n    },\n    checkList(id, form) {\n      this.$emit(\"checkTagEdit\", id, form);\n    },\n    changeTagEditorForm(id, prop) {\n      this.$refs.contentEdit.changeTagEditorForm(id, prop);\n    },\n    // 问题标记--新增和删除\n    tagImage(id) {\nif(){\n\n}\n\n\n      if (!this.editQuestionTag[id]) {\n        this.editQuestionTag[id] = {\n          id: this.tagImageId + \"\",\n          properties: {\n            ENTITY_ID: id,\n            TASK_ID: this.taskId,\n            DESC: \"批量编辑：问题标记\",\n          },\n        };\n      } else {\n        this.editQuestionTag[id] = null;\n      }\n      this.tagImageId--;\n    },\n    // 查询当前任务--问题标记\n    queryTagImage() {\n      this.tagHistoryData = [];\n      this.editQuestionTag = {};\n      if (!this.taskId) {\n        return;\n      }\n\n      var $this = this;\n      var temp1 = [{ k: \"TASK_ID\", op: \"eq\", v: this.taskId }];\n      var $url =\n        $this.$config.kd_tag +\n        \"tag/osm/QUESTION_TAG/query?tagsJson=\" +\n        encodeURIComponent(JSON.stringify(temp1));\n      sysApi\n        .getAsyncDatas({\n          url: $url,\n        })\n        .then((res) => {\n          var nodes = (res.result && res.result.node) || [];\n          nodes.forEach((d) => {\n            var tags = util.formatTags(d.tag);\n            d.newTag = tags;\n            if(tags.ENTITY_ID){\nthis.editQuestionTag[tags.ENTITY_ID] = true;\n            }\n\n          });\n          this.tagHistoryData = nodes;\n        });\n    },\n    // 完成保存所修改的数据\n    finishTask() {\n      var $this = this;\n      $this.$emit(\"finishTask\", \"report\");\n      var list = [];\n      for (var id in $this.editHistory) {\n        list.push($this.editHistory[id]);\n      }\n      if (!list.length || !$this.taskId) {\n        return;\n      }\n      $this.fullscreenLoading = true;\n      var $url =\n        $this.$config.kds_data +\n        \"data/tags/edit?taskId=\" +\n        $this.taskId +\n        \"&featureGroupId=\" +\n        $this.featureGroupId;\n      sysApi\n        .postAsyncDatas({\n          url: $url,\n          data: list,\n        })\n        .then((res) => {\n          $this.message(res.code, res.message);\n          $this.fullscreenLoading = false;\n          console.log(\"完成\");\n          if (res.code == \"0\") {\n            $this.taskId = null;\n            $this.featureGroupId = null;\n            $this.$emit(\"finishTask\", \"task\");\n            $this.refresh();\n          }\n        });\n    },\n    // 刷新数据\n    refresh(param = {}) {\n      var page = param.page || this.pageNum;\n      if (param.id) {\n        this.taskId = param.id;\n        this.featureGroupId = param.featureGroupId;\n      }\n      this.queryTagImage();\n      this.findLists(page);\n    },\n    // 刷新报表\n    refreshForm() {\n      this.$emit(\"refreshForm\", this.taskId);\n    },\n    // 分页查询\n    pageChange(page) {\n      this.pageNum = page;\n    },\n    // 查询模型分类\n    findLists(page) {\n      var $this = this;\n      $this.pageTotleNum = 0;\n      $this.activeLists = [];\n      if (page) {\n        $this.pageNum = page;\n      }\n      if (!$this.taskId) {\n        return;\n      }\n      var $url =\n        $this.$config.kds_data +\n        \"data/tags/queryByGroup?taskId=\" +\n        1 +\n        \"&featureGroupId=\" +\n        $this.featureGroupId;\n      $this.fullscreenLoading = true;\n      sysApi\n        .getAsyncDatas({\n          url: $url,\n          data: {},\n        })\n        .then((res) => {\n          var results = res.result || [];\n          if (results.length) {\n            $this.pageNum = 1;\n          }\n          $this.fullscreenLoading = false;\n          $this.pageTotleNum = results.length;\n          $this.activeLists = results;\n        });\n    },\n    message(type, message) {\n      if (type == \"0\") {\n        this.$notify({\n          title: \"数据属性编辑\",\n          message: message,\n          type: \"success\",\n        });\n      } else {\n        this.$notify({\n          title: \"数据属性编辑\",\n          message: \"错误信息：\" + message,\n          type: \"warning\",\n        });\n      }\n    },\n  },\n  components: {\n    contentSearch,\n    contentPage,\n    contentEdit,\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n.tabs {\n  float: left;\n  width: 100%;\n  margin-bottom: 10px;\n  height: calc(100% - 140px);\n  border-bottom: 1px solid #e4e7ed;\n}\n.tabs.little {\n  z-index: 3000;\n  position: relative;\n  height: calc(100% - 640px);\n}\n.tabs.little .pages {\n  bottom: 0px;\n}\n.tabs .contentTabs {\n  height: 100%;\n}\n.tabs .contentTabs .el-tabs__content {\n  height: calc(100% - 50px);\n  padding-top: 10px;\n  background-color: #f2f4f9;\n  overflow: auto;\n}\n.tabs .contentTabs .el-tabs__content .el-tab-pane {\n  height: 100%;\n}\n.tabs .blockImage {\n  width: calc(20% - 30px);\n  margin: 0px 15px;\n  height: 200px;\n  float: left;\n  position: relative;\n}\n.tabs .blockImage .mark {\n  color: rgb(255, 0, 0);\n  position: absolute;\n  right: 5px;\n  bottom: 35px;\n  z-index: 1;\n}\n.tabs .blockImage img {\n  width: calc(100% - 4px);\n  height: calc(100% - 4px);\n  border: 2px solid rgba(58, 142, 230, 0);\n}\n.tabs .blockImage img:hover {\n  border: 2px solid rgba(58, 142, 230, 1);\n}\n.tabs .blockImage .demonstration {\n  float: left;\n  height: 30px;\n  position: absolute;\n  bottom: 0px;\n  width: 100%;\n  left: 0px;\n  line-height: 30px;\n  font-size: 16px;\n}\n.tabs .blockImage.hide .footHeaderToggle {\n  opacity: 0;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}