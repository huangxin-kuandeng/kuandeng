{"ast":null,"code":"import * as sysApi from \"../../services/sys\";\nexport default {\n  name: \"contentSearch\",\n\n  data() {\n    return {\n      modal: false,\n      centerDialogVisible: false,\n      cities: [],\n      value: \"\"\n    };\n  },\n\n  methods: {\n    form() {\n      this.$emit(\"refreshForm\");\n    },\n\n    refresh() {\n      this.$emit(\"refresh\");\n    },\n\n    save() {\n      this.$emit(\"finish\");\n    },\n\n    finish() {\n      if (!window.currentTask) {\n        return;\n      }\n\n      this.centerDialogVisible = true;\n    },\n\n    finishToProcess(isPass) {\n      // 0：正在启动， 1：无需启动检查服务\n      if (isPass == \"0\") {\n        this.centerDialogVisible = false;\n        this.$emit(\"remakeTask\");\n      } else if (isPass == \"1\") {\n        this.processPassStatus(true);\n      }\n    },\n\n    processPassStatus(isPass) {\n      var $this = this;\n      var _checkData = {\n        taskId: \"\" + window.currentTask.id,\n        properties: [{\n          id: \"passFlag\",\n          value: isPass + \"\"\n        }]\n      };\n      var $url = $this.$config.kts + \"form/form-data\";\n      sysApi.postAsyncDatas({\n        url: $url,\n        data: _checkData\n      }).then(res => {\n        console.log(res);\n        $this.centerDialogVisible = false;\n        $this.$emit(\"remakeTask\");\n      });\n    },\n\n    // 完成时,先调用检查\n    autoCheckStatus() {\n      var $this = this;\n      var bodyParam = {\n        activityId: window.currentTask.formatTags.currentActivity,\n        //工作流ID (tag中的currentActivity的值）环节名称\n        taskId: window.currentTask.taskId\n      };\n      var $url = $this.$config.kts + \"dispatch/job/start\";\n      sysApi.postAsyncDatas({\n        url: $url,\n        data: bodyParam\n      }).then(res => {\n        if (res.code != \"0\") {\n          $this.$notify({\n            title: \"检查服务\",\n            message: \"启动检查服务失败: \" + res.message,\n            type: \"warning\"\n          });\n          $this.centerDialogVisible = false;\n          return;\n        }\n\n        $this.finishToProcess(res.result);\n      });\n    }\n\n  }\n};","map":{"version":3,"sources":["D:\\web_editor_hd\\src\\main\\webapp\\batch-edit\\src\\components\\contentComponents\\contentSearch.vue"],"names":[],"mappings":"AAyCA,OAAO,KAAK,MAAZ,MAAwB,oBAAxB;AACA,eAAe;AACb,EAAA,IAAI,EAAE,eADO;;AAEb,EAAA,IAAI,GAAG;AACL,WAAO;AACL,MAAA,KAAK,EAAE,KADF;AAEL,MAAA,mBAAmB,EAAE,KAFhB;AAGL,MAAA,MAAM,EAAE,EAHH;AAIL,MAAA,KAAK,EAAE;AAJF,KAAP;AAMD,GATY;;AAUb,EAAA,OAAO,EAAE;AACP,IAAA,IAAI,GAAG;AACL,WAAK,KAAL,CAAW,aAAX;AACD,KAHM;;AAIP,IAAA,OAAO,GAAG;AACR,WAAK,KAAL,CAAW,SAAX;AACD,KANM;;AAOP,IAAA,IAAI,GAAG;AACL,WAAK,KAAL,CAAW,QAAX;AACD,KATM;;AAUP,IAAA,MAAM,GAAG;AACP,UAAI,CAAC,MAAM,CAAC,WAAZ,EAAyB;AACvB;AACF;;AACA,WAAK,mBAAL,GAA2B,IAA3B;AACD,KAfM;;AAgBP,IAAA,eAAe,CAAC,MAAD,EAAS;AACtB;AACA,UAAI,MAAK,IAAK,GAAd,EAAmB;AACjB,aAAK,mBAAL,GAA2B,KAA3B;AACA,aAAK,KAAL,CAAW,YAAX;AACF,OAHA,MAGO,IAAI,MAAK,IAAK,GAAd,EAAmB;AACxB,aAAK,iBAAL,CAAuB,IAAvB;AACF;AACD,KAxBM;;AAyBP,IAAA,iBAAiB,CAAC,MAAD,EAAS;AACxB,UAAI,KAAI,GAAI,IAAZ;AACA,UAAI,UAAS,GAAI;AACf,QAAA,MAAM,EAAE,KAAK,MAAM,CAAC,WAAP,CAAmB,EADjB;AAEf,QAAA,UAAU,EAAE,CACV;AACE,UAAA,EAAE,EAAE,UADN;AAEE,UAAA,KAAK,EAAE,MAAK,GAAI;AAFlB,SADU;AAFG,OAAjB;AASA,UAAI,IAAG,GAAI,KAAK,CAAC,OAAN,CAAc,GAAd,GAAoB,gBAA/B;AACA,MAAA,MAAK,CACF,cADH,CACkB;AACd,QAAA,GAAG,EAAE,IADS;AAEd,QAAA,IAAI,EAAE;AAFQ,OADlB,EAKG,IALH,CAKS,GAAD,IAAS;AACb,QAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACA,QAAA,KAAK,CAAC,mBAAN,GAA4B,KAA5B;AACA,QAAA,KAAK,CAAC,KAAN,CAAY,YAAZ;AACD,OATH;AAUD,KA/CM;;AAgDP;AACA,IAAA,eAAe,GAAG;AAChB,UAAI,KAAI,GAAI,IAAZ;AACA,UAAI,SAAQ,GAAI;AACd,QAAA,UAAU,EAAE,MAAM,CAAC,WAAP,CAAmB,UAAnB,CAA8B,eAD5B;AAC6C;AAC3D,QAAA,MAAM,EAAE,MAAM,CAAC,WAAP,CAAmB;AAFb,OAAhB;AAIA,UAAI,IAAG,GAAI,KAAK,CAAC,OAAN,CAAc,GAAd,GAAoB,oBAA/B;AACA,MAAA,MAAK,CACF,cADH,CACkB;AACd,QAAA,GAAG,EAAE,IADS;AAEd,QAAA,IAAI,EAAE;AAFQ,OADlB,EAKG,IALH,CAKS,GAAD,IAAS;AACb,YAAI,GAAG,CAAC,IAAJ,IAAY,GAAhB,EAAqB;AACnB,UAAA,KAAK,CAAC,OAAN,CAAc;AACZ,YAAA,KAAK,EAAE,MADK;AAEZ,YAAA,OAAO,EAAE,eAAe,GAAG,CAAC,OAFhB;AAGZ,YAAA,IAAI,EAAE;AAHM,WAAd;AAKA,UAAA,KAAK,CAAC,mBAAN,GAA4B,KAA5B;AACA;AACF;;AACA,QAAA,KAAK,CAAC,eAAN,CAAsB,GAAG,CAAC,MAA1B;AACD,OAhBH;AAiBD;;AAzEM;AAVI,CAAf","sourcesContent":["<template>\n  <el-dialog\n    title=\"信息确认\"\n    v-model=\"centerDialogVisible\"\n    width=\"30%\"\n    destroy-on-close\n    center\n  >\n    <strong>请确认是否所有数据已编辑完成并提交检查进入下一环节。</strong>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"autoCheckStatus\">确 定</el-button>\n        <el-button @click=\"centerDialogVisible = false\">取 消</el-button>\n      </span>\n    </template>\n  </el-dialog>\n  <div class=\"contentSearch\">\n    <el-button-group>\n      <el-button class=\"btn-form\" icon=\"el-icon-search\" @click=\"form()\"\n        >报表</el-button\n      >\n      <el-button class=\"btn-refresh\" icon=\"el-icon-refresh\" @click=\"refresh()\"\n        >刷新</el-button\n      >\n      <el-button\n        class=\"btn-save\"\n        icon=\"el-icon-document-checked\"\n        @click=\"save()\"\n        >保存</el-button\n      >\n      <el-button\n        class=\"btn-finish\"\n        icon=\"el-icon-folder-checked\"\n        @click=\"finish\"\n        >完成</el-button\n      >\n    </el-button-group>\n  </div>\n</template>\n\n<script>\nimport * as sysApi from \"../../services/sys\";\nexport default {\n  name: \"contentSearch\",\n  data() {\n    return {\n      modal: false,\n      centerDialogVisible: false,\n      cities: [],\n      value: \"\",\n    };\n  },\n  methods: {\n    form() {\n      this.$emit(\"refreshForm\");\n    },\n    refresh() {\n      this.$emit(\"refresh\");\n    },\n    save() {\n      this.$emit(\"finish\");\n    },\n    finish() {\n      if (!window.currentTask) {\n        return;\n      }\n      this.centerDialogVisible = true;\n    },\n    finishToProcess(isPass) {\n      // 0：正在启动， 1：无需启动检查服务\n      if (isPass == \"0\") {\n        this.centerDialogVisible = false;\n        this.$emit(\"remakeTask\");\n      } else if (isPass == \"1\") {\n        this.processPassStatus(true);\n      }\n    },\n    processPassStatus(isPass) {\n      var $this = this;\n      var _checkData = {\n        taskId: \"\" + window.currentTask.id,\n        properties: [\n          {\n            id: \"passFlag\",\n            value: isPass + \"\",\n          },\n        ],\n      };\n      var $url = $this.$config.kts + \"form/form-data\";\n      sysApi\n        .postAsyncDatas({\n          url: $url,\n          data: _checkData,\n        })\n        .then((res) => {\n          console.log(res);\n          $this.centerDialogVisible = false;\n          $this.$emit(\"remakeTask\");\n        });\n    },\n    // 完成时,先调用检查\n    autoCheckStatus() {\n      var $this = this;\n      var bodyParam = {\n        activityId: window.currentTask.formatTags.currentActivity, //工作流ID (tag中的currentActivity的值）环节名称\n        taskId: window.currentTask.taskId,\n      };\n      var $url = $this.$config.kts + \"dispatch/job/start\";\n      sysApi\n        .postAsyncDatas({\n          url: $url,\n          data: bodyParam,\n        })\n        .then((res) => {\n          if (res.code != \"0\") {\n            $this.$notify({\n              title: \"检查服务\",\n              message: \"启动检查服务失败: \" + res.message,\n              type: \"warning\",\n            });\n            $this.centerDialogVisible = false;\n            return;\n          }\n          $this.finishToProcess(res.result);\n        });\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n.contentSearch {\n  height: 40px;\n  float: left;\n  padding: 5px 10px;\n  position: absolute;\n  right: 0px;\n  z-index: 99;\n}\n.contentSearch button {\n  float: left;\n  padding: 0px 15px;\n  min-height: 30px;\n  height: 30px;\n  line-height: 30px;\n  width: auto;\n}\n.contentSearch .el-button-group {\n  float: left;\n  margin-left: 20px;\n}\n.contentSearch .el-button-group:last-child {\n  float: right;\n  margin-left: 0px;\n}\n.el-overlay {\n  z-index: 9999 !important;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}