{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_indexHeader = _resolveComponent(\"indexHeader\");\n\n  const _component_indexSearch = _resolveComponent(\"indexSearch\");\n\n  const _component_indexContent = _resolveComponent(\"indexContent\");\n\n  const _component_indexFooter = _resolveComponent(\"indexFooter\");\n\n  return _openBlock(), _createBlock(\"div\", _hoisted_1, [_createVNode(_component_indexHeader, {\n    msg: \"属性批量编辑\",\n    ref: \"header\"\n  }, null, 512), _createVNode(_component_indexSearch, {\n    onRefresh: $options.refresh,\n    ref: \"search\"\n  }, null, 8, [\"onRefresh\"]), _createVNode(_component_indexContent, {\n    tagDatas: $data.tagDatas,\n    onCheckTagEdit: $options.checkTagEdit,\n    onCheckTagCreate: $options.checkTagCreate,\n    onRefreshForm: $options.refreshForm,\n    onFinishTask: $options.finishTask,\n    ref: \"content\"\n  }, null, 8, [\"tagDatas\", \"onCheckTagEdit\", \"onCheckTagCreate\", \"onRefreshForm\", \"onFinishTask\"]), _createVNode(_component_indexFooter, {\n    ref: \"footer\",\n    tagEdits: $data.tagEdits,\n    onTagDataUpdateState: $options.tagDataUpdateState,\n    onTagDataChange: $options.tagDataChange,\n    onDrawerOpened: $options.drawerOpened,\n    onDrawerClose: $options.drawerClose,\n    onContentPageChange: $options.contentPageChange\n  }, null, 8, [\"tagEdits\", \"onTagDataUpdateState\", \"onTagDataChange\", \"onDrawerOpened\", \"onDrawerClose\", \"onContentPageChange\"])]);\n}","map":{"version":3,"sources":["D:\\web_editor_hd\\src\\main\\webapp\\batch-edit\\src\\views\\Home.vue"],"names":[],"mappings":";;AACO,EAAA,KAAK,EAAC;;;;;;;;;;;uBAAX,YAAA,CAoBM,KApBN,EAAA,UAAA,EAoBM,CAnBJ,YAAA,CAAyC,sBAAzC,EAAyC;AAA5B,IAAA,GAAG,EAAC,QAAwB;AAAf,IAAA,GAAG,EAAC;AAAW,GAAzC,E,IAAA,E,GAAA,CAmBI,EAlBJ,YAAA,CAA+C,sBAA/C,EAA+C;AAAjC,IAAA,SAAO,EAAE,QAAA,CAAA,OAAwB;AAAf,IAAA,GAAG,EAAC;AAAW,GAA/C,E,IAAA,E,CAAA,E,aAAA,CAkBI,EAjBJ,YAAA,CAOE,uBAPF,EAOE;AANC,IAAA,QAAQ,EAAE,KAAA,CAAA,QAMX;AALC,IAAA,cAAY,EAAE,QAAA,CAAA,YAKf;AAJC,IAAA,gBAAc,EAAE,QAAA,CAAA,cAIjB;AAHC,IAAA,aAAW,EAAE,QAAA,CAAA,WAGd;AAFC,IAAA,YAAU,EAAE,QAAA,CAAA,UAEb;AADA,IAAA,GAAG,EAAC;AACJ,GAPF,E,IAAA,E,CAAA,E,mFAAA,CAiBI,EATJ,YAAA,CAQE,sBARF,EAQE;AAPA,IAAA,GAAG,EAAC,QAOJ;AANC,IAAA,QAAQ,EAAE,KAAA,CAAA,QAMX;AALC,IAAA,oBAAkB,EAAE,QAAA,CAAA,kBAKrB;AAJC,IAAA,eAAa,EAAE,QAAA,CAAA,aAIhB;AAHC,IAAA,cAAY,EAAE,QAAA,CAAA,YAGf;AAFC,IAAA,aAAW,EAAE,QAAA,CAAA,WAEd;AADC,IAAA,mBAAiB,EAAE,QAAA,CAAA;AACpB,GARF,E,IAAA,E,CAAA,E,iHAAA,CASI,CApBN,C","sourcesContent":["<template>\n  <div class=\"home\">\n    <indexHeader msg=\"属性批量编辑\" ref=\"header\" />\n    <indexSearch @refresh=\"refresh\" ref=\"search\" />\n    <indexContent\n      :tagDatas=\"tagDatas\"\n      @checkTagEdit=\"checkTagEdit\"\n      @checkTagCreate=\"checkTagCreate\"\n      @refreshForm=\"refreshForm\"\n      @finishTask=\"finishTask\"\n      ref=\"content\"\n    />\n    <indexFooter\n      ref=\"footer\"\n      :tagEdits=\"tagEdits\"\n      @tagDataUpdateState=\"tagDataUpdateState\"\n      @tagDataChange=\"tagDataChange\"\n      @drawerOpened=\"drawerOpened\"\n      @drawerClose=\"drawerClose\"\n      @contentPageChange=\"contentPageChange\"\n    />\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport indexHeader from \"@/components/header.vue\";\nimport indexSearch from \"@/components/search.vue\";\nimport indexContent from \"@/components/content.vue\";\nimport indexFooter from \"@/components/footerForm.vue\";\n\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      tagDatas: [],\n      tagEdits: {},\n    };\n  },\n  components: {\n    indexHeader,\n    indexSearch,\n    indexContent,\n    indexFooter,\n  },\n  methods: {\n    contentPageChange(row) {\n      this.$refs.content.contentPageChange(row);\n    },\n    refresh(id = \"\", featureGroupId = \"\") {\n      this.tagDatas = [];\n      this.$refs.content.refresh({\n        page: 1,\n        id: id,\n        featureGroupId: featureGroupId,\n      });\n      this.$refs.footer.queryQualityTag(id);\n    },\n    refreshForm(id) {\n      this.tagDatas = [];\n      this.$refs.footer.queryQualityTag(id);\n    },\n    // 质检标记报表数据变化时，更新所有标信息\n    tagDataChange(data) {\n      this.tagDatas = data;\n    },\n    // 质检标记报表单数据修改状态时，更新数据内的状态\n    tagDataUpdateState(id, properties, type) {\n      var updateData = this.tagDatas.find((d) => {\n        return d.id == id;\n      });\n      if (updateData) {\n        var updateTag = updateData.tag || [];\n        for (var prop in properties) {\n          var updateTagProp = updateTag.find((s) => {\n            return s.k == prop;\n          });\n          if (updateTagProp) {\n            updateTagProp.v = properties[prop];\n            updateData.cloneTag[prop] = properties[prop];\n          } else {\n            updateData.tag.push({\n              k: prop,\n              v: properties[prop],\n            });\n            updateData.cloneTag[prop] = properties[prop];\n          }\n        }\n        !type &&\n          this.$refs.content.changeTagEditorForm(updateData.id, properties);\n      }\n    },\n    finishTask(type) {\n      this.tagDatas = [];\n      if (type == \"report\") {\n        this.$refs.footer.finishDatas();\n      } else if (type == \"task\") {\n        this.$refs.search.findTasks();\n      }\n    },\n    // 质检标属性编辑：点击确定或分页时执行\n    checkTagEdit(id, form, editId, modelName) {\n      // this.tagEdits[id] = form;\n      this.$refs.footer.updateTagDatas(id, form, editId, modelName);\n      this.tagDataUpdateState(id, form, true);\n    },\n    checkTagCreate(id, form, editId, modelName) {\n      this.$refs.footer.updateTagDatas(id, form, editId, modelName);\n      var properties = this.$_.cloneDeep(form);\n      properties.FEATURE_ID = editId;\n      properties.FEATURE = modelName;\n      this.tagDatas.push({\n        id: id,\n        cloneTag: properties,\n        tag: [],\n        modelName: \"QUALITY_TAG\",\n      });\n      // this.tagDataUpdateState(id, form, true);\n    },\n    drawerOpened() {\n      this.$refs.content.contentClass({\n        contentClass: \"little\",\n      });\n    },\n    drawerClose() {\n      this.$refs.content.contentClass({\n        contentClass: \"\",\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\nbody {\n  width: 100vw;\n  height: 100vh;\n  margin: 0px;\n}\n.home {\n  float: left;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  background-color: #f2f4f9;\n}\n.el-popover,\n.el-select__popper,\n.el-notification,\n.el-image-viewer__wrapper,\n.el-message {\n  z-index: 4445 !important;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}