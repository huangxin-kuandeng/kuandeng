{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"indexFooter\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"导出\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_footHeader = _resolveComponent(\"footHeader\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  const _component_el_drawer = _resolveComponent(\"el-drawer\");\n\n  return _openBlock(), _createBlock(\"div\", _hoisted_1, [_createVNode(_component_footHeader, {\n    onTableToggle: $options.tableToggle,\n    hideHeader: true\n  }, null, 8\n  /* PROPS */\n  , [\"onTableToggle\"]), _createVNode(_component_el_drawer, {\n    ref: \"drawer\",\n    title: \"\",\n    modelValue: $data.table,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.table = $event),\n    direction: \"btt\",\n    size: \"size\",\n    modal: false,\n    \"close-on-press-escape\": false,\n    \"with-header\": false,\n    onOpened: _cache[3] || (_cache[3] = $event => $options.drawerOpened()),\n    onClose: _cache[4] || (_cache[4] = $event => $options.drawerClose())\n  }, {\n    default: _withCtx(() => [_createVNode(_component_footHeader, {\n      onTableToggle: $options.tableToggle,\n      hideHeader: false\n    }, null, 8\n    /* PROPS */\n    , [\"onTableToggle\"]), _createVNode(_component_el_button, {\n      class: \"export\",\n      type: \"default\",\n      icon: \"el-icon-upload2\",\n      title: \"导出\",\n      onClick: _cache[1] || (_cache[1] = $event => $options.exports())\n    }, {\n      default: _withCtx(() => [_hoisted_2]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_table, {\n      data: $data.tableData,\n      id: \"out-table\",\n      style: {\n        \"width\": \"100%\",\n        \"margin-bottom\": \"20px\"\n      },\n      \"row-key\": \"id\",\n      border: \"\",\n      lazy: \"\",\n      \"highlight-current-row\": \"\",\n      load: $options.loadChildren,\n      \"row-class-name\": $options.tableRowClassName,\n      \"empty-text\": \" - \",\n      \"max-height\": \"400\",\n      \"tree-props\": {\n        children: 'children',\n        hasChildren: 'hasChildren'\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        fixed: \"left\",\n        label: \"状态\",\n        width: \"120\",\n        type: \"\"\n      }, {\n        default: _withCtx(scope => [_createVNode(_component_el_button, {\n          icon: \"el-icon-check\",\n          type: scope.row.status == '4' ? 'success' : 'info',\n          onClick: $event => $options.changeStatus(scope.row, '4'),\n          size: \"mini\",\n          title: \"已修改\",\n          circle: \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"type\", \"onClick\"]), _createVNode(_component_el_button, {\n          icon: \"el-icon-close\",\n          type: scope.row.status == '2' ? 'success' : 'info',\n          onClick: $event => $options.changeStatus(scope.row, '2'),\n          size: \"mini\",\n          title: \"误报\",\n          circle: \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"type\", \"onClick\"]), _createVNode(_component_el_button, {\n          icon: \"el-icon-right\",\n          type: scope.row.status == '3' ? 'success' : 'info',\n          onClick: $event => $options.changeStatus(scope.row, '3'),\n          size: \"mini\",\n          title: \"搁置\",\n          circle: \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"type\", \"onClick\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_table_column, {\n        prop: \"errortype\",\n        label: \"错误类别\",\n        width: \"180\",\n        type: \"\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"checknum\",\n        label: \"检查项编码\",\n        width: \"180\",\n        type: \"\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"datatype\",\n        label: \"数据类型\",\n        type: \"\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"question\",\n        label: \"问题描述\",\n        type: \"\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"tagsource\",\n        label: \"标记类型\",\n        type: \"\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"progress\",\n        label: \"核标进度\",\n        type: \"\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        width: \"100\"\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"data\", \"load\", \"row-class-name\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"])]);\n}","map":{"version":3,"sources":["D:\\web_editor_hd\\src\\main\\webapp\\batch-edit\\src\\components\\footerForm.vue"],"names":[],"mappings":";;AACO,EAAA,KAAK,EAAC;;;iDAqBJ,I;;;;;;;;;;;;;uBArBP,YAAA,CAoGM,KApGN,EAAA,UAAA,EAoGM,CAnGJ,YAAA,CAA4D,qBAA5D,EAA4D;AAA/C,IAAA,aAAW,EAAE,QAAA,CAAA,WAAkC;AAApB,IAAA,UAAU,EAAE;AAAQ,GAA5D,E,IAAA,E;;AAAA,I,iBAAA,CAmGI,EAlGJ,YAAA,CAiGY,oBAjGZ,EAiGY;AAhGV,IAAA,GAAG,EAAC,QAgGM;AA/FV,IAAA,KAAK,EAAC,EA+FI;gBA9FD,KAAA,CAAA,KA8FC;+DA9FD,KAAA,CAAA,KAAA,GAAK,M,CA8FJ;AA7FV,IAAA,SAAS,EAAC,KA6FA;AA5FV,IAAA,IAAI,EAAC,MA4FK;AA3FT,IAAA,KAAK,EAAE,KA2FE;AA1FT,6BAAuB,KA0Fd;AAzFT,mBAAa,KAyFJ;AAxFT,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,MAAA,IAAE,QAAA,CAAA,YAAA,EAAF,CAwFG;AAvFT,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,MAAA,IAAE,QAAA,CAAA,WAAA,EAAF;AAuFI,GAjGZ,E;sBAYE,MAA6D,CAA7D,YAAA,CAA6D,qBAA7D,EAA6D;AAAhD,MAAA,aAAW,EAAE,QAAA,CAAA,WAAmC;AAArB,MAAA,UAAU,EAAE;AAAS,KAA7D,E,IAAA,E;;AAAA,M,iBAAA,CAA6D,EAC7D,YAAA,CAOC,oBAPD,EAOC;AANC,MAAA,KAAK,EAAC,QAMP;AALC,MAAA,IAAI,EAAC,SAKN;AAJC,MAAA,IAAI,EAAC,iBAIN;AAHC,MAAA,KAAK,EAAC,IAGP;AAFE,MAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,MAAA,IAAE,QAAA,CAAA,OAAA,EAAF;AAEP,KAPD,E;wBAMG,MAAE,C,UAAA,C;;;;KANL,CAD6D,EAS7D,YAAA,CA2EW,mBA3EX,EA2EW;AA1ER,MAAA,IAAI,EAAE,KAAA,CAAA,SA0EE;AAzET,MAAA,EAAE,EAAC,WAyEM;AAxET,MAAA,KAAwC,EAAxC;AAAA,iBAAA,MAAA;AAAA,yBAAA;AAAA,OAwES;AAvET,iBAAQ,IAuEC;AAtET,MAAA,MAAM,EAAN,EAsES;AArET,MAAA,IAAI,EAAJ,EAqES;AApET,+BAAA,EAoES;AAnER,MAAA,IAAI,EAAE,QAAA,CAAA,YAmEE;AAlER,wBAAgB,QAAA,CAAA,iBAkER;AAjET,oBAAW,KAiEF;AAhET,oBAAW,KAgEF;AA/DR,oBAAY;AAAA,QAAA,QAAA,EAAA,UAAA;AAAA,QAAA,WAAA,EAAA;AAAA;AA+DJ,KA3EX,E;wBAcE,MA2BkB,CA3BlB,YAAA,CA2BkB,0BA3BlB,EA2BkB;AA3BD,QAAA,KAAK,EAAC,MA2BL;AA3BY,QAAA,KAAK,EAAC,IA2BlB;AA3BuB,QAAA,KAAK,EAAC,KA2B7B;AA3BmC,QAAA,IAAI,EAAC;AA2BxC,OA3BlB,E;AACa,QAAA,OAAO,EAAA,QAAA,CAAO,KACvB,IADuB,CACvB,YAAA,CAOa,oBAPb,EAOa;AANX,UAAA,IAAI,EAAC,eAMM;AALV,UAAA,IAAI,EAAE,KAAK,CAAC,GAAN,CAAU,MAAV,IAAgB,GAAhB,GAAgB,SAAhB,GAAgB,MAKZ;AAJV,UAAA,OAAK,EAAA,MAAA,IAAE,QAAA,CAAA,YAAA,CAAa,KAAK,CAAC,GAAnB,EAAsB,GAAtB,CAIG;AAHX,UAAA,IAAI,EAAC,MAGM;AAFX,UAAA,KAAK,EAAC,KAEK;AADX,UAAA,MAAM,EAAN;AACW,SAPb,E,IAAA,E;;AAAA,U,mBAAA,CADuB,EASvB,YAAA,CAOa,oBAPb,EAOa;AANX,UAAA,IAAI,EAAC,eAMM;AALV,UAAA,IAAI,EAAE,KAAK,CAAC,GAAN,CAAU,MAAV,IAAgB,GAAhB,GAAgB,SAAhB,GAAgB,MAKZ;AAJV,UAAA,OAAK,EAAA,MAAA,IAAE,QAAA,CAAA,YAAA,CAAa,KAAK,CAAC,GAAnB,EAAsB,GAAtB,CAIG;AAHX,UAAA,IAAI,EAAC,MAGM;AAFX,UAAA,KAAK,EAAC,IAEK;AADX,UAAA,MAAM,EAAN;AACW,SAPb,E,IAAA,E;;AAAA,U,mBAAA,CATuB,EAiBvB,YAAA,CAOa,oBAPb,EAOa;AANX,UAAA,IAAI,EAAC,eAMM;AALV,UAAA,IAAI,EAAE,KAAK,CAAC,GAAN,CAAU,MAAV,IAAgB,GAAhB,GAAgB,SAAhB,GAAgB,MAKZ;AAJV,UAAA,OAAK,EAAA,MAAA,IAAE,QAAA,CAAA,YAAA,CAAa,KAAK,CAAC,GAAnB,EAAsB,GAAtB,CAIG;AAHX,UAAA,IAAI,EAAC,MAGM;AAFX,UAAA,KAAK,EAAC,IAEK;AADX,UAAA,MAAM,EAAN;AACW,SAPb,E,IAAA,E;;AAAA,U,mBAAA,CAjBuB,CAAP,C;;;;OADpB,CA2BkB,EAClB,YAAA,CAKmB,0BALnB,EAKmB;AAJjB,QAAA,IAAI,EAAC,WAIY;AAHjB,QAAA,KAAK,EAAC,MAGW;AAFjB,QAAA,KAAK,EAAC,KAEW;AADjB,QAAA,IAAI,EAAC;AACY,OALnB,CADkB,EAOlB,YAAA,CAKmB,0BALnB,EAKmB;AAJjB,QAAA,IAAI,EAAC,UAIY;AAHjB,QAAA,KAAK,EAAC,OAGW;AAFjB,QAAA,KAAK,EAAC,KAEW;AADjB,QAAA,IAAI,EAAC;AACY,OALnB,CAPkB,EAalB,YAAA,CAImB,0BAJnB,EAImB;AAHjB,QAAA,IAAI,EAAC,UAGY;AAFjB,QAAA,KAAK,EAAC,MAEW;AADjB,QAAA,IAAI,EAAC;AACY,OAJnB,CAbkB,EAkBlB,YAAA,CAImB,0BAJnB,EAImB;AAHjB,QAAA,IAAI,EAAC,UAGY;AAFjB,QAAA,KAAK,EAAC,MAEW;AADjB,QAAA,IAAI,EAAC;AACY,OAJnB,CAlBkB,EAuBlB,YAAA,CAImB,0BAJnB,EAImB;AAHjB,QAAA,IAAI,EAAC,WAGY;AAFjB,QAAA,KAAK,EAAC,MAEW;AADjB,QAAA,IAAI,EAAC;AACY,OAJnB,CAvBkB,EA4BlB,YAAA,CAImB,0BAJnB,EAImB;AAHjB,QAAA,IAAI,EAAC,UAGY;AAFjB,QAAA,KAAK,EAAC,MAEW;AADjB,QAAA,IAAI,EAAC;AACY,OAJnB,CA5BkB,EAiClB,YAAA,CAA0D,0BAA1D,EAA0D;AAAzC,QAAA,KAAK,EAAC,IAAmC;AAA9B,QAAA,KAAK,EAAC;AAAwB,OAA1D,CAjCkB,C;;;;KAzCpB,E;;AAAA,M,kCAAA,CAT6D,C;;;;GAZ/D,E;;AAAA,I,cAAA,CAkGI,CApGN,C","sourcesContent":["<template>\n  <div class=\"indexFooter\">\n    <footHeader @tableToggle=\"tableToggle\" :hideHeader=\"true\" />\n    <el-drawer\n      ref=\"drawer\"\n      title=\"\"\n      v-model=\"table\"\n      direction=\"btt\"\n      size=\"size\"\n      :modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :with-header=\"false\"\n      @opened=\"drawerOpened()\"\n      @close=\"drawerClose()\"\n    >\n      <footHeader @tableToggle=\"tableToggle\" :hideHeader=\"false\" />\n      <el-button\n        class=\"export\"\n        type=\"default\"\n        icon=\"el-icon-upload2\"\n        title=\"导出\"\n        @click=\"exports()\"\n        >导出</el-button\n      >\n      <el-table\n        :data=\"tableData\"\n        id=\"out-table\"\n        style=\"width: 100%; margin-bottom: 20px\"\n        row-key=\"id\"\n        border\n        lazy\n        highlight-current-row\n        :load=\"loadChildren\"\n        :row-class-name=\"tableRowClassName\"\n        empty-text=\" - \"\n        max-height=\"400\"\n        :tree-props=\"{ children: 'children', hasChildren: 'hasChildren' }\"\n      >\n        <el-table-column fixed=\"left\" label=\"状态\" width=\"120\" type=\"\">\n          <template #default=\"scope\">\n            <el-button\n              icon=\"el-icon-check\"\n              :type=\"scope.row.status == '4' ? 'success' : 'info'\"\n              @click=\"changeStatus(scope.row, '4')\"\n              size=\"mini\"\n              title=\"已修改\"\n              circle\n            ></el-button>\n            <el-button\n              icon=\"el-icon-close\"\n              :type=\"scope.row.status == '2' ? 'success' : 'info'\"\n              @click=\"changeStatus(scope.row, '2')\"\n              size=\"mini\"\n              title=\"误报\"\n              circle\n            ></el-button>\n            <el-button\n              icon=\"el-icon-right\"\n              :type=\"scope.row.status == '3' ? 'success' : 'info'\"\n              @click=\"changeStatus(scope.row, '3')\"\n              size=\"mini\"\n              title=\"搁置\"\n              circle\n            ></el-button>\n          </template>\n        </el-table-column>\n        <el-table-column\n          prop=\"errortype\"\n          label=\"错误类别\"\n          width=\"180\"\n          type=\"\"\n        ></el-table-column>\n        <el-table-column\n          prop=\"checknum\"\n          label=\"检查项编码\"\n          width=\"180\"\n          type=\"\"\n        ></el-table-column>\n        <el-table-column\n          prop=\"datatype\"\n          label=\"数据类型\"\n          type=\"\"\n        ></el-table-column>\n        <el-table-column\n          prop=\"question\"\n          label=\"问题描述\"\n          type=\"\"\n        ></el-table-column>\n        <el-table-column\n          prop=\"tagsource\"\n          label=\"标记类型\"\n          type=\"\"\n        ></el-table-column>\n        <el-table-column\n          prop=\"progress\"\n          label=\"核标进度\"\n          type=\"\"\n        ></el-table-column>\n        <el-table-column label=\"操作\" width=\"100\"></el-table-column>\n      </el-table>\n    </el-drawer>\n  </div>\n</template>\n\n<script>\nimport footHeader from \"@/components/contentComponents/footFormHeader.vue\";\nimport * as sysApi from \"../services/sys\";\nimport * as util from \"../services/util\";\n// 引入导出Excel表格依赖\nimport FileSaver from \"file-saver\";\nimport XLSX from \"xlsx\";\nexport default {\n  name: \"indexFooter\",\n  props: [],\n  data() {\n    return {\n      size: \"500px\",\n      table: false,\n      tableData: [],\n      editDatas: {},\n      tableDataChild: {},\n    };\n  },\n  mounted() {\n    this.queryQualityTag();\n  },\n  computed: {\n    // tableRowType(row, rowIndex) {\n    //   return \"success\";\n    // },\n  },\n  methods: {\n    exports() {\n      return;\n      /* 从表生成工作簿对象 */\n      var wb = XLSX.utils.table_to_book(document.querySelector(\"#out-table\"));\n      /* 获取二进制字符串作为输出 */\n      var wbout = XLSX.write(wb, {\n        bookType: \"xlsx\",\n        bookSST: true,\n        type: \"array\",\n      });\n      try {\n        FileSaver.saveAs(\n          //Blob 对象表示一个不可变、原始数据的类文件对象。\n          //Blob 表示的不一定是JavaScript原生格式的数据。\n          //File 接口基于Blob，继承了 blob 的功能并将其扩展使其支持用户系统上的文件。\n          //返回一个新创建的 Blob 对象，其内容由参数中给定的数组串联组成。\n          new Blob([wbout], { type: \"application/octet-stream\" }),\n          //设置导出文件名称\n          \"sheetjs.xlsx\"\n        );\n      } catch (e) {\n        if (typeof console !== \"undefined\") console.log(e, wbout);\n      }\n      return wbout;\n    },\n    tableToggle(type) {\n      this.table = type;\n    },\n    tableRowClassName({ row }) {\n      if (row.pid === -1) {\n        return \"warning-row\";\n      }\n      return \"\";\n    },\n    // 更新质检标记的属性\n    updateTagDatas(id, form) {\n      if (!this.editDatas[id]) {\n        this.editDatas[id] = {\n          id: id,\n          properties: {},\n        };\n      }\n      for (var name in form) {\n        this.editDatas[id].properties[name] = form[name];\n      }\n      for (var f_id in this.tableDataChild) {\n        var childs = this.tableDataChild[f_id];\n        var thisChild = childs.find((d) => {\n          return d.entityId == id;\n        });\n        if (thisChild && form.STATE) {\n          thisChild.tags.STATE = form.STATE;\n        }\n      }\n    },\n    changeStatus(row, state) {\n      row.status = state;\n      if (row.pid === -1) {\n        var child = this.tableDataChild[row.id] || [];\n        child.forEach((d) => {\n          d.status = state;\n          this.updateTagDatas(d.entityId, { STATE: state });\n          this.$emit(\n            \"tagDataUpdateState\",\n            d.entityId,\n            this.editDatas[d.entityId].properties\n          );\n        });\n      } else {\n        this.updateTagDatas(row.entityId, { STATE: state });\n        this.$emit(\n          \"tagDataUpdateState\",\n          row.entityId,\n          this.editDatas[row.entityId].properties\n        );\n      }\n    },\n    // 保存报表所修改的数据\n    finishDatas() {\n      var $this = this;\n      var $url = $this.$config.kd_tag + \"tag/QUALITY_TAG/update\";\n      var edits = [];\n      for (var id in $this.editDatas) {\n        edits.push($this.editDatas[id]);\n      }\n      if (!edits.length) {\n        $this.tableData = [];\n        $this.editDatas = {};\n        $this.tableDataChild = {};\n        return;\n      }\n      sysApi\n        .postAsyncDatas({\n          url: $url,\n          data: edits,\n        })\n        .then((res) => {\n          if (res.code == \"0\" && res.result) {\n            $this.$notify({\n              title: \"质量标记报表\",\n              message: res.message,\n              type: \"success\",\n            });\n            $this.queryQualityTag();\n          } else {\n            $this.$notify({\n              title: \"质量标记报表\",\n              message: res.message,\n              type: \"warning\",\n            });\n          }\n        });\n    },\n    loadChildren(tree, treeNode, resolve) {\n      setTimeout(() => {\n        resolve(this.tableDataChild[tree.id]);\n      }, 500);\n    },\n    queryQualityTag(id) {\n      var $this = this;\n      $this.tableData = [];\n      $this.editDatas = {};\n      $this.tableDataChild = {};\n      if (!id) {\n        return;\n      }\n      var temp1 = [{ k: \"TASK_ID\", op: \"eq\", v: id }];\n      var $url =\n        $this.$config.kd_tag +\n        \"tag/osm/QUALITY_TAG/query?tagsJson=\" +\n        encodeURIComponent(JSON.stringify(temp1));\n      sysApi\n        .getAsyncDatas({\n          url: $url,\n        })\n        .then((res) => {\n          console.log($this.$tags);\n          var model = $this.$tags[\"QUALITY_TAG\"] || {};\n          var modelEntity = model.fields || [];\n          var errorType = $this.$_.filter(modelEntity, {\n            fieldName: \"ERROR_TYPE\",\n          })[0];\n          var types = errorType.fieldType.fieldTypeValues;\n          var tagSource = $this.$_.filter(modelEntity, {\n            fieldName: \"TAG_SOURCE\",\n          })[0];\n          var source = tagSource.fieldType.fieldTypeValues;\n          var nodes = (res.result && res.result.node) || [];\n          var newDatas = {};\n          nodes.forEach(function (entity) {\n            let tags = util.formatTags(entity.tag);\n            entity.cloneTag = tags;\n            let ERROR_TYPE = tags.ERROR_TYPE;\n            let FEATURE = tags.FEATURE;\n            let CHECK_ITEM_ID = tags.CHECK_ITEM_ID;\n            let type = $this.$_.filter(types, { value: ERROR_TYPE })[0];\n            let type_name = type && type.name ? type.name : \"\";\n            var obj = {\n              id: \"\",\n              state: \"xx\",\n              children: [],\n              errortype: type_name,\n              checknum: \"\",\n              datatype: \"\",\n              question: \"\",\n              tagsource: \"\",\n              progress: \"\",\n              pid: -1,\n              hasChildren: false,\n              status: 0,\n            };\n            //数据分类\n            if (ERROR_TYPE == \"0\") {\n              if (!newDatas[CHECK_ITEM_ID + \"-\" + FEATURE]) {\n                newDatas[CHECK_ITEM_ID + \"-\" + FEATURE] = obj;\n                newDatas[CHECK_ITEM_ID + \"-\" + FEATURE].datatype = FEATURE;\n                newDatas[CHECK_ITEM_ID + \"-\" + FEATURE].datas = [];\n              }\n              newDatas[CHECK_ITEM_ID + \"-\" + FEATURE].datas.push(entity);\n            } else {\n              // if (ERROR_TYPE && FEATURE) {\n              if (!newDatas[ERROR_TYPE + \"-\" + FEATURE]) {\n                newDatas[ERROR_TYPE + \"-\" + FEATURE] = obj;\n                newDatas[ERROR_TYPE + \"-\" + FEATURE].datatype = FEATURE;\n                newDatas[ERROR_TYPE + \"-\" + FEATURE].datas = [];\n              }\n              newDatas[ERROR_TYPE + \"-\" + FEATURE].datas.push(entity);\n            }\n          });\n          $this.$emit(\"tagDataChange\", nodes);\n\n          var num = 1;\n          var results = [];\n          for (let i in newDatas) {\n            let item = newDatas[i];\n            item.id = num;\n            let data = $this.$_.clone(item.datas);\n            delete item.datas;\n            var subResult = [],\n              progress = 0;\n            data.forEach(function (d) {\n              let tags = util.formatTags(d.tag);\n              num++;\n              let tagSource =\n                $this.$_.filter(source, { value: tags.TAG_SOURCE })[0] || {};\n              let tagSourceName = tagSource.name;\n              if (\n                tagSource.value == \"4\" ||\n                tagSource.value == \"5\" ||\n                tagSource.value == \"6\" ||\n                tagSource.value == \"7\"\n              ) {\n                tagSourceName = \"作业标\";\n              }\n              let subObj = {\n                id: num,\n                state: d.id,\n                errortype: \"\",\n                children: [],\n                tags: tags,\n                checknum: tags.CHECK_ITEM_ID || \"\",\n                datatype: item.datatype,\n                question: tags.DESC,\n                tagsource: tagSourceName || \"\",\n                progress: \"\",\n                pid: item.id,\n                entityId: d.id,\n                changed: false,\n                misstate: false,\n                shelve: false,\n                status: tags.STATE || 0,\n              };\n              if (tags.STATE == \"0\" || tags.STATE == \"1\") {\n                subResult.unshift(subObj);\n              } else {\n                progress += 1;\n                subResult.push(subObj);\n              }\n            });\n            item.progress = progress + \"/\" + data.length;\n            if (data.length) {\n              item.hasChildren = true;\n              $this.tableDataChild[item.id] = subResult;\n              results.push(item);\n            }\n            num++;\n          }\n          $this.tableData = results;\n        });\n    },\n    drawerOpened() {\n      this.$emit(\"drawerOpened\");\n    },\n    drawerClose() {\n      this.$emit(\"drawerClose\");\n    },\n  },\n  components: {\n    footHeader,\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n.indexFooter {\n  float: left;\n  position: absolute;\n  bottom: 0px;\n  z-index: 100;\n  height: 20px;\n  width: calc(100% - 10px);\n  padding: 0px 5px;\n}\n.indexFooter .el-table .warning-row {\n  background: rgb(255, 255, 199);\n}\n.indexFooter .el-table td,\n.indexFooter .el-table th {\n  padding: 6px 0;\n}\n.indexFooter .el-table .el-button {\n  padding: 0px;\n  min-height: 10px;\n}\n.indexFooter button.export {\n  position: absolute;\n  right: 15px;\n  top: 10px;\n}\n.indexFooter .el-drawer {\n  overflow: initial;\n  height: 500px;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}