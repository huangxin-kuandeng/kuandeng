{"ast":null,"code":"import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport ElementUI from \"element-plus\";\nimport \"element-plus/lib/theme-chalk/index.css\";\nimport \"../config.js\";\nimport * as sysApi from \"./services/sys\";\nimport axios from \"axios\";\nlet app = createApp(App);\napp.config.globalProperties.$axios = axios;\napp.use(store);\napp.use(router);\napp.use(ElementUI);\nsysApi.configList({}).then(res => {\n  app.config.globalProperties.$config = res && res.url ? res.url : {};\n  app.mount(\"#app\");\n});","map":{"version":3,"sources":["D:/project/batch-edit/src/main.js"],"names":["createApp","App","router","store","ElementUI","sysApi","axios","app","config","globalProperties","$axios","use","configList","then","res","$config","url","mount"],"mappings":"AAAA,SAASA,SAAT,QAA0B,KAA1B;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAO,wCAAP;AACA,OAAO,cAAP;AAEA,OAAO,KAAKC,MAAZ,MAAwB,gBAAxB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,GAAG,GAAGP,SAAS,CAACC,GAAD,CAAnB;AACAM,GAAG,CAACC,MAAJ,CAAWC,gBAAX,CAA4BC,MAA5B,GAAqCJ,KAArC;AACAC,GAAG,CAACI,GAAJ,CAAQR,KAAR;AACAI,GAAG,CAACI,GAAJ,CAAQT,MAAR;AACAK,GAAG,CAACI,GAAJ,CAAQP,SAAR;AAEAC,MAAM,CAACO,UAAP,CAAkB,EAAlB,EAAsBC,IAAtB,CAA4BC,GAAD,IAAS;AAClCP,EAAAA,GAAG,CAACC,MAAJ,CAAWC,gBAAX,CAA4BM,OAA5B,GAAsCD,GAAG,IAAIA,GAAG,CAACE,GAAX,GAAiBF,GAAG,CAACE,GAArB,GAA2B,EAAjE;AACAT,EAAAA,GAAG,CAACU,KAAJ,CAAU,MAAV;AACD,CAHD","sourcesContent":["import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport ElementUI from \"element-plus\";\nimport \"element-plus/lib/theme-chalk/index.css\";\nimport \"../config.js\";\n\nimport * as sysApi from \"./services/sys\";\n\nimport axios from \"axios\";\n\nlet app = createApp(App);\napp.config.globalProperties.$axios = axios;\napp.use(store);\napp.use(router);\napp.use(ElementUI);\n\nsysApi.configList({}).then((res) => {\n  app.config.globalProperties.$config = res && res.url ? res.url : {};\n  app.mount(\"#app\");\n});"]},"metadata":{},"sourceType":"module"}