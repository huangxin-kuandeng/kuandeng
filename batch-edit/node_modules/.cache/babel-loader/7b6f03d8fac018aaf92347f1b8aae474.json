{"ast":null,"code":"import * as util from \"./services/sys\";\nexport default {\n  name: \"contentEdit\",\n\n  data() {\n    return {\n      enterable: false,\n      //根据用户权限校验：作业员可修改；质检员只读。\n      disabled: false,\n      toggleClass: this.hideHeader ? \"el-icon-caret-top\" : \"el-icon-caret-bottom\",\n      visible: false,\n      childInstanseTag: this.instanseTag,\n      formType: 1,\n      popWidth: 400,\n      placement: \"right\",\n      formDatas: [],\n      editForm: {},\n      checkForm: {\n        ERROR_TYPE: \"\",\n        ATTRIBUTE: \"\",\n        STATE: \"\",\n        DESC: \"\"\n      },\n      editRules: {\n        ERROR_TYPE: [{\n          required: true,\n          message: \"请选择错误类型\",\n          trigger: \"change\"\n        }],\n        ATTRIBUTE: [{\n          required: true,\n          message: \"请选择错误属性\",\n          trigger: \"change\"\n        }],\n        STATE: [{\n          required: true,\n          message: \"请选择标记状态\",\n          trigger: \"change\"\n        }],\n        DESC: [{\n          required: false,\n          message: \"请输入内容描述\",\n          trigger: \"blur\"\n        }]\n      },\n      checkRules: {\n        ERROR_TYPE: [{\n          required: true,\n          message: \"请选择错误类型\",\n          trigger: \"change\"\n        }],\n        ATTRIBUTE: [{\n          required: true,\n          message: \"请选择错误属性\",\n          trigger: \"change\"\n        }],\n        STATE: [{\n          required: true,\n          message: \"请选择标记状态\",\n          trigger: \"change\"\n        }],\n        DESC: [{\n          required: false,\n          message: \"请输入内容描述\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n\n  props: [\"editId\", \"editTags\", \"modelName\"],\n\n  mounted() {\n    var role = util.isRoleAuth(this.$user);\n\n    if ([1, 3].includes(role)) {\n      this.disabled = false;\n    } else {\n      this.disabled = true;\n    }\n  },\n\n  methods: {\n    getInstanse(model) {\n      var modelFile = this.$tags[model] || {};\n      var fields = modelFile.fields || [];\n      return fields;\n    },\n\n    // 每次进行属性编辑时，初始化当前编辑界面\n    attributeInstanseInit() {\n      this.editRules = {};\n      this.editForm = {};\n      this.formDatas = [];\n      var modelAttr = this.$fruit[this.modelName] || {},\n          fields = modelAttr.fields || [],\n          cloneFields = this.$_.cloneDeep(fields);\n      cloneFields.forEach(d => {\n        if (d.display) {\n          var trigger = d.fieldInput == \"select\" ? \"change\" : \"blur\";\n          var text = d.fieldInput == \"select\" ? \"选择\" : \"输入\";\n          var message = \"请\" + text + d.fieldTitle;\n          var editTag = this.editTags.find(s => {\n            return s.k == d.fieldName;\n          });\n          var defaultValue = editTag ? editTag.v : \"\";\n          this.editForm[d.fieldName] = defaultValue || d.defaultValue || \"\";\n          this.editRules[d.fieldName] = [{\n            required: true,\n            message: message,\n            trigger: trigger\n          }];\n          d.message = message;\n        }\n      });\n      this.formDatas = cloneFields;\n      console.log(cloneFields);\n    },\n\n    tagInstanseInit() {\n      var instanseTags = this.getInstanse(\"QUALITY_TAG\");\n\n      for (var k in this.formDatas) {\n        var instanseTag = instanseTags.find(s => {\n          return s.fieldName == k;\n        });\n\n        if (instanseTag && instanseTag.fieldInput == \"select\") {\n          this.formDatas[k] = instanseTag.fieldType.fieldTypeValues;\n        } else if (instanseTag && instanseTag.fieldName == \"ATTRIBUTE\") {\n          this.formDatas[k] = this.$fruit[this.modelName] ? this.$fruit[this.modelName].fields : [];\n        }\n      }\n    },\n\n    /*\n     **级联关系的联动处理**\n     *1、传fieldName：\n     *****   则查看当前fieldName下是否存在子集关系，并进行更新选项\n     *2、不传fieldName：\n     *****   则查看当前模型下所有的级联关系，并进行更新所有选项\n     */\n    groupLinkage(fieldName) {\n      var $this = this;\n      var modelFields = $this.$fruit[$this.modelName] || null;\n      var fields = modelFields ? modelFields.fields : [];\n      fields.forEach(d => {\n        if (fieldName && d.fieldName != fieldName) {\n          return;\n        }\n\n        var selectGroup = d.selectGroup || [];\n\n        if (selectGroup.length) {\n          var fieldTypeValues = d.fieldType.fieldTypeValues || [];\n          var value = $this.editForm[d.fieldName] || d.defaultValue;\n          var selectValue = fieldTypeValues.find(s => {\n            return s.value == value;\n          });\n\n          for (var i = 0; i < selectGroup.length; i++) {\n            $this.groupSelectChange(selectGroup[i], selectValue);\n          }\n        }\n      });\n    },\n\n    groupSelectChange(fieldName, selectValue) {\n      var fieldSelect = [];\n      var field = this.formDatas.find(d => {\n        return d.fieldName == fieldName;\n      });\n\n      if (selectValue && selectValue.id) {\n        fieldSelect = field.filter(d => {\n          return d.parentId == selectValue.id;\n        });\n      }\n\n      field.cloneValues = fieldSelect;\n    },\n\n    /*\n     **编辑属性面板的处理**\n     *1、editImage：\n     *****   属性编辑\n     *2、checkImage：\n     *****   质检标状态编辑\n     */\n    editImage(e) {\n      this.attributeInstanseInit();\n      this.groupLinkage();\n\n      if (window.innerWidth - e.clientX < 600) {\n        this.placement = \"left\";\n      } else {\n        this.placement = \"right\";\n      }\n\n      this.popWidth = 400;\n      this.formType = 1;\n      this.visible = true;\n    },\n\n    checkImage(e) {\n      var $this = this;\n      var editTag = $this.editTags || [];\n      editTag.forEach(d => {\n        var k = d.k,\n            v = d.v;\n\n        if (Object.prototype.hasOwnProperty.call($this.checkForm, k)) {\n          $this.checkForm[k] = v || \"\";\n        }\n      });\n      this.tagInstanseInit();\n\n      if (window.innerWidth - e.clientX < 500) {\n        this.placement = \"left\";\n      } else {\n        this.placement = \"right\";\n      }\n\n      this.popWidth = 400;\n      this.formType = 2;\n      this.visible = true;\n    },\n\n    tagImage() {\n      this.$emit(\"tagImage\", this.editId);\n    },\n\n    submitEdit(formName) {\n      var $this = this;\n      $this.$refs[formName].validate(valid => {\n        if (valid) {\n          $this.visible = false;\n          $this.$emit(\"editList\", $this.editId, $this.editForm);\n        } else {\n          return false;\n        }\n      });\n    },\n\n    submitCheck(formName) {\n      var $this = this;\n      $this.$refs[formName].validate(valid => {\n        if (valid) {\n          $this.visible = false;\n          $this.$emit(\"checkList\", $this.editId, $this.checkForm);\n        } else {\n          return false;\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"sources":["D:\\project\\batch-edit\\src\\components\\contentComponents\\contentEdit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"contentEdit\">\n    <el-popover\n      :placement=\"placement\"\n      :width=\"popWidth\"\n      v-model:visible=\"visible\"\n      trigger=\"manual\"\n      :popper-options=\"{\n        boundariesElement: 'body',\n        gpuAcceleration: false,\n      }\"\n    >\n      <p>属性栏</p>\n      <el-scrollbar max-height=\"450px\">\n        <el-form\n          v-if=\"formType == 1\"\n          ref=\"editForm\"\n          :model=\"editForm\"\n          label-width=\"150px\"\n          size=\"medium\"\n          :rules=\"editRules\"\n          :label-position=\"'left'\"\n          :disabled=\"disabled\"\n        >\n          <template v-for=\"formChild in formDatas\" :key=\"formChild.fieldName\">\n            <el-form-item\n              v-if=\"formChild.display\"\n              :label=\"formChild.fieldTitle\"\n              :prop=\"formChild.fieldName\"\n            >\n              <el-select\n                v-if=\"formChild.fieldInput == 'select'\"\n                v-model=\"editForm[formChild.fieldName]\"\n                placeholder=\"formChild.message\"\n                @change=\"groupLinkage(formChild.fieldName)\"\n              >\n                <el-option\n                  v-for=\"options in formChild.cloneValues\"\n                  :key=\"options.value\"\n                  :label=\"options.name\"\n                  :value=\"options.value\"\n                ></el-option>\n              </el-select>\n              <el-input\n                v-else\n                type=\"text\"\n                v-model=\"editForm[formChild.fieldName]\"\n              ></el-input>\n            </el-form-item>\n          </template>\n          <el-form-item size=\"large\">\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              @click=\"submitEdit('editForm')\"\n              >确定</el-button\n            >\n            <el-button size=\"mini\" @click=\"visible = false\">取消</el-button>\n          </el-form-item>\n        </el-form>\n        <el-form\n          v-if=\"formType == 2\"\n          ref=\"checkForm\"\n          :model=\"checkForm\"\n          label-width=\"80px\"\n          size=\"medium\"\n          :rules=\"checkRules\"\n        >\n          <el-form-item label=\"错误类型\" prop=\"ERROR_TYPE\">\n            <el-select\n              v-model=\"checkForm.ERROR_TYPE\"\n              placeholder=\"请选择错误类型\"\n            >\n              <el-option\n                v-for=\"formdata in formDatas.ERROR_TYPE\"\n                :key=\"formdata.value\"\n                :label=\"formdata.name\"\n                :value=\"formdata.value\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"错误属性\" prop=\"ATTRIBUTE\">\n            <el-select\n              v-model=\"checkForm.ATTRIBUTE\"\n              placeholder=\"请选择错误属性\"\n            >\n              <el-option\n                v-for=\"formdata in formDatas.ATTRIBUTE\"\n                :key=\"formdata.fieldName\"\n                :label=\"formdata.fieldTitle\"\n                :value=\"formdata.fieldName\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"内容描述\" prop=\"DESC\">\n            <el-input type=\"textarea\" v-model=\"checkForm.DESC\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"标记状态\" prop=\"STATE\">\n            <el-radio-group v-model=\"checkForm.STATE\" size=\"medium\">\n              <el-radio\n                v-for=\"formdata in formDatas.STATE\"\n                :key=\"formdata.value\"\n                :value=\"formdata.value\"\n                :label=\"formdata.value\"\n                border\n                >{{ formdata.name }}</el-radio\n              >\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item size=\"large\">\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              @click=\"submitCheck('checkForm')\"\n              >确定</el-button\n            >\n            <el-button size=\"mini\" @click=\"visible = false\">取消</el-button>\n          </el-form-item>\n        </el-form>\n      </el-scrollbar>\n      <template #reference>\n        <div class=\"footHeaderToggle\">\n          <el-tooltip\n            class=\"item\"\n            effect=\"dark\"\n            content=\"修改\"\n            placement=\"top\"\n            :enterable=\"enterable\"\n          >\n            <el-button\n              @click.stop=\"editImage($event)\"\n              icon=\"el-icon-edit-outline\"\n              title=\"修改\"\n            ></el-button>\n          </el-tooltip>\n          <el-tooltip\n            class=\"item\"\n            effect=\"dark\"\n            content=\"质检标记\"\n            placement=\"top\"\n            :enterable=\"enterable\"\n          >\n            <el-button\n              @click.stop=\"checkImage($event)\"\n              icon=\"el-icon-location\"\n              title=\"质检标记\"\n            ></el-button>\n          </el-tooltip>\n          <el-tooltip\n            class=\"item\"\n            effect=\"dark\"\n            content=\"问题标记\"\n            placement=\"top\"\n            :enterable=\"enterable\"\n          >\n            <el-button\n              @click.stop=\"tagImage()\"\n              icon=\"el-icon-add-location\"\n              title=\"问题标记\"\n            ></el-button>\n          </el-tooltip>\n        </div>\n      </template>\n    </el-popover>\n  </div>\n</template>\n\n<script>\nimport * as util from \"./services/sys\";\nexport default {\n  name: \"contentEdit\",\n  data() {\n    return {\n      enterable: false,\n      //根据用户权限校验：作业员可修改；质检员只读。\n      disabled: false,\n      toggleClass: this.hideHeader\n        ? \"el-icon-caret-top\"\n        : \"el-icon-caret-bottom\",\n      visible: false,\n      childInstanseTag: this.instanseTag,\n      formType: 1,\n      popWidth: 400,\n      placement: \"right\",\n      formDatas: [],\n      editForm: {},\n      checkForm: {\n        ERROR_TYPE: \"\",\n        ATTRIBUTE: \"\",\n        STATE: \"\",\n        DESC: \"\",\n      },\n      editRules: {\n        ERROR_TYPE: [\n          { required: true, message: \"请选择错误类型\", trigger: \"change\" },\n        ],\n        ATTRIBUTE: [\n          { required: true, message: \"请选择错误属性\", trigger: \"change\" },\n        ],\n        STATE: [\n          { required: true, message: \"请选择标记状态\", trigger: \"change\" },\n        ],\n        DESC: [{ required: false, message: \"请输入内容描述\", trigger: \"blur\" }],\n      },\n      checkRules: {\n        ERROR_TYPE: [\n          { required: true, message: \"请选择错误类型\", trigger: \"change\" },\n        ],\n        ATTRIBUTE: [\n          { required: true, message: \"请选择错误属性\", trigger: \"change\" },\n        ],\n        STATE: [\n          { required: true, message: \"请选择标记状态\", trigger: \"change\" },\n        ],\n        DESC: [{ required: false, message: \"请输入内容描述\", trigger: \"blur\" }],\n      },\n    };\n  },\n  props: [\"editId\", \"editTags\", \"modelName\"],\n  mounted() {\n    var role = util.isRoleAuth(this.$user);\n    if ([1, 3].includes(role)) {\n      this.disabled = false;\n    } else {\n      this.disabled = true;\n    }\n  },\n  methods: {\n    getInstanse(model) {\n      var modelFile = this.$tags[model] || {};\n      var fields = modelFile.fields || [];\n      return fields;\n    },\n    // 每次进行属性编辑时，初始化当前编辑界面\n    attributeInstanseInit() {\n      this.editRules = {};\n      this.editForm = {};\n      this.formDatas = [];\n      var modelAttr = this.$fruit[this.modelName] || {},\n        fields = modelAttr.fields || [],\n        cloneFields = this.$_.cloneDeep(fields);\n      cloneFields.forEach((d) => {\n        if (d.display) {\n          var trigger = d.fieldInput == \"select\" ? \"change\" : \"blur\";\n          var text = d.fieldInput == \"select\" ? \"选择\" : \"输入\";\n          var message = \"请\" + text + d.fieldTitle;\n\n          var editTag = this.editTags.find((s) => {\n            return s.k == d.fieldName;\n          });\n          var defaultValue = editTag ? editTag.v : \"\";\n          this.editForm[d.fieldName] = defaultValue || d.defaultValue || \"\";\n          this.editRules[d.fieldName] = [\n            { required: true, message: message, trigger: trigger },\n          ];\n          d.message = message;\n        }\n      });\n      this.formDatas = cloneFields;\n      console.log(cloneFields);\n    },\n    tagInstanseInit() {\n      var instanseTags = this.getInstanse(\"QUALITY_TAG\");\n      for (var k in this.formDatas) {\n        var instanseTag = instanseTags.find((s) => {\n          return s.fieldName == k;\n        });\n        if (instanseTag && instanseTag.fieldInput == \"select\") {\n          this.formDatas[k] = instanseTag.fieldType.fieldTypeValues;\n        } else if (instanseTag && instanseTag.fieldName == \"ATTRIBUTE\") {\n          this.formDatas[k] = this.$fruit[this.modelName]\n            ? this.$fruit[this.modelName].fields\n            : [];\n        }\n      }\n    },\n    /*\n     **级联关系的联动处理**\n     *1、传fieldName：\n     *****   则查看当前fieldName下是否存在子集关系，并进行更新选项\n     *2、不传fieldName：\n     *****   则查看当前模型下所有的级联关系，并进行更新所有选项\n     */\n    groupLinkage(fieldName) {\n      var $this = this;\n      var modelFields = $this.$fruit[$this.modelName] || null;\n      var fields = modelFields ? modelFields.fields : [];\n\n      fields.forEach((d) => {\n        if (fieldName && d.fieldName != fieldName) {\n          return;\n        }\n        var selectGroup = d.selectGroup || [];\n        if (selectGroup.length) {\n          var fieldTypeValues = d.fieldType.fieldTypeValues || [];\n          var value = $this.editForm[d.fieldName] || d.defaultValue;\n          var selectValue = fieldTypeValues.find((s) => {\n            return s.value == value;\n          });\n          for (var i = 0; i < selectGroup.length; i++) {\n            $this.groupSelectChange(selectGroup[i], selectValue);\n          }\n        }\n      });\n    },\n    groupSelectChange(fieldName, selectValue) {\n      var fieldSelect = [];\n      var field = this.formDatas.find((d) => {\n        return d.fieldName == fieldName;\n      });\n      if (selectValue && selectValue.id) {\n        fieldSelect = field.filter((d) => {\n          return d.parentId == selectValue.id;\n        });\n      }\n      field.cloneValues = fieldSelect;\n    },\n    /*\n     **编辑属性面板的处理**\n     *1、editImage：\n     *****   属性编辑\n     *2、checkImage：\n     *****   质检标状态编辑\n     */\n    editImage(e) {\n      this.attributeInstanseInit();\n      this.groupLinkage();\n      if (window.innerWidth - e.clientX < 600) {\n        this.placement = \"left\";\n      } else {\n        this.placement = \"right\";\n      }\n      this.popWidth = 400;\n      this.formType = 1;\n      this.visible = true;\n    },\n    checkImage(e) {\n      var $this = this;\n      var editTag = $this.editTags || [];\n      editTag.forEach((d) => {\n        var k = d.k,\n          v = d.v;\n        if (Object.prototype.hasOwnProperty.call($this.checkForm, k)) {\n          $this.checkForm[k] = v || \"\";\n        }\n      });\n\n      this.tagInstanseInit();\n      if (window.innerWidth - e.clientX < 500) {\n        this.placement = \"left\";\n      } else {\n        this.placement = \"right\";\n      }\n      this.popWidth = 400;\n      this.formType = 2;\n      this.visible = true;\n    },\n    tagImage() {\n      this.$emit(\"tagImage\", this.editId);\n    },\n    submitEdit(formName) {\n      var $this = this;\n      $this.$refs[formName].validate((valid) => {\n        if (valid) {\n          $this.visible = false;\n          $this.$emit(\"editList\", $this.editId, $this.editForm);\n        } else {\n          return false;\n        }\n      });\n    },\n    submitCheck(formName) {\n      var $this = this;\n      $this.$refs[formName].validate((valid) => {\n        if (valid) {\n          $this.visible = false;\n          $this.$emit(\"checkList\", $this.editId, $this.checkForm);\n        } else {\n          return false;\n        }\n      });\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n.contentEdit {\n  float: left;\n  margin: 0 auto;\n  padding: 0px;\n  position: absolute;\n  right: 5px;\n  bottom: 35px;\n  width: auto;\n  z-index: 10;\n}\n.contentEdit .footHeaderToggle button {\n  background-color: rgba(0, 0, 0, 0.4);\n  border: 1px solid rgba(58, 142, 230, 0);\n  min-height: 20px;\n  padding: 5px;\n  font-size: 18px;\n  color: rgba(255, 255, 255, 0.6);\n}\n.contentEdit .footHeaderToggle button:focus,\n.contentEdit .footHeaderToggle button:hover {\n  border: 1px solid rgba(58, 142, 230, 1);\n  color: rgba(255, 255, 255, 1);\n}\n.el-form .el-radio-group .el-radio {\n  margin-right: 5px;\n  padding: 5px 10px 0px 5px;\n  height: 26px;\n  margin-bottom: 5px;\n  float: left;\n  margin-left: 0px !important;\n}\n.el-popover {\n  padding-right: 0px;\n}\n.el-popover .el-form {\n  padding-right: 15px;\n  overflow-x: hidden;\n}\n.el-popover p {\n  font-weight: bold;\n  margin: 5px 0px;\n}\n.el-popover .el-form .el-select {\n  width: 100%;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}