{"ast":null,"code":"import { createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, resolveComponent as _resolveComponent, withCtx as _withCtx, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"contentEdit\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"p\", null, \"属性栏\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"确定\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"确定\");\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nconst _hoisted_7 = {\n  class: \"footHeaderToggle\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = _resolveComponent(\"el-option\");\n\n  const _component_el_select = _resolveComponent(\"el-select\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n\n  const _component_el_scrollbar = _resolveComponent(\"el-scrollbar\");\n\n  const _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n\n  const _component_el_popover = _resolveComponent(\"el-popover\");\n\n  return _openBlock(), _createBlock(\"div\", _hoisted_1, [_createVNode(_component_el_popover, {\n    placement: $data.placement,\n    width: $data.popWidth,\n    visible: $data.visible,\n    \"onUpdate:visible\": _cache[12] || (_cache[12] = $event => $data.visible = $event),\n    trigger: \"manual\",\n    \"popper-options\": {\n      boundariesElement: 'body',\n      gpuAcceleration: false\n    }\n  }, {\n    reference: _withCtx(() => [_createVNode(\"div\", _hoisted_7, [_createVNode(_component_el_tooltip, {\n      class: \"item\",\n      effect: \"dark\",\n      content: \"修改\",\n      placement: \"top\",\n      enterable: $data.enterable\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: _cache[9] || (_cache[9] = _withModifiers($event => $options.editImage($event), [\"stop\"])),\n        icon: \"el-icon-edit-outline\",\n        title: \"修改\"\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"enterable\"]), _createVNode(_component_el_tooltip, {\n      class: \"item\",\n      effect: \"dark\",\n      content: \"质检标记\",\n      placement: \"top\",\n      enterable: $data.enterable\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: _cache[10] || (_cache[10] = _withModifiers($event => $options.checkImage($event), [\"stop\"])),\n        icon: \"el-icon-location\",\n        title: \"质检标记\"\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"enterable\"]), _createVNode(_component_el_tooltip, {\n      class: \"item\",\n      effect: \"dark\",\n      content: \"问题标记\",\n      placement: \"top\",\n      enterable: $data.enterable\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: _cache[11] || (_cache[11] = _withModifiers($event => $options.tagImage(), [\"stop\"])),\n        icon: \"el-icon-add-location\",\n        title: \"问题标记\"\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"enterable\"])])]),\n    default: _withCtx(() => [_hoisted_2, _createVNode(_component_el_scrollbar, {\n      \"max-height\": \"450px\"\n    }, {\n      default: _withCtx(() => [$data.formType == 1 ? (_openBlock(), _createBlock(_component_el_form, {\n        key: 0,\n        ref: \"editForm\",\n        model: $data.editForm,\n        \"label-width\": \"150px\",\n        size: \"medium\",\n        rules: $data.editRules,\n        \"label-position\": 'left',\n        disabled: $props.editDisabled\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList($data.formDatas, formChild => {\n          return _openBlock(), _createBlock(_Fragment, {\n            key: formChild.fieldName\n          }, [formChild.display ? (_openBlock(), _createBlock(_component_el_form_item, {\n            key: 0,\n            label: formChild.fieldTitle,\n            prop: formChild.fieldName\n          }, {\n            default: _withCtx(() => [formChild.fieldInput == 'select' ? (_openBlock(), _createBlock(_component_el_select, {\n              key: 0,\n              modelValue: $data.editForm[formChild.fieldName],\n              \"onUpdate:modelValue\": $event => $data.editForm[formChild.fieldName] = $event,\n              placeholder: \"formChild.message\",\n              onChange: $event => $options.groupLinkage(formChild.fieldName)\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList(formChild.cloneValues, options => {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  key: options.value,\n                  label: options.name,\n                  value: options.value\n                }, null, 8\n                /* PROPS */\n                , [\"label\", \"value\"]);\n              }), 128\n              /* KEYED_FRAGMENT */\n              ))]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])) : (_openBlock(), _createBlock(_component_el_input, {\n              key: 1,\n              type: \"text\",\n              modelValue: $data.editForm[formChild.fieldName],\n              \"onUpdate:modelValue\": $event => $data.editForm[formChild.fieldName] = $event\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"]))]),\n            _: 2\n            /* DYNAMIC */\n\n          }, 1032\n          /* PROPS, DYNAMIC_SLOTS */\n          , [\"label\", \"prop\"])) : _createCommentVNode(\"v-if\", true)], 64\n          /* STABLE_FRAGMENT */\n          );\n        }), 128\n        /* KEYED_FRAGMENT */\n        )), _createVNode(_component_el_form_item, {\n          size: \"large\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            size: \"mini\",\n            onClick: _cache[1] || (_cache[1] = $event => $options.submitEdit('editForm'))\n          }, {\n            default: _withCtx(() => [_hoisted_3]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_button, {\n            size: \"mini\",\n            onClick: _cache[2] || (_cache[2] = $event => $data.visible = false)\n          }, {\n            default: _withCtx(() => [_hoisted_4]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"model\", \"rules\", \"disabled\"])) : _createCommentVNode(\"v-if\", true), $data.formType == 2 ? (_openBlock(), _createBlock(_component_el_form, {\n        key: 1,\n        ref: \"checkForm\",\n        model: $data.checkForm,\n        \"label-width\": \"80px\",\n        size: \"medium\",\n        rules: $data.checkRules\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"错误类型\",\n          prop: \"ERROR_TYPE\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_select, {\n            modelValue: $data.checkForm.ERROR_TYPE,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.checkForm.ERROR_TYPE = $event),\n            placeholder: \"请选择错误类型\"\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList($data.formDatas.ERROR_TYPE, formdata => {\n              return _openBlock(), _createBlock(_component_el_option, {\n                key: formdata.value,\n                label: formdata.name,\n                value: formdata.value\n              }, null, 8\n              /* PROPS */\n              , [\"label\", \"value\"]);\n            }), 128\n            /* KEYED_FRAGMENT */\n            ))]),\n            _: 1\n            /* STABLE */\n\n          }, 8\n          /* PROPS */\n          , [\"modelValue\"])]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_el_form_item, {\n          label: \"错误属性\",\n          prop: \"ATTRIBUTE\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_select, {\n            modelValue: $data.checkForm.ATTRIBUTE,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.checkForm.ATTRIBUTE = $event),\n            placeholder: \"请选择错误属性\"\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList($data.formDatas.ATTRIBUTE, formdata => {\n              return _openBlock(), _createBlock(_component_el_option, {\n                key: formdata.fieldName,\n                label: formdata.fieldTitle,\n                value: formdata.fieldName\n              }, null, 8\n              /* PROPS */\n              , [\"label\", \"value\"]);\n            }), 128\n            /* KEYED_FRAGMENT */\n            ))]),\n            _: 1\n            /* STABLE */\n\n          }, 8\n          /* PROPS */\n          , [\"modelValue\"])]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_el_form_item, {\n          label: \"内容描述\",\n          prop: \"DESC\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            type: \"textarea\",\n            modelValue: $data.checkForm.DESC,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.checkForm.DESC = $event)\n          }, null, 8\n          /* PROPS */\n          , [\"modelValue\"])]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_el_form_item, {\n          label: \"标记状态\",\n          prop: \"STATE\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n            modelValue: $data.checkForm.STATE,\n            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.checkForm.STATE = $event),\n            size: \"medium\"\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList($data.formDatas.STATE, formdata => {\n              return _openBlock(), _createBlock(_component_el_radio, {\n                key: formdata.value,\n                value: formdata.value,\n                label: formdata.value,\n                border: \"\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(formdata.name), 1\n                /* TEXT */\n                )]),\n                _: 2\n                /* DYNAMIC */\n\n              }, 1032\n              /* PROPS, DYNAMIC_SLOTS */\n              , [\"value\", \"label\"]);\n            }), 128\n            /* KEYED_FRAGMENT */\n            ))]),\n            _: 1\n            /* STABLE */\n\n          }, 8\n          /* PROPS */\n          , [\"modelValue\"])]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_el_form_item, {\n          size: \"large\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            size: \"mini\",\n            onClick: _cache[7] || (_cache[7] = $event => $options.submitCheck('checkForm'))\n          }, {\n            default: _withCtx(() => [_hoisted_5]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_button, {\n            size: \"mini\",\n            onClick: _cache[8] || (_cache[8] = $event => $data.visible = false)\n          }, {\n            default: _withCtx(() => [_hoisted_6]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"model\", \"rules\"])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"placement\", \"width\", \"visible\"])]);\n}","map":{"version":3,"sources":["D:\\web_editor_hd\\src\\main\\webapp\\batch-edit\\src\\components\\contentComponents\\contentEdit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"contentEdit\">\n    <el-popover\n      :placement=\"placement\"\n      :width=\"popWidth\"\n      v-model:visible=\"visible\"\n      trigger=\"manual\"\n      :popper-options=\"{\n        boundariesElement: 'body',\n        gpuAcceleration: false,\n      }\"\n    >\n      <p>属性栏</p>\n      <el-scrollbar max-height=\"450px\">\n        <el-form\n          v-if=\"formType == 1\"\n          ref=\"editForm\"\n          :model=\"editForm\"\n          label-width=\"150px\"\n          size=\"medium\"\n          :rules=\"editRules\"\n          :label-position=\"'left'\"\n          :disabled=\"editDisabled\"\n        >\n          <template v-for=\"formChild in formDatas\" :key=\"formChild.fieldName\">\n            <el-form-item\n              v-if=\"formChild.display\"\n              :label=\"formChild.fieldTitle\"\n              :prop=\"formChild.fieldName\"\n            >\n              <el-select\n                v-if=\"formChild.fieldInput == 'select'\"\n                v-model=\"editForm[formChild.fieldName]\"\n                placeholder=\"formChild.message\"\n                @change=\"groupLinkage(formChild.fieldName)\"\n              >\n                <el-option\n                  v-for=\"options in formChild.cloneValues\"\n                  :key=\"options.value\"\n                  :label=\"options.name\"\n                  :value=\"options.value\"\n                ></el-option>\n              </el-select>\n              <el-input\n                v-else\n                type=\"text\"\n                v-model=\"editForm[formChild.fieldName]\"\n              ></el-input>\n            </el-form-item>\n          </template>\n          <el-form-item size=\"large\">\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              @click=\"submitEdit('editForm')\"\n              >确定</el-button\n            >\n            <el-button size=\"mini\" @click=\"visible = false\">取消</el-button>\n          </el-form-item>\n        </el-form>\n        <el-form\n          v-if=\"formType == 2\"\n          ref=\"checkForm\"\n          :model=\"checkForm\"\n          label-width=\"80px\"\n          size=\"medium\"\n          :rules=\"checkRules\"\n        >\n          <el-form-item label=\"错误类型\" prop=\"ERROR_TYPE\">\n            <el-select\n              v-model=\"checkForm.ERROR_TYPE\"\n              placeholder=\"请选择错误类型\"\n            >\n              <el-option\n                v-for=\"formdata in formDatas.ERROR_TYPE\"\n                :key=\"formdata.value\"\n                :label=\"formdata.name\"\n                :value=\"formdata.value\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"错误属性\" prop=\"ATTRIBUTE\">\n            <el-select\n              v-model=\"checkForm.ATTRIBUTE\"\n              placeholder=\"请选择错误属性\"\n            >\n              <el-option\n                v-for=\"formdata in formDatas.ATTRIBUTE\"\n                :key=\"formdata.fieldName\"\n                :label=\"formdata.fieldTitle\"\n                :value=\"formdata.fieldName\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"内容描述\" prop=\"DESC\">\n            <el-input type=\"textarea\" v-model=\"checkForm.DESC\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"标记状态\" prop=\"STATE\">\n            <el-radio-group v-model=\"checkForm.STATE\" size=\"medium\">\n              <el-radio\n                v-for=\"formdata in formDatas.STATE\"\n                :key=\"formdata.value\"\n                :value=\"formdata.value\"\n                :label=\"formdata.value\"\n                border\n                >{{ formdata.name }}</el-radio\n              >\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item size=\"large\">\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              @click=\"submitCheck('checkForm')\"\n              >确定</el-button\n            >\n            <el-button size=\"mini\" @click=\"visible = false\">取消</el-button>\n          </el-form-item>\n        </el-form>\n      </el-scrollbar>\n      <template #reference>\n        <div class=\"footHeaderToggle\">\n          <el-tooltip\n            class=\"item\"\n            effect=\"dark\"\n            content=\"修改\"\n            placement=\"top\"\n            :enterable=\"enterable\"\n          >\n            <el-button\n              @click.stop=\"editImage($event)\"\n              icon=\"el-icon-edit-outline\"\n              title=\"修改\"\n            ></el-button>\n          </el-tooltip>\n          <el-tooltip\n            class=\"item\"\n            effect=\"dark\"\n            content=\"质检标记\"\n            placement=\"top\"\n            :enterable=\"enterable\"\n          >\n            <el-button\n              @click.stop=\"checkImage($event)\"\n              icon=\"el-icon-location\"\n              title=\"质检标记\"\n            ></el-button>\n          </el-tooltip>\n          <el-tooltip\n            class=\"item\"\n            effect=\"dark\"\n            content=\"问题标记\"\n            placement=\"top\"\n            :enterable=\"enterable\"\n          >\n            <el-button\n              @click.stop=\"tagImage()\"\n              icon=\"el-icon-add-location\"\n              title=\"问题标记\"\n            ></el-button>\n          </el-tooltip>\n        </div>\n      </template>\n    </el-popover>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"contentEdit\",\n  data() {\n    return {\n      enterable: false,\n      //根据用户权限校验：作业员可修改；质检员只读。\n      toggleClass: this.hideHeader\n        ? \"el-icon-caret-top\"\n        : \"el-icon-caret-bottom\",\n      visible: false,\n      childInstanseTag: this.instanseTag,\n      formType: 1,\n      popWidth: 400,\n      placement: \"right\",\n      formDatas: [],\n      editForm: {},\n      checkForm: {\n        ERROR_TYPE: \"\",\n        ATTRIBUTE: \"\",\n        STATE: \"\",\n        DESC: \"\",\n      },\n      editRules: {\n        ERROR_TYPE: [\n          { required: true, message: \"请选择错误类型\", trigger: \"change\" },\n        ],\n        ATTRIBUTE: [\n          { required: true, message: \"请选择错误属性\", trigger: \"change\" },\n        ],\n        STATE: [\n          { required: true, message: \"请选择标记状态\", trigger: \"change\" },\n        ],\n        DESC: [{ required: false, message: \"请输入内容描述\", trigger: \"blur\" }],\n      },\n      checkRules: {\n        ERROR_TYPE: [\n          { required: true, message: \"请选择错误类型\", trigger: \"change\" },\n        ],\n        ATTRIBUTE: [\n          { required: true, message: \"请选择错误属性\", trigger: \"change\" },\n        ],\n        STATE: [\n          { required: true, message: \"请选择标记状态\", trigger: \"change\" },\n        ],\n        DESC: [{ required: false, message: \"请输入内容描述\", trigger: \"blur\" }],\n      },\n    };\n  },\n  props: [\"editId\", \"editTags\", \"modelName\", \"editDisabled\", \"tagDatas\"],\n  mounted() {\n    \n  },\n  methods: {\n    getInstanse(model) {\n      var modelFile = this.$tags[model] || {};\n      var fields = modelFile.fields || [];\n      return fields;\n    },\n    // 每次进行属性编辑时，初始化当前编辑界面\n    attributeInstanseInit() {\n      this.editRules = {};\n      this.editForm = {};\n      this.formDatas = [];\n      var modelAttr = this.$fruit[this.modelName] || {},\n        fields = modelAttr.fields || [],\n        cloneFields = this.$_.cloneDeep(fields);\n      cloneFields.forEach((d) => {\n        if (d.display) {\n          var trigger = d.fieldInput == \"select\" ? \"change\" : \"blur\";\n          var text = d.fieldInput == \"select\" ? \"选择\" : \"输入\";\n          var message = \"请\" + text + d.fieldTitle;\n\n          var editTag = this.editTags.find((s) => {\n            return s.k == d.fieldName;\n          });\n          var defaultValue = editTag ? editTag.v : \"\";\n          this.editForm[d.fieldName] = defaultValue || d.defaultValue || \"\";\n          this.editRules[d.fieldName] = [\n            { required: true, message: message, trigger: trigger },\n          ];\n          d.message = message;\n        }\n      });\n      this.formDatas = cloneFields;\n      console.log(cloneFields);\n    },\n    tagInstanseInit() {\n      var instanseTags = this.getInstanse(\"QUALITY_TAG\");\n      for (var k in this.formDatas) {\n        var instanseTag = instanseTags.find((s) => {\n          return s.fieldName == k;\n        });\n        if (instanseTag && instanseTag.fieldInput == \"select\") {\n          this.formDatas[k] = instanseTag.fieldType.fieldTypeValues;\n        } else if (instanseTag && instanseTag.fieldName == \"ATTRIBUTE\") {\n          this.formDatas[k] = this.$fruit[this.modelName]\n            ? this.$fruit[this.modelName].fields\n            : [];\n        }\n      }\n    },\n    /*\n     **级联关系的联动处理**\n     *1、传fieldName：\n     *****   则查看当前fieldName下是否存在子集关系，并进行更新选项\n     *2、不传fieldName：\n     *****   则查看当前模型下所有的级联关系，并进行更新所有选项\n     */\n    groupLinkage(fieldName) {\n      var $this = this;\n      var modelFields = $this.$fruit[$this.modelName] || null;\n      var fields = modelFields ? modelFields.fields : [];\n\n      fields.forEach((d) => {\n        if (fieldName && d.fieldName != fieldName) {\n          return;\n        }\n        var selectGroup = d.selectGroup || [];\n        if (selectGroup.length) {\n          var fieldTypeValues = d.fieldType.fieldTypeValues || [];\n          var value = $this.editForm[d.fieldName] || d.defaultValue;\n          var selectValue = fieldTypeValues.find((s) => {\n            return s.value == value;\n          });\n          for (var i = 0; i < selectGroup.length; i++) {\n            $this.groupSelectChange(selectGroup[i], selectValue);\n          }\n        }\n      });\n    },\n    groupSelectChange(fieldName, selectValue) {\n      var fieldSelect = [];\n      var field = this.formDatas.find((d) => {\n        return d.fieldName == fieldName;\n      });\n      if (selectValue && selectValue.id) {\n        fieldSelect = field.filter((d) => {\n          return d.parentId == selectValue.id;\n        });\n      }\n      field.cloneValues = fieldSelect;\n    },\n    /*\n     **编辑属性面板的处理**\n     *1、editImage：\n     *****   属性编辑\n     *2、checkImage：\n     *****   质检标状态编辑\n     */\n    editImage(e) {\n      this.attributeInstanseInit();\n      this.groupLinkage();\n      if (window.innerWidth - e.clientX < 600) {\n        this.placement = \"left\";\n      } else {\n        this.placement = \"right\";\n      }\n      this.popWidth = 400;\n      this.formType = 1;\n      this.visible = true;\n    },\n    checkImage(e) {\n      var $this = this;\n      var editTag = $this.editTags || [];\n      editTag.forEach((d) => {\n        var k = d.k,\n          v = d.v;\n        if (Object.prototype.hasOwnProperty.call($this.checkForm, k)) {\n          $this.checkForm[k] = v || \"\";\n        }\n      });\n\n      this.tagInstanseInit();\n      if (window.innerWidth - e.clientX < 500) {\n        this.placement = \"left\";\n      } else {\n        this.placement = \"right\";\n      }\n      this.popWidth = 400;\n      this.formType = 2;\n      this.visible = true;\n    },\n    tagImage() {\n      this.$emit(\"tagImage\", this.editId);\n    },\n    submitEdit(formName) {\n      var $this = this;\n      $this.$refs[formName].validate((valid) => {\n        if (valid) {\n          $this.visible = false;\n          $this.$emit(\"editList\", $this.editId, $this.editForm);\n        } else {\n          return false;\n        }\n      });\n    },\n    submitCheck(formName) {\n      var $this = this;\n      $this.$refs[formName].validate((valid) => {\n        if (valid) {\n          $this.visible = false;\n          $this.$emit(\"checkList\", $this.editId, $this.checkForm);\n        } else {\n          return false;\n        }\n      });\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n.contentEdit {\n  float: left;\n  margin: 0 auto;\n  padding: 0px;\n  position: absolute;\n  right: 5px;\n  bottom: 35px;\n  width: auto;\n  z-index: 10;\n}\n.contentEdit .footHeaderToggle button {\n  background-color: rgba(0, 0, 0, 0.4);\n  border: 1px solid rgba(58, 142, 230, 0);\n  min-height: 20px;\n  padding: 5px;\n  font-size: 18px;\n  color: rgba(255, 255, 255, 0.6);\n}\n.contentEdit .footHeaderToggle button:focus,\n.contentEdit .footHeaderToggle button:hover {\n  border: 1px solid rgba(58, 142, 230, 1);\n  color: rgba(255, 255, 255, 1);\n}\n.el-form .el-radio-group .el-radio {\n  margin-right: 5px;\n  padding: 5px 10px 0px 5px;\n  height: 26px;\n  margin-bottom: 5px;\n  float: left;\n  margin-left: 0px !important;\n}\n.el-popover {\n  padding-right: 0px;\n}\n.el-popover .el-form {\n  padding-right: 15px;\n  overflow-x: hidden;\n}\n.el-popover p {\n  font-weight: bold;\n  margin: 5px 0px;\n}\n.el-popover .el-form .el-select {\n  width: 100%;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}