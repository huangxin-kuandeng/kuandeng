{"ast":null,"code":"/* eslint-disable prettier/prettier */\nimport jq from \"jquery\"; // 获取最新配置\n\nexport function oauth2Client() {\n  var oauth2Client = {\n    begin: function (opts) {\n      opts = jq.extend({\n        clientId: false,\n        authorizeUrl: false,\n        redirectUri: window.location.href,\n        responseType: 'code'\n      }, opts);\n      window.location.href = opts.authorizeUrl + '?client_id=' + opts.clientId + '&response_type=' + opts.responseType + '&redirect_uri=' + opts.redirectUri;\n    },\n    end: function (opts, fn, errFn) {\n      opts = jq.extend({\n        code: false,\n        clientId: false,\n        clientSecret: false,\n        accessTokenUrl: false,\n        redirectUri: window.location.href,\n        userInfoUrl: false\n      }, opts);\n      if (!opts.code) return;\n      jq.ajax({\n        async: false,\n        url: opts.accessTokenUrl,\n        type: \"post\",\n        //\t\t\t\t\tdataType:'jsonp',\n        //\t\t\t\t\tjsonpCallback:'callback',\n        data: {\n          grant_type: \"authorization_code\",\n          client_id: opts.clientId,\n          client_secret: opts.clientSecret,\n          code: opts.code,\n          redirect_uri: opts.redirectUri\n        },\n        success: function (data) {\n          if (data) {\n            if (typeof data === 'string') {\n              data = jq.parseJSON(data);\n            }\n\n            var accessToken = data.access_token;\n            var expiresIn = data.expires_in;\n          }\n\n          fn(accessToken, expiresIn);\n        },\n        error: function (XMLHttpRequest, textStatus, errorThrown) {\n          errFn(XMLHttpRequest, textStatus, errorThrown);\n        },\n        complete: function (XMLHttpRequest, textStatus) {}\n      });\n    }\n  };\n  return oauth2Client;\n}","map":{"version":3,"sources":["D:/project/batch-edit/src/services/jquery.oauth2-client.js"],"names":["jq","oauth2Client","begin","opts","extend","clientId","authorizeUrl","redirectUri","window","location","href","responseType","end","fn","errFn","code","clientSecret","accessTokenUrl","userInfoUrl","ajax","async","url","type","data","grant_type","client_id","client_secret","redirect_uri","success","parseJSON","accessToken","access_token","expiresIn","expires_in","error","XMLHttpRequest","textStatus","errorThrown","complete"],"mappings":"AAAA;AACA,OAAOA,EAAP,MAAe,QAAf,C,CACA;;AACA,OAAO,SAASC,YAAT,GAAwB;AAC7B,MAAIA,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,UAASC,IAAT,EAAe;AACpBA,MAAAA,IAAI,GAAGH,EAAE,CAACI,MAAH,CAAU;AACfC,QAAAA,QAAQ,EAAE,KADK;AAEfC,QAAAA,YAAY,EAAE,KAFC;AAGfC,QAAAA,WAAW,EAAEC,MAAM,CAACC,QAAP,CAAgBC,IAHd;AAIfC,QAAAA,YAAY,EAAE;AAJC,OAAV,EAKJR,IALI,CAAP;AAMAK,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBP,IAAI,CAACG,YAAL,GAAoB,aAApB,GACrBH,IAAI,CAACE,QADgB,GACL,iBADK,GACeF,IAAI,CAACQ,YADpB,GAErB,gBAFqB,GAEFR,IAAI,CAACI,WAF1B;AAGD,KAXgB;AAYjBK,IAAAA,GAAG,EAAE,UAAST,IAAT,EAAeU,EAAf,EAAmBC,KAAnB,EAA0B;AAC7BX,MAAAA,IAAI,GAAGH,EAAE,CAACI,MAAH,CAAU;AACfW,QAAAA,IAAI,EAAE,KADS;AAEfV,QAAAA,QAAQ,EAAE,KAFK;AAGfW,QAAAA,YAAY,EAAE,KAHC;AAIfC,QAAAA,cAAc,EAAE,KAJD;AAKfV,QAAAA,WAAW,EAAEC,MAAM,CAACC,QAAP,CAAgBC,IALd;AAMfQ,QAAAA,WAAW,EAAE;AANE,OAAV,EAOJf,IAPI,CAAP;AAQA,UAAI,CAACA,IAAI,CAACY,IAAV,EACE;AAEFf,MAAAA,EAAE,CAACmB,IAAH,CAAQ;AACNC,QAAAA,KAAK,EAAE,KADD;AAENC,QAAAA,GAAG,EAAElB,IAAI,CAACc,cAFJ;AAGNK,QAAAA,IAAI,EAAE,MAHA;AAIN;AACA;AACAC,QAAAA,IAAI,EAAE;AACJC,UAAAA,UAAU,EAAE,oBADR;AAEJC,UAAAA,SAAS,EAAEtB,IAAI,CAACE,QAFZ;AAGJqB,UAAAA,aAAa,EAAEvB,IAAI,CAACa,YAHhB;AAIJD,UAAAA,IAAI,EAAEZ,IAAI,CAACY,IAJP;AAKJY,UAAAA,YAAY,EAAExB,IAAI,CAACI;AALf,SANA;AAaNqB,QAAAA,OAAO,EAAE,UAASL,IAAT,EAAe;AACtB,cAAIA,IAAJ,EAAU;AACR,gBAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,cAAAA,IAAI,GAAGvB,EAAE,CAAC6B,SAAH,CAAaN,IAAb,CAAP;AACD;;AACD,gBAAIO,WAAW,GAAGP,IAAI,CAACQ,YAAvB;AACA,gBAAIC,SAAS,GAAGT,IAAI,CAACU,UAArB;AACD;;AACDpB,UAAAA,EAAE,CAACiB,WAAD,EAAcE,SAAd,CAAF;AACD,SAtBK;AAuBNE,QAAAA,KAAK,EAAE,UAASC,cAAT,EAAyBC,UAAzB,EAAqCC,WAArC,EAAkD;AACvDvB,UAAAA,KAAK,CAACqB,cAAD,EAAiBC,UAAjB,EAA6BC,WAA7B,CAAL;AACD,SAzBK;AA0BNC,QAAAA,QAAQ,EAAE,UAASH,cAAT,EAAyBC,UAAzB,EAAqC,CAAE;AA1B3C,OAAR;AA6BD;AArDgB,GAAnB;AAyDA,SAAOnC,YAAP;AACD","sourcesContent":["/* eslint-disable prettier/prettier */\nimport jq from \"jquery\";\n// 获取最新配置\nexport function oauth2Client() {\n  var oauth2Client = {\n    begin: function(opts) {\n      opts = jq.extend({\n        clientId: false,\n        authorizeUrl: false,\n        redirectUri: window.location.href,\n        responseType: 'code'\n      }, opts);\n      window.location.href = opts.authorizeUrl + '?client_id=' +\n        opts.clientId + '&response_type=' + opts.responseType +\n        '&redirect_uri=' + opts.redirectUri;\n    },\n    end: function(opts, fn, errFn) {\n      opts = jq.extend({\n        code: false,\n        clientId: false,\n        clientSecret: false,\n        accessTokenUrl: false,\n        redirectUri: window.location.href,\n        userInfoUrl: false\n      }, opts);\n      if (!opts.code)\n        return;\n\n      jq.ajax({\n        async: false,\n        url: opts.accessTokenUrl,\n        type: \"post\",\n        //\t\t\t\t\tdataType:'jsonp',\n        //\t\t\t\t\tjsonpCallback:'callback',\n        data: {\n          grant_type: \"authorization_code\",\n          client_id: opts.clientId,\n          client_secret: opts.clientSecret,\n          code: opts.code,\n          redirect_uri: opts.redirectUri\n        },\n        success: function(data) {\n          if (data) {\n            if (typeof data === 'string') {\n              data = jq.parseJSON(data);\n            }\n            var accessToken = data.access_token;\n            var expiresIn = data.expires_in;\n          }\n          fn(accessToken, expiresIn);\n        },\n        error: function(XMLHttpRequest, textStatus, errorThrown) {\n          errFn(XMLHttpRequest, textStatus, errorThrown);\n        },\n        complete: function(XMLHttpRequest, textStatus) {}\n      });\n\n    }\n\n  };\n\n  return oauth2Client;\n}"]},"metadata":{},"sourceType":"module"}