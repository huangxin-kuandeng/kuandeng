{"ast":null,"code":"import contentSearch from \"@/components/contentComponents/contentSearch.vue\";\nimport contentPage from \"@/components/contentComponents/contentPage.vue\";\nimport contentEdit from \"@/components/contentComponents/contentEdit.vue\";\nimport * as sysApi from \"../services/sys\";\nimport * as util from \"../services/util\";\nexport default {\n  name: \"search\",\n  props: [\"tagDatas\"],\n\n  data() {\n    return {\n      paneClass: \"\",\n      editDisabled: false,\n      checkDisabled: false,\n      stateDisabled: true,\n      fullscreenLoading: false,\n      lists: [{\n        name: \"数据\",\n        value: \"DATA\",\n        modelName: \"DATA\"\n      }],\n      activeLists: [],\n      value: \"\",\n      taskId: null,\n      featureGroupId: null,\n      pageTotleNum: 0,\n      editHistory: {},\n      pageNum: 0,\n      tagImageId: -1,\n      tagHistoryData: [],\n      editQuestionTag: {},\n      activeName: \"DATA\"\n    };\n  },\n\n  computed: {\n    filterActiveLists() {\n      var activeList = this.activeLists[this.pageNum - 1];\n      var datas = activeList ? activeList.datas : [];\n      return datas;\n    }\n\n  },\n\n  mounted() {\n    this.refresh(1); // editDisabled：属性编辑栏根据用户权限验证是否可修改\n    // stateDisabled：作业员只可改 标记状态\n\n    var role = util.isRoleAuth(this.$user);\n\n    if ([1, 3].includes(role)) {\n      this.editDisabled = false;\n      this.stateDisabled = false;\n    } else {\n      this.editDisabled = true;\n      this.stateDisabled = true;\n    } // checkDisabled：质检标记属性编辑栏根据用户权限验证是否可修改 ： 质检员都可修改\n\n\n    if ([2, 3].includes(role)) {\n      this.checkDisabled = false;\n      this.stateDisabled = false;\n    } else {\n      this.checkDisabled = true;\n    }\n  },\n\n  methods: {\n    contentClass(param) {\n      this.paneClass = param.contentClass;\n    },\n\n    // 模型类型切换\n    handleClick() {\n      return;\n    },\n\n    mouseenter(event) {\n      event.currentTarget.className = \"blockImage show\";\n    },\n\n    mouseleave(event) {\n      event.currentTarget.className = \"blockImage hide\";\n    },\n\n    logout() {// console.log(\"退出\");\n    },\n\n    // 是否被标记的状态\n    renderMarkType(tag) {\n      if (!tag) {\n        return;\n      }\n\n      if (this.editQuestionTag[tag.id]) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    // 每次属性编辑后保存编辑记录\n    editList(id, form) {\n      if (!this.editHistory[id]) {\n        this.editHistory[id] = {\n          id: id,\n          tags: {}\n        };\n      }\n\n      var pageNumData = this.activeLists[this.pageNum - 1];\n\n      if (pageNumData && pageNumData.datas) {\n        var entity = pageNumData.datas.find(d => {\n          return d.id == id;\n        });\n\n        if (entity) {\n          for (var key in form) {\n            this.editHistory[id].tags[key] = form[key];\n            entity.tags[key] = form[key];\n          }\n        }\n      }\n    },\n\n    // 每次编辑质检标记属性\n    checkList(id, form) {\n      this.$emit(\"checkTagEdit\", id, form);\n    },\n\n    changeTagEditorForm(id, prop) {\n      this.$refs.contentEdit.changeTagEditorForm(id, prop);\n    },\n\n    // 问题标记--新增和删除\n    tagImage(id, form) {\n      var properties = form;\n\n      if (this.editQuestionTag[id]) {\n        this.editQuestionTag[id] = false;\n      } else {\n        properties.ENTITY_ID = id;\n        this.editQuestionTag[id] = properties;\n      }\n    },\n\n    // 问题标记--新增和删除\n    tagImageDelete(id) {\n      this.editQuestionTag[id] = false;\n    },\n\n    // 保存问题标记\n    saveQuestionTag(list) {\n      if (!this.taskId) {\n        return;\n      }\n\n      var createTag = [];\n      var deleteTag = [];\n\n      for (var id in this.editQuestionTag) {\n        var catchTag = this.tagHistoryData.find(d => {\n          return d.newTag.ENTITY_ID == id;\n        });\n\n        if (this.editQuestionTag[id] && !catchTag) {\n          //新增\n          createTag.push({\n            properties: this.editQuestionTag[id]\n          });\n        } else if (!this.editQuestionTag[id] && catchTag) {\n          deleteTag.push(catchTag.id);\n        }\n      }\n\n      if (deleteTag.length) {\n        this.deleteQuestionTag(deleteTag);\n      }\n\n      if (createTag.length) {\n        this.createQuestionTag(createTag, list);\n      }\n    },\n\n    // 新增问题标记\n    createQuestionTag(createTag, list) {\n      var $url = this.$config.kd_tag + \"tag/QUESTION_TAG/create\";\n      sysApi.postAsyncDatas({\n        url: $url,\n        data: createTag\n      }).then(res => {\n        if (res.code == \"0\") {\n          this.$notify({\n            title: \"问题标记\",\n            message: \"新增问题标记成功\",\n            type: \"success\"\n          });\n        } else {\n          this.$notify({\n            title: \"问题标记\",\n            message: \"新增问题标记失败：\" + res.message,\n            type: \"warning\"\n          });\n        } // 如果不存在保存的属性数据，则自己去单独执行一次查询问题标记的事件\n\n\n        if (!list.length) {\n          this.queryTagImage();\n        }\n      });\n    },\n\n    // 删除问题标记\n    deleteQuestionTag(deleteTag) {\n      var ids = deleteTag.join(\",\");\n      var $url = this.$config.kd_tag + \"tag/QUESTION_TAG/deleteByIds?ids=\" + ids;\n      sysApi.getAsyncDatas({\n        url: $url\n      }).then(res => {\n        if (res.code == \"0\") {\n          this.$notify({\n            title: \"问题标记\",\n            message: \"删除问题标记成功\",\n            type: \"success\"\n          });\n        } else {\n          this.$notify({\n            title: \"问题标记\",\n            message: \"删除问题标记失败：\" + res.message,\n            type: \"warning\"\n          });\n        }\n      });\n    },\n\n    // 查询当前任务--问题标记\n    queryTagImage() {\n      this.tagHistoryData = [];\n      this.editQuestionTag = {};\n\n      if (!this.taskId) {\n        return;\n      }\n\n      var $this = this;\n      var temp1 = [{\n        k: \"TASK_ID\",\n        op: \"eq\",\n        v: this.taskId\n      }];\n      var $url = $this.$config.kd_tag + \"tag/osm/QUESTION_TAG/query?tagsJson=\" + encodeURIComponent(JSON.stringify(temp1));\n      sysApi.getAsyncDatas({\n        url: $url\n      }).then(res => {\n        if (res.code != \"0\") {\n          $this.$notify({\n            title: \"问题标记\",\n            message: res.message,\n            type: \"warning\"\n          });\n        }\n\n        var nodes = res.result && res.result.node || [];\n        nodes.forEach(d => {\n          var tags = util.formatTags(d.tag);\n          d.newTag = tags;\n\n          if (tags.ENTITY_ID) {\n            this.editQuestionTag[tags.ENTITY_ID] = true;\n          }\n        });\n        this.tagHistoryData = nodes;\n      });\n    },\n\n    // 完成保存所修改的数据\n    finishTask() {\n      var $this = this;\n      $this.$emit(\"finishTask\", \"report\");\n      var list = [];\n\n      for (var id in $this.editHistory) {\n        list.push($this.editHistory[id]);\n      }\n\n      $this.saveQuestionTag(list);\n\n      if (!list.length || !$this.taskId) {\n        return;\n      }\n\n      $this.fullscreenLoading = true;\n      var $url = $this.$config.kds_data + \"data/tags/edit?taskId=\" + $this.taskId + \"&featureGroupId=\" + $this.featureGroupId;\n      sysApi.postAsyncDatas({\n        url: $url,\n        data: list\n      }).then(res => {\n        $this.message(res.code, res.message);\n        $this.fullscreenLoading = false;\n\n        if (res.code == \"0\") {\n          $this.refresh();\n        }\n      });\n    },\n\n    remakeTask() {\n      this.taskId = null;\n      this.featureGroupId = null;\n      this.$emit(\"finishTask\", \"task\");\n    },\n\n    // 刷新数据\n    refresh(param = {}) {\n      var page = param.page || this.pageNum;\n\n      if (param.id) {\n        this.taskId = param.id;\n        this.featureGroupId = param.featureGroupId;\n      }\n\n      this.queryTagImage();\n      this.findLists(page);\n    },\n\n    // 刷新报表\n    refreshForm() {\n      this.$emit(\"refreshForm\", this.taskId);\n    },\n\n    // 分页查询\n    pageChange(page) {\n      this.pageNum = page;\n    },\n\n    // 查询模型分类\n    findLists(page) {\n      var $this = this;\n      $this.pageTotleNum = 0;\n      $this.activeLists = [];\n\n      if (page) {\n        $this.pageNum = page;\n      }\n\n      if (!$this.taskId) {\n        return;\n      }\n\n      var $url = $this.$config.kds_data + \"data/tags/queryByGroup?taskId=\" + // 1 +\n      $this.taskId + \"&featureGroupId=\" + $this.featureGroupId;\n      $this.fullscreenLoading = true;\n      var new_multi_tiles = $this.$config.file.replace(/\\{switch:([^}]+)\\}/, function (s, r) {\n        var subdomains = r.split(\",\");\n        return subdomains[0 % subdomains.length];\n      });\n      sysApi.getAsyncDatas({\n        url: $url,\n        data: {}\n      }).then(res => {\n        if (res.code != \"0\") {\n          $this.$notify({\n            title: \"数据\",\n            message: res.message,\n            type: \"warning\"\n          });\n        }\n\n        var results = res.result || [];\n\n        if (results.length) {\n          $this.pageNum = 1;\n        }\n\n        results.forEach(d => {\n          var dataChild = d.datas || [];\n\n          for (var s = 0; s < dataChild.length; s++) {\n            let key = dataChild[s].dataTaskId;\n            let t = new Date().getTime();\n            let index = dataChild[s].modelName + \"_\" + dataChild[s].entityId;\n            let projectId = dataChild[s].autoProjectId;\n            let file_url = new_multi_tiles + \"key=\" + key + \"&index=\" + index + \"&projectId=\" + projectId + \"&t=\" + t;\n            dataChild[s].file_url = file_url;\n          }\n        });\n        $this.fullscreenLoading = false;\n        $this.pageTotleNum = results.length;\n        $this.activeLists = results;\n      });\n    },\n\n    message(type, message) {\n      if (type == \"0\") {\n        this.$notify({\n          title: \"数据属性编辑\",\n          message: message,\n          type: \"success\"\n        });\n      } else {\n        this.$notify({\n          title: \"数据属性编辑\",\n          message: \"错误信息：\" + message,\n          type: \"warning\"\n        });\n      }\n    }\n\n  },\n  components: {\n    contentSearch,\n    contentPage,\n    contentEdit\n  }\n};","map":{"version":3,"sources":["D:\\web_editor_hd\\src\\main\\webapp\\batch-edit\\src\\components\\content.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"tabs\" :class=\"paneClass\">\n    <contentSearch\n      @remakeTask=\"remakeTask\"\n      @refresh=\"refresh\"\n      @finish=\"finishTask\"\n      @refreshForm=\"refreshForm\"\n    />\n    <el-tabs\n      v-loading.fullscreen.lock=\"fullscreenLoading\"\n      class=\"contentTabs\"\n      v-model=\"activeName\"\n      type=\"border-card\"\n      @tab-click=\"handleClick\"\n    >\n      <el-tab-pane\n        v-for=\"list in lists\"\n        :label=\"list.name\"\n        :name=\"list.value\"\n        :key=\"list.name\"\n      >\n        <el-scrollbar>\n          <div\n            v-for=\"aList in filterActiveLists\"\n            :key=\"aList.id\"\n            class=\"blockImage hide\"\n            @mouseenter=\"mouseenter($event)\"\n            @mouseleave=\"mouseleave($event)\"\n          >\n            <el-image\n              style=\"height: 170px\"\n              :src=\"aList.file_url\"\n              :preview-src-list=\"[aList.file_url]\"\n              fit=\"fill\"\n            >\n            </el-image>\n            <contentEdit\n              ref=\"contentEdit\"\n              :editTags=\"aList.tags\"\n              :tagDatas=\"tagDatas\"\n              :modelName=\"aList.modelName\"\n              :editDisabled=\"editDisabled\"\n              :checkDisabled=\"checkDisabled\"\n              :stateDisabled=\"stateDisabled\"\n              :editId=\"aList.id\"\n              :entityId=\"aList.entityId\"\n              @editList=\"editList\"\n              @checkList=\"checkList\"\n              @tagImage=\"tagImage\"\n            />\n            <span\n              class=\"demonstration\"\n              :title=\"aList.modelName + '_' + aList.entityId\"\n              >{{ aList.modelName }}_{{ aList.entityId }}</span\n            >\n            <i\n              class=\"mark el-icon-warning\"\n              v-show=\"editQuestionTag[aList.id]\"\n            ></i>\n          </div>\n        </el-scrollbar>\n        <contentPage :pageTotleNum=\"pageTotleNum\" @pageChange=\"pageChange\" />\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport contentSearch from \"@/components/contentComponents/contentSearch.vue\";\nimport contentPage from \"@/components/contentComponents/contentPage.vue\";\nimport contentEdit from \"@/components/contentComponents/contentEdit.vue\";\nimport * as sysApi from \"../services/sys\";\nimport * as util from \"../services/util\";\nexport default {\n  name: \"search\",\n  props: [\"tagDatas\"],\n  data() {\n    return {\n      paneClass: \"\",\n      editDisabled: false,\n      checkDisabled: false,\n      stateDisabled: true,\n      fullscreenLoading: false,\n      lists: [\n        {\n          name: \"数据\",\n          value: \"DATA\",\n          modelName: \"DATA\",\n        },\n      ],\n      activeLists: [],\n      value: \"\",\n      taskId: null,\n      featureGroupId: null,\n      pageTotleNum: 0,\n      editHistory: {},\n      pageNum: 0,\n      tagImageId: -1,\n      tagHistoryData: [],\n      editQuestionTag: {},\n      activeName: \"DATA\",\n    };\n  },\n  computed: {\n    filterActiveLists() {\n      var activeList = this.activeLists[this.pageNum - 1];\n      var datas = activeList ? activeList.datas : [];\n      return datas;\n    },\n  },\n  mounted() {\n    this.refresh(1);\n    // editDisabled：属性编辑栏根据用户权限验证是否可修改\n    // stateDisabled：作业员只可改 标记状态\n    var role = util.isRoleAuth(this.$user);\n    if ([1, 3].includes(role)) {\n      this.editDisabled = false;\n      this.stateDisabled = false;\n    } else {\n      this.editDisabled = true;\n      this.stateDisabled = true;\n    }\n    // checkDisabled：质检标记属性编辑栏根据用户权限验证是否可修改 ： 质检员都可修改\n    if ([2, 3].includes(role)) {\n      this.checkDisabled = false;\n      this.stateDisabled = false;\n    } else {\n      this.checkDisabled = true;\n    }\n  },\n  methods: {\n    contentClass(param) {\n      this.paneClass = param.contentClass;\n    },\n    // 模型类型切换\n    handleClick() {\n      return;\n    },\n    mouseenter(event) {\n      event.currentTarget.className = \"blockImage show\";\n    },\n    mouseleave(event) {\n      event.currentTarget.className = \"blockImage hide\";\n    },\n    logout() {\n      // console.log(\"退出\");\n    },\n    // 是否被标记的状态\n    renderMarkType(tag) {\n      if (!tag) {\n        return;\n      }\n      if (this.editQuestionTag[tag.id]) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    // 每次属性编辑后保存编辑记录\n    editList(id, form) {\n      if (!this.editHistory[id]) {\n        this.editHistory[id] = {\n          id: id,\n          tags: {},\n        };\n      }\n      var pageNumData = this.activeLists[this.pageNum - 1];\n      if (pageNumData && pageNumData.datas) {\n        var entity = pageNumData.datas.find((d) => {\n          return d.id == id;\n        });\n        if (entity) {\n          for (var key in form) {\n            this.editHistory[id].tags[key] = form[key];\n            entity.tags[key] = form[key];\n          }\n        }\n      }\n    },\n    // 每次编辑质检标记属性\n    checkList(id, form) {\n      this.$emit(\"checkTagEdit\", id, form);\n    },\n    changeTagEditorForm(id, prop) {\n      this.$refs.contentEdit.changeTagEditorForm(id, prop);\n    },\n    // 问题标记--新增和删除\n    tagImage(id, form) {\n      var properties = form;\n      if (this.editQuestionTag[id]) {\n        this.editQuestionTag[id] = false;\n      } else {\n        properties.ENTITY_ID = id;\n        this.editQuestionTag[id] = properties;\n      }\n    },\n    // 问题标记--新增和删除\n    tagImageDelete(id) {\n      this.editQuestionTag[id] = false;\n    },\n    // 保存问题标记\n    saveQuestionTag(list) {\n      if (!this.taskId) {\n        return;\n      }\n      var createTag = [];\n      var deleteTag = [];\n      for (var id in this.editQuestionTag) {\n        var catchTag = this.tagHistoryData.find((d) => {\n          return d.newTag.ENTITY_ID == id;\n        });\n        if (this.editQuestionTag[id] && !catchTag) {\n          //新增\n          createTag.push({\n            properties: this.editQuestionTag[id],\n          });\n        } else if (!this.editQuestionTag[id] && catchTag) {\n          deleteTag.push(catchTag.id);\n        }\n      }\n      if (deleteTag.length) {\n        this.deleteQuestionTag(deleteTag);\n      }\n      if (createTag.length) {\n        this.createQuestionTag(createTag, list);\n      }\n    },\n    // 新增问题标记\n    createQuestionTag(createTag, list) {\n      var $url = this.$config.kd_tag + \"tag/QUESTION_TAG/create\";\n      sysApi\n        .postAsyncDatas({\n          url: $url,\n          data: createTag,\n        })\n        .then((res) => {\n          if (res.code == \"0\") {\n            this.$notify({\n              title: \"问题标记\",\n              message: \"新增问题标记成功\",\n              type: \"success\",\n            });\n          } else {\n            this.$notify({\n              title: \"问题标记\",\n              message: \"新增问题标记失败：\" + res.message,\n              type: \"warning\",\n            });\n          }\n          // 如果不存在保存的属性数据，则自己去单独执行一次查询问题标记的事件\n          if (!list.length) {\n            this.queryTagImage();\n          }\n        });\n    },\n    // 删除问题标记\n    deleteQuestionTag(deleteTag) {\n      var ids = deleteTag.join(\",\");\n      var $url =\n        this.$config.kd_tag + \"tag/QUESTION_TAG/deleteByIds?ids=\" + ids;\n      sysApi\n        .getAsyncDatas({\n          url: $url,\n        })\n        .then((res) => {\n          if (res.code == \"0\") {\n            this.$notify({\n              title: \"问题标记\",\n              message: \"删除问题标记成功\",\n              type: \"success\",\n            });\n          } else {\n            this.$notify({\n              title: \"问题标记\",\n              message: \"删除问题标记失败：\" + res.message,\n              type: \"warning\",\n            });\n          }\n        });\n    },\n    // 查询当前任务--问题标记\n    queryTagImage() {\n      this.tagHistoryData = [];\n      this.editQuestionTag = {};\n      if (!this.taskId) {\n        return;\n      }\n\n      var $this = this;\n      var temp1 = [{ k: \"TASK_ID\", op: \"eq\", v: this.taskId }];\n      var $url =\n        $this.$config.kd_tag +\n        \"tag/osm/QUESTION_TAG/query?tagsJson=\" +\n        encodeURIComponent(JSON.stringify(temp1));\n      sysApi\n        .getAsyncDatas({\n          url: $url,\n        })\n        .then((res) => {\n          if (res.code != \"0\") {\n            $this.$notify({\n              title: \"问题标记\",\n              message: res.message,\n              type: \"warning\",\n            });\n          }\n          var nodes = (res.result && res.result.node) || [];\n          nodes.forEach((d) => {\n            var tags = util.formatTags(d.tag);\n            d.newTag = tags;\n            if (tags.ENTITY_ID) {\n              this.editQuestionTag[tags.ENTITY_ID] = true;\n            }\n          });\n          this.tagHistoryData = nodes;\n        });\n    },\n    // 完成保存所修改的数据\n    finishTask() {\n      var $this = this;\n      $this.$emit(\"finishTask\", \"report\");\n      var list = [];\n      for (var id in $this.editHistory) {\n        list.push($this.editHistory[id]);\n      }\n      $this.saveQuestionTag(list);\n      if (!list.length || !$this.taskId) {\n        return;\n      }\n      $this.fullscreenLoading = true;\n      var $url =\n        $this.$config.kds_data +\n        \"data/tags/edit?taskId=\" +\n        $this.taskId +\n        \"&featureGroupId=\" +\n        $this.featureGroupId;\n      sysApi\n        .postAsyncDatas({\n          url: $url,\n          data: list,\n        })\n        .then((res) => {\n          $this.message(res.code, res.message);\n          $this.fullscreenLoading = false;\n          if (res.code == \"0\") {\n            $this.refresh();\n          }\n        });\n    },\n    remakeTask() {\n      this.taskId = null;\n      this.featureGroupId = null;\n      this.$emit(\"finishTask\", \"task\");\n    },\n    // 刷新数据\n    refresh(param = {}) {\n      var page = param.page || this.pageNum;\n      if (param.id) {\n        this.taskId = param.id;\n        this.featureGroupId = param.featureGroupId;\n      }\n      this.queryTagImage();\n      this.findLists(page);\n    },\n    // 刷新报表\n    refreshForm() {\n      this.$emit(\"refreshForm\", this.taskId);\n    },\n    // 分页查询\n    pageChange(page) {\n      this.pageNum = page;\n    },\n    // 查询模型分类\n    findLists(page) {\n      var $this = this;\n      $this.pageTotleNum = 0;\n      $this.activeLists = [];\n      if (page) {\n        $this.pageNum = page;\n      }\n      if (!$this.taskId) {\n        return;\n      }\n      var $url =\n        $this.$config.kds_data +\n        \"data/tags/queryByGroup?taskId=\" +\n        // 1 +\n        $this.taskId +\n        \"&featureGroupId=\" +\n        $this.featureGroupId;\n      $this.fullscreenLoading = true;\n\n      var new_multi_tiles = $this.$config.file.replace(\n        /\\{switch:([^}]+)\\}/,\n        function (s, r) {\n          var subdomains = r.split(\",\");\n          return subdomains[0 % subdomains.length];\n        }\n      );\n      sysApi\n        .getAsyncDatas({\n          url: $url,\n          data: {},\n        })\n        .then((res) => {\n          if (res.code != \"0\") {\n            $this.$notify({\n              title: \"数据\",\n              message: res.message,\n              type: \"warning\",\n            });\n          }\n          var results = res.result || [];\n          if (results.length) {\n            $this.pageNum = 1;\n          }\n          results.forEach((d) => {\n            var dataChild = d.datas || [];\n            for (var s = 0; s < dataChild.length; s++) {\n              let key = dataChild[s].dataTaskId;\n              let t = new Date().getTime();\n              let index = dataChild[s].modelName + \"_\" + dataChild[s].entityId;\n              let projectId = dataChild[s].autoProjectId;\n              let file_url =\n                new_multi_tiles +\n                \"key=\" +\n                key +\n                \"&index=\" +\n                index +\n                \"&projectId=\" +\n                projectId +\n                \"&t=\" +\n                t;\n              dataChild[s].file_url = file_url;\n            }\n          });\n          $this.fullscreenLoading = false;\n          $this.pageTotleNum = results.length;\n          $this.activeLists = results;\n        });\n    },\n    message(type, message) {\n      if (type == \"0\") {\n        this.$notify({\n          title: \"数据属性编辑\",\n          message: message,\n          type: \"success\",\n        });\n      } else {\n        this.$notify({\n          title: \"数据属性编辑\",\n          message: \"错误信息：\" + message,\n          type: \"warning\",\n        });\n      }\n    },\n  },\n  components: {\n    contentSearch,\n    contentPage,\n    contentEdit,\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n.tabs {\n  float: left;\n  width: 100%;\n  margin-bottom: 10px;\n  height: calc(100% - 140px);\n  border-bottom: 1px solid #e4e7ed;\n}\n.tabs.little {\n  z-index: 3000;\n  position: relative;\n  height: calc(100% - 640px);\n}\n.tabs .el-scrollbar {\n  height: calc(100% - 40px);\n}\n.tabs.little .el-scrollbar {\n  height: calc(100% - 20px);\n}\n.tabs.little .pages {\n  bottom: 0px;\n}\n.tabs .contentTabs {\n  height: 100%;\n}\n.tabs .contentTabs .el-tabs__content {\n  height: calc(100% - 50px);\n  padding-top: 10px;\n  background-color: #f2f4f9;\n  overflow: auto;\n}\n.tabs .contentTabs .el-tabs__content .el-tab-pane {\n  height: 100%;\n}\n.tabs .blockImage {\n  width: calc(14.2% - 30px);\n  margin: 0px 15px;\n  height: 200px;\n  float: left;\n  position: relative;\n}\n.tabs .blockImage .mark {\n  color: rgb(255, 0, 0);\n  position: absolute;\n  right: 5px;\n  bottom: 35px;\n  z-index: 1;\n}\n.tabs .blockImage img {\n  // width: calc(100% - 4px);\n  width: auto;\n  max-width: 100%;\n  height: calc(100% - 4px);\n  border: 2px solid rgba(58, 142, 230, 0);\n}\n.tabs .blockImage img:hover {\n  border: 2px solid rgba(58, 142, 230, 1);\n}\n.tabs .blockImage .demonstration {\n  float: left;\n  height: 30px;\n  position: absolute;\n  bottom: 0px;\n  width: 100%;\n  left: 0px;\n  line-height: 30px;\n  font-size: 16px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n.tabs .blockImage.hide .footHeaderToggle {\n  opacity: 0;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}