{"ast":null,"code":"export default {\n  name: \"contentEdit\",\n\n  data() {\n    return {\n      editTagId: null,\n      page: {\n        currentPage: 1,\n        pageSize: 1,\n        totalPage: 1\n      },\n      enterable: false,\n      //根据用户权限校验：作业员可修改；质检员只读。\n      toggleClass: this.hideHeader ? \"el-icon-caret-top\" : \"el-icon-caret-bottom\",\n      visible: false,\n      childInstanseTag: this.instanseTag,\n      formType: 1,\n      popWidth: 400,\n      placement: \"right\",\n      formDatas: [],\n      editForm: {},\n      checkForm: {\n        ERROR_TYPE: \"\",\n        ATTRIBUTE: \"\",\n        STATE: \"\",\n        DESC: \"\"\n      },\n      ATTRIBUTE_filter: [\"AREA_FLAG\", \"OPERATOR\", \"SOURCE\", \"SDATE\", \"FLAG\", \"TASK_ID\", \"BATCH\", \"SEQ\"],\n      editRules: {},\n      checkRules: {\n        ERROR_TYPE: [{\n          required: false,\n          message: \"请选择错误类型\",\n          trigger: \"change\"\n        }],\n        ATTRIBUTE: [{\n          required: false,\n          message: \"请选择错误属性\",\n          trigger: \"change\"\n        }],\n        STATE: [{\n          required: false,\n          message: \"请选择标记状态\",\n          trigger: \"change\"\n        }],\n        DESC: [{\n          required: false,\n          message: \"请输入内容描述\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n\n  props: [\"editId\", \"entityId\", \"editTags\", \"modelName\", \"editDisabled\", \"checkDisabled\", \"stateDisabled\", \"tagDatas\"],\n\n  mounted() {},\n\n  methods: {\n    getInstanse(model) {\n      var modelFile = this.$tags[model] || {};\n      var fields = modelFile.fields || [];\n      return fields;\n    },\n\n    // 每次进行属性编辑时，初始化当前编辑界面\n    attributeInstanseInit() {\n      this.editRules = {};\n      this.editForm = {};\n      this.formDatas = [];\n      var modelAttr = this.$fruit[this.modelName] || {},\n          fields = modelAttr.fields || [],\n          cloneFields = this.$_.cloneDeep(fields);\n      cloneFields.forEach(d => {\n        if (d.display) {\n          var trigger = d.fieldInput == \"select\" ? \"change\" : \"blur\";\n          var text = d.fieldInput == \"select\" ? \"选择\" : \"输入\";\n          var message = \"请\" + text + d.fieldTitle;\n          var defaultValue = this.editTags[d.fieldName] || \"\";\n          this.editForm[d.fieldName] = defaultValue || d.defaultValue || \"\";\n          this.editRules[d.fieldName] = [{\n            required: false,\n            message: message,\n            trigger: trigger\n          }];\n          d.message = message;\n        }\n      });\n      this.formDatas = cloneFields;\n    },\n\n    tagInstanseInit() {\n      this.formDatas = [];\n      var instanseTags = this.getInstanse(\"QUALITY_TAG\");\n      instanseTags.forEach(d => {\n        if (d.fieldName == \"STATE\") {\n          this.formDatas[3] = d;\n          this.checkForm[d.fieldName] = d.defaultValue || \"\";\n        } else if (d.fieldName == \"ERROR_TYPE\") {\n          this.formDatas[0] = d;\n          this.checkForm[d.fieldName] = d.defaultValue || \"\";\n        } else if (d.fieldName == \"DESC\") {\n          this.formDatas[2] = d;\n          this.checkForm[d.fieldName] = d.defaultValue || \"\";\n        } else if (d.fieldName == \"ATTRIBUTE\") {\n          d.fieldInput = \"select\";\n          d.fieldType = {\n            fieldTypeValues: []\n          };\n          this.formDatas[1] = d;\n          this.checkForm[d.fieldName] = d.defaultValue || \"\";\n        }\n      });\n    },\n\n    /*\n     **级联关系的联动处理**\n     *1、传fieldName：\n     *****   则查看当前fieldName下是否存在子集关系，并进行更新选项\n     *2、不传fieldName：\n     *****   则查看当前模型下所有的级联关系，并进行更新所有选项\n     */\n    groupLinkage(fieldName, type) {\n      var $this = this;\n      var modelFields = $this.$fruit[$this.modelName] || null;\n      var fields = modelFields ? modelFields.fields : [];\n\n      if (fieldName == \"ERROR_TYPE\") {\n        var attrs = this.formDatas.find(d => {\n          return d.fieldName == \"ATTRIBUTE\";\n        });\n\n        if (![\"3\", \"4\", \"8\"].includes($this.checkForm[fieldName] + \"\")) {\n          attrs.cloneValues = [];\n        } else {\n          attrs.cloneValues = fields.filter(function (d) {\n            return !$this.ATTRIBUTE_filter.includes(d.fieldName);\n          }).map(function (d) {\n            return {\n              name: d.fieldTitle || d.fieldName,\n              value: d.fieldName\n            };\n          }) || [];\n        }\n\n        if (!type) {\n          $this.checkForm[\"ATTRIBUTE\"] = \"\";\n        }\n\n        console.log(this.ATTRIBUTE_filter);\n      } else {\n        fields.forEach(d => {\n          if (fieldName && d.fieldName != fieldName) {\n            return;\n          }\n\n          var selectGroup = d.selectGroup || [];\n\n          if (selectGroup.length) {\n            var fieldTypeValues = d.fieldType.fieldTypeValues || [];\n            var value = $this.editForm[d.fieldName] || d.defaultValue;\n            var selectValue = fieldTypeValues.find(s => {\n              return s.value == value;\n            });\n\n            for (var i = 0; i < selectGroup.length; i++) {\n              $this.groupSelectChange(selectGroup[i], selectValue, fieldName);\n            }\n          }\n        });\n      }\n    },\n\n    groupSelectChange(fieldName, selectValue, f_Name) {\n      var fieldSelect = [];\n      var field = this.formDatas.find(d => {\n        return d.fieldName == fieldName;\n      });\n\n      if (selectValue && selectValue.id) {\n        fieldSelect = field.fieldType.fieldTypeValues.filter(d => {\n          return d.parentId == selectValue.id;\n        });\n      }\n\n      field.cloneValues = fieldSelect;\n\n      if (f_Name) {\n        this.editForm[fieldName] = field.defaultValue;\n      }\n    },\n\n    /*\n     **编辑属性面板的处理**\n     *1、editImage：\n     *****   属性编辑\n     *2、checkImage：\n     *****   质检标状态编辑\n     */\n    editImage(e) {\n      this.attributeInstanseInit();\n      this.groupLinkage();\n\n      if (window.innerWidth - e.clientX < 600) {\n        this.placement = \"left\";\n      } else {\n        this.placement = \"right\";\n      }\n\n      this.popWidth = 400;\n      this.formType = 1;\n      this.visible = true;\n    },\n\n    checkImage(e) {\n      this.page.currentPage = 1;\n      this.tagInstanseInit();\n      this.changeTagEditor();\n\n      if (this.page.totalPage) {\n        if (window.innerWidth - e.clientX < 500) {\n          this.placement = \"left\";\n        } else {\n          this.placement = \"right\";\n        }\n\n        this.popWidth = 400;\n        this.formType = 2;\n        this.visible = true;\n      } else if (!this.page.totalPage && this.tagDatas.length) {\n        this.visible = false;\n        this.$notify({\n          title: \"提示\",\n          message: \"未匹配到质检标记\",\n          type: \"warning\"\n        });\n      }\n    },\n\n    // 属性栏编辑分页监听\n    handleSizeChange(val) {\n      this.page.currentPage = val;\n      this.submitCheck(\"checkForm\", true);\n      this.changeTagEditor();\n    },\n\n    handleCurrentChange(val) {\n      this.page.currentPage = val;\n      this.submitCheck(\"checkForm\", true);\n      this.changeTagEditor();\n    },\n\n    changeTagEditor() {\n      // var f_id = this.entityId;\n      var f_id = \"28\";\n      var thisData = this.tagDatas.filter(d => {\n        return d.cloneTag.FEATURE_ID == f_id;\n      });\n      var pageData = thisData[this.page.currentPage - 1];\n      this.page.totalPage = thisData.length;\n\n      if (pageData) {\n        this.editTagId = pageData.id;\n      }\n\n      for (var item in this.checkForm) {\n        if (pageData) {\n          // this.checkForm[item] =\n          //   pageData.cloneTag[item] || this.checkForm[item];\n          this.checkForm[item] = pageData.cloneTag[item] || \"\";\n        }\n      }\n\n      this.groupLinkage(\"ERROR_TYPE\", true);\n    },\n\n    changeTagEditorForm(u_id, properties) {\n      if (u_id && u_id == this.editTagId) {\n        for (var item in properties) {\n          this.checkForm[item] = properties[item];\n        }\n      }\n    },\n\n    tagImage() {\n      this.$emit(\"tagImage\", this.editId);\n    },\n\n    submitEdit(formName) {\n      var $this = this;\n      $this.$refs[formName].validate(valid => {\n        if (valid) {\n          $this.visible = false;\n          $this.$emit(\"editList\", $this.editId, $this.editForm);\n        } else {\n          return false;\n        }\n      });\n    },\n\n    submitCheck(formName, type) {\n      var $this = this;\n      $this.$refs[formName].validate(valid => {\n        if (valid) {\n          $this.$emit(\"checkList\", $this.editTagId, $this.checkForm);\n\n          if (this.page.currentPage == this.page.totalPage && !type) {\n            $this.visible = false;\n          } else if (!type) {\n            this.page.currentPage++;\n            this.changeTagEditor();\n          }\n        } else {\n          return false;\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"sources":["D:\\web_editor_hd\\src\\main\\webapp\\batch-edit\\src\\components\\contentComponents\\contentEdit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"contentEdit\">\n    <el-popover\n      :placement=\"placement\"\n      :width=\"popWidth\"\n      trigger=\"manual\"\n      :popper-options=\"{\n        boundariesElement: 'body',\n        gpuAcceleration: false,\n      }\"\n      v-model:visible=\"visible\"\n    >\n      <p>属性栏</p>\n      <el-scrollbar max-height=\"450px\" style=\"padding-bottom: 30px\">\n        <el-form\n          v-if=\"formType == 1\"\n          ref=\"editForm\"\n          :model=\"editForm\"\n          label-width=\"150px\"\n          size=\"medium\"\n          :rules=\"editRules\"\n          :label-position=\"'left'\"\n          :disabled=\"editDisabled\"\n        >\n          <div v-for=\"formChild in formDatas\" :key=\"formChild.fieldName\">\n            <el-form-item\n              v-if=\"formChild.display\"\n              :label=\"formChild.fieldTitle\"\n              :prop=\"formChild.fieldName\"\n            >\n              <el-select\n                v-if=\"formChild.fieldInput == 'select'\"\n                v-model=\"editForm[formChild.fieldName]\"\n                placeholder=\"formChild.message\"\n                @change=\"groupLinkage(formChild.fieldName)\"\n              >\n                <el-option\n                  v-for=\"options in formChild.cloneValues\"\n                  :key=\"options.value\"\n                  :label=\"options.name\"\n                  :value=\"options.value\"\n                ></el-option>\n              </el-select>\n              <el-input\n                v-else\n                type=\"text\"\n                v-model=\"editForm[formChild.fieldName]\"\n              ></el-input>\n            </el-form-item>\n          </div>\n          <el-form-item size=\"large\">\n            <el-button\n              type=\"primary\"\n              size=\"medium\"\n              @click=\"submitEdit('editForm')\"\n              >确定</el-button\n            >\n            <el-button size=\"medium\" @click=\"visible = false\">取消</el-button>\n          </el-form-item>\n        </el-form>\n        <el-form\n          v-if=\"formType == 2\"\n          ref=\"checkForm\"\n          :model=\"checkForm\"\n          label-width=\"120px\"\n          size=\"medium\"\n          :label-position=\"'left'\"\n          :rules=\"checkRules\"\n        >\n          <div v-for=\"formChild in formDatas\" :key=\"formChild.fieldName\">\n            <el-form-item\n              :label=\"formChild.fieldTitle\"\n              :prop=\"formChild.fieldName\"\n            >\n              <el-radio-group\n                v-if=\"formChild.fieldName == 'STATE'\"\n                v-model=\"checkForm[formChild.fieldName]\"\n                size=\"medium\"\n              >\n                <el-radio\n                  v-for=\"formdata in formChild.fieldType.fieldTypeValues\"\n                  :key=\"formdata.value\"\n                  :value=\"formdata.value\"\n                  :label=\"formdata.value\"\n                  border\n                  >{{ formdata.name }}</el-radio\n                >\n              </el-radio-group>\n              <el-input\n                v-else-if=\"formChild.fieldName == 'DESC'\"\n                type=\"textarea\"\n                v-model=\"checkForm[formChild.fieldName]\"\n              ></el-input>\n              <el-select\n                v-else-if=\"formChild.fieldInput == 'select'\"\n                v-model=\"checkForm[formChild.fieldName]\"\n                :placeholder=\"formChild.fieldTitle\"\n                @change=\"groupLinkage(formChild.fieldName)\"\n              >\n                <el-option\n                  v-for=\"options in formChild.cloneValues || []\"\n                  :key=\"options.value\"\n                  :label=\"options.name\"\n                  :value=\"options.value\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </div>\n          <el-form-item size=\"large\">\n            <el-button\n              type=\"primary\"\n              size=\"medium\"\n              @click=\"submitCheck('checkForm')\"\n              >确定</el-button\n            >\n            <el-button size=\"medium\" @click=\"visible = false\">取消</el-button>\n          </el-form-item>\n          <el-pagination\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n            small\n            layout=\"prev, pager, next, jumper\"\n            :current-page=\"page.currentPage\"\n            :page-count=\"page.totalPage\"\n            style=\"position: absolute; bottom: 0px\"\n          >\n          </el-pagination>\n        </el-form>\n      </el-scrollbar>\n      <template #reference>\n        <div class=\"footHeaderToggle\">\n          <el-tooltip\n            class=\"item\"\n            effect=\"dark\"\n            content=\"修改\"\n            placement=\"top\"\n            :enterable=\"enterable\"\n          >\n            <el-button\n              @click.stop=\"editImage($event)\"\n              icon=\"el-icon-edit-outline\"\n              title=\"修改\"\n            ></el-button>\n          </el-tooltip>\n          <el-tooltip\n            class=\"item\"\n            effect=\"dark\"\n            content=\"质检标记\"\n            placement=\"top\"\n            :enterable=\"enterable\"\n          >\n            <el-button\n              @click.stop=\"checkImage($event)\"\n              icon=\"el-icon-location\"\n              title=\"质检标记\"\n            ></el-button>\n          </el-tooltip>\n          <el-tooltip\n            class=\"item\"\n            effect=\"dark\"\n            content=\"问题标记\"\n            placement=\"top\"\n            :enterable=\"enterable\"\n          >\n            <el-button\n              @click.stop=\"tagImage()\"\n              icon=\"el-icon-add-location\"\n              title=\"问题标记\"\n            ></el-button>\n          </el-tooltip>\n        </div>\n      </template>\n    </el-popover>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"contentEdit\",\n  data() {\n    return {\n      editTagId: null,\n      page: {\n        currentPage: 1,\n        pageSize: 1,\n        totalPage: 1,\n      },\n      enterable: false,\n      //根据用户权限校验：作业员可修改；质检员只读。\n      toggleClass: this.hideHeader\n        ? \"el-icon-caret-top\"\n        : \"el-icon-caret-bottom\",\n      visible: false,\n      childInstanseTag: this.instanseTag,\n      formType: 1,\n      popWidth: 400,\n      placement: \"right\",\n      formDatas: [],\n      editForm: {},\n      checkForm: {\n        ERROR_TYPE: \"\",\n        ATTRIBUTE: \"\",\n        STATE: \"\",\n        DESC: \"\",\n      },\n      ATTRIBUTE_filter: [\n        \"AREA_FLAG\",\n        \"OPERATOR\",\n        \"SOURCE\",\n        \"SDATE\",\n        \"FLAG\",\n        \"TASK_ID\",\n        \"BATCH\",\n        \"SEQ\",\n      ],\n      editRules: {},\n      checkRules: {\n        ERROR_TYPE: [\n          { required: false, message: \"请选择错误类型\", trigger: \"change\" },\n        ],\n        ATTRIBUTE: [\n          { required: false, message: \"请选择错误属性\", trigger: \"change\" },\n        ],\n        STATE: [\n          { required: false, message: \"请选择标记状态\", trigger: \"change\" },\n        ],\n        DESC: [{ required: false, message: \"请输入内容描述\", trigger: \"blur\" }],\n      },\n    };\n  },\n  props: [\n    \"editId\",\n    \"entityId\",\n    \"editTags\",\n    \"modelName\",\n    \"editDisabled\",\n    \"checkDisabled\",\n    \"stateDisabled\",\n    \"tagDatas\",\n  ],\n  mounted() {},\n  methods: {\n    getInstanse(model) {\n      var modelFile = this.$tags[model] || {};\n      var fields = modelFile.fields || [];\n      return fields;\n    },\n    // 每次进行属性编辑时，初始化当前编辑界面\n    attributeInstanseInit() {\n      this.editRules = {};\n      this.editForm = {};\n      this.formDatas = [];\n      var modelAttr = this.$fruit[this.modelName] || {},\n        fields = modelAttr.fields || [],\n        cloneFields = this.$_.cloneDeep(fields);\n      cloneFields.forEach((d) => {\n        if (d.display) {\n          var trigger = d.fieldInput == \"select\" ? \"change\" : \"blur\";\n          var text = d.fieldInput == \"select\" ? \"选择\" : \"输入\";\n          var message = \"请\" + text + d.fieldTitle;\n\n          var defaultValue = this.editTags[d.fieldName] || \"\";\n          this.editForm[d.fieldName] = defaultValue || d.defaultValue || \"\";\n          this.editRules[d.fieldName] = [\n            { required: false, message: message, trigger: trigger },\n          ];\n          d.message = message;\n        }\n      });\n      this.formDatas = cloneFields;\n    },\n    tagInstanseInit() {\n      this.formDatas = [];\n      var instanseTags = this.getInstanse(\"QUALITY_TAG\");\n      instanseTags.forEach((d) => {\n        if (d.fieldName == \"STATE\") {\n          this.formDatas[3] = d;\n          this.checkForm[d.fieldName] = d.defaultValue || \"\";\n        } else if (d.fieldName == \"ERROR_TYPE\") {\n          this.formDatas[0] = d;\n          this.checkForm[d.fieldName] = d.defaultValue || \"\";\n        } else if (d.fieldName == \"DESC\") {\n          this.formDatas[2] = d;\n          this.checkForm[d.fieldName] = d.defaultValue || \"\";\n        } else if (d.fieldName == \"ATTRIBUTE\") {\n          d.fieldInput = \"select\";\n          d.fieldType = { fieldTypeValues: [] };\n          this.formDatas[1] = d;\n          this.checkForm[d.fieldName] = d.defaultValue || \"\";\n        }\n      });\n    },\n    /*\n     **级联关系的联动处理**\n     *1、传fieldName：\n     *****   则查看当前fieldName下是否存在子集关系，并进行更新选项\n     *2、不传fieldName：\n     *****   则查看当前模型下所有的级联关系，并进行更新所有选项\n     */\n    groupLinkage(fieldName, type) {\n      var $this = this;\n      var modelFields = $this.$fruit[$this.modelName] || null;\n      var fields = modelFields ? modelFields.fields : [];\n\n      if (fieldName == \"ERROR_TYPE\") {\n        var attrs = this.formDatas.find((d) => {\n          return d.fieldName == \"ATTRIBUTE\";\n        });\n        if (![\"3\", \"4\", \"8\"].includes($this.checkForm[fieldName] + \"\")) {\n          attrs.cloneValues = [];\n        } else {\n          attrs.cloneValues =\n            fields\n              .filter(function (d) {\n                return !$this.ATTRIBUTE_filter.includes(d.fieldName);\n              })\n              .map(function (d) {\n                return {\n                  name: d.fieldTitle || d.fieldName,\n                  value: d.fieldName,\n                };\n              }) || [];\n        }\n        if (!type) {\n          $this.checkForm[\"ATTRIBUTE\"] = \"\";\n        }\n        console.log(this.ATTRIBUTE_filter);\n      } else {\n        fields.forEach((d) => {\n          if (fieldName && d.fieldName != fieldName) {\n            return;\n          }\n          var selectGroup = d.selectGroup || [];\n          if (selectGroup.length) {\n            var fieldTypeValues = d.fieldType.fieldTypeValues || [];\n            var value = $this.editForm[d.fieldName] || d.defaultValue;\n            var selectValue = fieldTypeValues.find((s) => {\n              return s.value == value;\n            });\n            for (var i = 0; i < selectGroup.length; i++) {\n              $this.groupSelectChange(selectGroup[i], selectValue, fieldName);\n            }\n          }\n        });\n      }\n    },\n    groupSelectChange(fieldName, selectValue, f_Name) {\n      var fieldSelect = [];\n      var field = this.formDatas.find((d) => {\n        return d.fieldName == fieldName;\n      });\n      if (selectValue && selectValue.id) {\n        fieldSelect = field.fieldType.fieldTypeValues.filter((d) => {\n          return d.parentId == selectValue.id;\n        });\n      }\n      field.cloneValues = fieldSelect;\n      if (f_Name) {\n        this.editForm[fieldName] = field.defaultValue;\n      }\n    },\n    /*\n     **编辑属性面板的处理**\n     *1、editImage：\n     *****   属性编辑\n     *2、checkImage：\n     *****   质检标状态编辑\n     */\n    editImage(e) {\n      this.attributeInstanseInit();\n      this.groupLinkage();\n      if (window.innerWidth - e.clientX < 600) {\n        this.placement = \"left\";\n      } else {\n        this.placement = \"right\";\n      }\n      this.popWidth = 400;\n      this.formType = 1;\n      this.visible = true;\n    },\n    checkImage(e) {\n      this.page.currentPage = 1;\n      this.tagInstanseInit();\n      this.changeTagEditor();\n      if (this.page.totalPage) {\n        if (window.innerWidth - e.clientX < 500) {\n          this.placement = \"left\";\n        } else {\n          this.placement = \"right\";\n        }\n        this.popWidth = 400;\n        this.formType = 2;\n        this.visible = true;\n      } else if (!this.page.totalPage && this.tagDatas.length) {\n        this.visible = false;\n        this.$notify({\n          title: \"提示\",\n          message: \"未匹配到质检标记\",\n          type: \"warning\",\n        });\n      }\n    },\n    // 属性栏编辑分页监听\n    handleSizeChange(val) {\n      this.page.currentPage = val;\n      this.submitCheck(\"checkForm\", true);\n      this.changeTagEditor();\n    },\n    handleCurrentChange(val) {\n      this.page.currentPage = val;\n      this.submitCheck(\"checkForm\", true);\n      this.changeTagEditor();\n    },\n    changeTagEditor() {\n      // var f_id = this.entityId;\n      var f_id = \"28\";\n      var thisData = this.tagDatas.filter((d) => {\n        return d.cloneTag.FEATURE_ID == f_id;\n      });\n      var pageData = thisData[this.page.currentPage - 1];\n      this.page.totalPage = thisData.length;\n      if (pageData) {\n        this.editTagId = pageData.id;\n      }\n      for (var item in this.checkForm) {\n        if (pageData) {\n          // this.checkForm[item] =\n          //   pageData.cloneTag[item] || this.checkForm[item];\n          this.checkForm[item] = pageData.cloneTag[item] || \"\";\n        }\n      }\n      this.groupLinkage(\"ERROR_TYPE\", true);\n    },\n    changeTagEditorForm(u_id, properties) {\n      if (u_id && u_id == this.editTagId) {\n        for (var item in properties) {\n          this.checkForm[item] = properties[item];\n        }\n      }\n    },\n    tagImage() {\n      this.$emit(\"tagImage\", this.editId);\n    },\n    submitEdit(formName) {\n      var $this = this;\n      $this.$refs[formName].validate((valid) => {\n        if (valid) {\n          $this.visible = false;\n          $this.$emit(\"editList\", $this.editId, $this.editForm);\n        } else {\n          return false;\n        }\n      });\n    },\n    submitCheck(formName, type) {\n      var $this = this;\n      $this.$refs[formName].validate((valid) => {\n        if (valid) {\n          $this.$emit(\"checkList\", $this.editTagId, $this.checkForm);\n          if (this.page.currentPage == this.page.totalPage && !type) {\n            $this.visible = false;\n          } else if (!type) {\n            this.page.currentPage++;\n            this.changeTagEditor();\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n.contentEdit {\n  float: left;\n  margin: 0 auto;\n  padding: 0px;\n  position: absolute;\n  right: 5px;\n  bottom: 35px;\n  width: auto;\n  z-index: 10;\n}\n.contentEdit .footHeaderToggle button {\n  background-color: rgba(0, 0, 0, 0.4);\n  border: 1px solid rgba(58, 142, 230, 0);\n  min-height: 20px;\n  padding: 5px;\n  font-size: 18px;\n  color: rgba(255, 255, 255, 0.6);\n}\n.contentEdit .footHeaderToggle button:focus,\n.contentEdit .footHeaderToggle button:hover {\n  border: 1px solid rgba(58, 142, 230, 1);\n  color: rgba(255, 255, 255, 1);\n}\n.el-form .el-radio-group .el-radio {\n  margin-right: 5px;\n  padding: 5px 10px 0px 5px;\n  height: 26px;\n  margin-bottom: 5px;\n  float: left;\n  margin-left: 0px !important;\n}\n.el-popover {\n  padding-right: 0px;\n}\n.el-popover .el-form {\n  padding-right: 15px;\n  overflow-x: hidden;\n}\n.el-popover p {\n  font-weight: bold;\n  margin: 5px 0px;\n}\n.el-popover .el-form .el-select {\n  width: 100%;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}