{"ast":null,"code":"/* eslint-disable prettier/prettier */\nimport jq from \"jquery\"; // 获取最新配置\n\nexport function oauth2Client(url) {\n  var oauth2Client = {\n    ouc: {\n      user: null,\n      oauth2User: url,\n      clientId: \"client\",\n      clientSecret: \"secret\"\n    },\n    begin: function (opts) {\n      opts = jq.extend({\n        clientId: false,\n        authorizeUrl: false,\n        redirectUri: window.location.href,\n        responseType: 'code'\n      }, opts);\n      window.location.href = opts.authorizeUrl + '?client_id=' + opts.clientId + '&response_type=' + opts.responseType + '&redirect_uri=' + opts.redirectUri;\n    },\n    user: function (url) {\n      jq.ajax({\n        type: \"get\",\n        url: url,\n        async: false,\n        data: {},\n        success: function (data) {\n          if (!data) {\n            oauth2Client.oAuthLoginPage();\n            return null;\n          }\n\n          return data;\n        },\n        error: function () {\n          alert(\"当前登录用户为空，请检查当前地址是否正确\");\n          return null;\n        }\n      });\n    },\n    oAuthLoginPage: function () {\n      oauth2Client.begin({\n        authorizeUrl: oauth2Client.ouc.oauth2User + \"/authorize\",\n        clientId: oauth2Client.ouc.clientId,\n        redirectUri: oauth2Client.getNoHashUrl()\n      });\n    },\n    end: function (opts, fn, errFn) {\n      opts = jq.extend({\n        code: false,\n        clientId: false,\n        clientSecret: false,\n        accessTokenUrl: false,\n        redirectUri: window.location.href,\n        userInfoUrl: false\n      }, opts);\n\n      if (!opts.code) {\n        return;\n      }\n\n      jq.ajax({\n        async: false,\n        url: opts.accessTokenUrl,\n        type: \"post\",\n        data: {\n          grant_type: \"authorization_code\",\n          client_id: opts.clientId,\n          client_secret: opts.clientSecret,\n          code: opts.code,\n          redirect_uri: opts.redirectUri\n        },\n        success: function (data) {\n          if (data) {\n            if (typeof data === 'string') {\n              data = jq.parseJSON(data);\n            }\n\n            var accessToken = data.access_token;\n            var expiresIn = data.expires_in;\n          }\n\n          fn(accessToken, expiresIn);\n        },\n        error: function (XMLHttpRequest, textStatus, errorThrown) {\n          errFn(XMLHttpRequest, textStatus, errorThrown);\n        },\n        complete: function (XMLHttpRequest, textStatus) {}\n      });\n    }\n  };\n  return oauth2Client;\n}","map":{"version":3,"sources":["D:/project/batch-edit/src/services/jquery.oauth2-client.js"],"names":["jq","oauth2Client","url","ouc","user","oauth2User","clientId","clientSecret","begin","opts","extend","authorizeUrl","redirectUri","window","location","href","responseType","ajax","type","async","data","success","oAuthLoginPage","error","alert","getNoHashUrl","end","fn","errFn","code","accessTokenUrl","userInfoUrl","grant_type","client_id","client_secret","redirect_uri","parseJSON","accessToken","access_token","expiresIn","expires_in","XMLHttpRequest","textStatus","errorThrown","complete"],"mappings":"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","sourcesContent":["/* eslint-disable prettier/prettier */\nimport jq from \"jquery\";\n// 获取最新配置\nexport function oauth2Client(url) {\n  var oauth2Client = {\n    ouc: {\n      user: null,\n      oauth2User: url,\n      clientId: \"client\",\n      clientSecret: \"secret\"\n    },\n    begin: function(opts) {\n      opts = jq.extend({\n        clientId: false,\n        authorizeUrl: false,\n        redirectUri: window.location.href,\n        responseType: 'code'\n      }, opts);\n      window.location.href = opts.authorizeUrl + '?client_id=' +\n        opts.clientId + '&response_type=' + opts.responseType +\n        '&redirect_uri=' + opts.redirectUri;\n    },\n    user: function(url) {\n      jq.ajax({\n        type: \"get\",\n        url: url,\n        async: false,\n        data: {},\n        success: function(data) {\n          if (!data) {\n            oauth2Client.oAuthLoginPage();\n            return null;\n          }\n          return data;\n        },\n        error: function() {\n          alert(\"当前登录用户为空，请检查当前地址是否正确\");\n          return null;\n        },\n      });\n    },\n    oAuthLoginPage: function() {\n      oauth2Client.begin({\n        authorizeUrl: oauth2Client.ouc.oauth2User + \"/authorize\",\n        clientId: oauth2Client.ouc.clientId,\n        redirectUri: oauth2Client.getNoHashUrl()\n      });\n    },\n    end: function(opts, fn, errFn) {\n      opts = jq.extend({\n        code: false,\n        clientId: false,\n        clientSecret: false,\n        accessTokenUrl: false,\n        redirectUri: window.location.href,\n        userInfoUrl: false\n      }, opts);\n      if (!opts.code) {\n        return;\n      }\n      jq.ajax({\n        async: false,\n        url: opts.accessTokenUrl,\n        type: \"post\",\n        data: {\n          grant_type: \"authorization_code\",\n          client_id: opts.clientId,\n          client_secret: opts.clientSecret,\n          code: opts.code,\n          redirect_uri: opts.redirectUri\n        },\n        success: function(data) {\n          if (data) {\n            if (typeof data === 'string') {\n              data = jq.parseJSON(data);\n            }\n            var accessToken = data.access_token;\n            var expiresIn = data.expires_in;\n          }\n          fn(accessToken, expiresIn);\n        },\n        error: function(XMLHttpRequest, textStatus, errorThrown) {\n          errFn(XMLHttpRequest, textStatus, errorThrown);\n        },\n        complete: function(XMLHttpRequest, textStatus) {}\n      });\n\n    }\n\n  };\n\n  return oauth2Client;\n}"]},"metadata":{},"sourceType":"module"}