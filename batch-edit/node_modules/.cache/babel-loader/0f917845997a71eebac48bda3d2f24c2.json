{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, vShow as _vShow, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, withCtx as _withCtx, resolveDirective as _resolveDirective } from \"vue\";\nconst _hoisted_1 = {\n  class: \"tabs\"\n};\nconst _hoisted_2 = {\n  class: \"demonstration\"\n};\nconst _hoisted_3 = {\n  class: \"mark el-icon-warning\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_contentSearch = _resolveComponent(\"contentSearch\");\n\n  const _component_el_image = _resolveComponent(\"el-image\");\n\n  const _component_contentEdit = _resolveComponent(\"contentEdit\");\n\n  const _component_contentPage = _resolveComponent(\"contentPage\");\n\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n  const _directive_loading = _resolveDirective(\"loading\");\n\n  return _openBlock(), _createBlock(\"div\", _hoisted_1, [_createVNode(_component_contentSearch, {\n    onRefresh: $options.refresh,\n    onFinish: $options.finishTask,\n    onRefreshForm: $options.refreshForm\n  }, null, 8\n  /* PROPS */\n  , [\"onRefresh\", \"onFinish\", \"onRefreshForm\"]), _withDirectives(_createVNode(_component_el_tabs, {\n    class: \"contentTabs\",\n    modelValue: $data.activeName,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.activeName = $event),\n    type: \"border-card\",\n    onTabClick: $options.handleClick\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList($data.lists, list => {\n      return _openBlock(), _createBlock(_component_el_tab_pane, {\n        label: list.name,\n        name: list.value,\n        key: list.name\n      }, {\n        default: _withCtx(() => [!$data.activeLists[$data.pageNum] ? (_openBlock(true), _createBlock(_Fragment, {\n          key: 0\n        }, _renderList($data.activeLists[$data.pageNum].datas || [], aList => {\n          return _openBlock(), _createBlock(\"div\", {\n            key: aList.id,\n            class: \"blockImage hide\",\n            onMouseenter: _cache[1] || (_cache[1] = $event => $options.mouseenter($event)),\n            onMouseleave: _cache[2] || (_cache[2] = $event => $options.mouseleave($event))\n          }, [_createVNode(_component_el_image, {\n            style: {\n              \"height\": \"170px\"\n            },\n            src: \"https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg\",\n            \"preview-src-list\": ['https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg'],\n            fit: \"fill\"\n          }, null, 8\n          /* PROPS */\n          , [\"preview-src-list\"]), _createVNode(_component_contentEdit, {\n            editTags: aList.tag,\n            modelName: $data.activeName,\n            editDisabled: $data.editDisabled,\n            editId: aList.id,\n            onEditList: $options.editList,\n            onCheckList: $options.checkList,\n            onTagImage: $options.tagImage\n          }, null, 8\n          /* PROPS */\n          , [\"editTags\", \"modelName\", \"editDisabled\", \"editId\", \"onEditList\", \"onCheckList\", \"onTagImage\"]), _createVNode(\"span\", _hoisted_2, _toDisplayString(aList.id), 1\n          /* TEXT */\n          ), _withDirectives(_createVNode(\"i\", _hoisted_3, null, 512\n          /* NEED_PATCH */\n          ), [[_vShow, $options.renderMarkType(aList.tag)]])], 32\n          /* HYDRATE_EVENTS */\n          );\n        }), 128\n        /* KEYED_FRAGMENT */\n        )) : _createCommentVNode(\"v-if\", true), _createVNode(_component_contentPage, {\n          pageTotleNum: $data.pageTotleNum,\n          onPageChange: $options.pageChange\n        }, null, 8\n        /* PROPS */\n        , [\"pageTotleNum\", \"onPageChange\"])]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"label\", \"name\"]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\", \"onTabClick\"]), [[_directive_loading, $data.fullscreenLoading, void 0, {\n    fullscreen: true,\n    lock: true\n  }]])]);\n}","map":{"version":3,"sources":["D:\\web_editor_hd\\src\\main\\webapp\\batch-edit\\src\\components\\content.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"tabs\">\n    <contentSearch\n      @refresh=\"refresh\"\n      @finish=\"finishTask\"\n      @refreshForm=\"refreshForm\"\n    />\n    <el-tabs\n      v-loading.fullscreen.lock=\"fullscreenLoading\"\n      class=\"contentTabs\"\n      v-model=\"activeName\"\n      type=\"border-card\"\n      @tab-click=\"handleClick\"\n    >\n      <el-tab-pane\n        v-for=\"list in lists\"\n        :label=\"list.name\"\n        :name=\"list.value\"\n        :key=\"list.name\"\n      >\n        <div\n          v-if=\"!activeLists[pageNum]\"\n          v-for=\"aList in activeLists[pageNum].datas || []\"\n          :key=\"aList.id\"\n          class=\"blockImage hide\"\n          @mouseenter=\"mouseenter($event)\"\n          @mouseleave=\"mouseleave($event)\"\n        >\n          <el-image\n            style=\"height: 170px\"\n            src=\"https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg\"\n            :preview-src-list=\"[\n              'https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg',\n            ]\"\n            fit=\"fill\"\n          >\n          </el-image>\n          <contentEdit\n            :editTags=\"aList.tag\"\n            :modelName=\"activeName\"\n            :editDisabled=\"editDisabled\"\n            :editId=\"aList.id\"\n            @editList=\"editList\"\n            @checkList=\"checkList\"\n            @tagImage=\"tagImage\"\n          />\n          <span class=\"demonstration\">{{ aList.id }}</span>\n          <i\n            class=\"mark el-icon-warning\"\n            v-show=\"renderMarkType(aList.tag)\"\n          ></i>\n        </div>\n        <contentPage :pageTotleNum=\"pageTotleNum\" @pageChange=\"pageChange\" />\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport contentSearch from \"@/components/contentComponents/contentSearch.vue\";\nimport contentPage from \"@/components/contentComponents/contentPage.vue\";\nimport contentEdit from \"@/components/contentComponents/contentEdit.vue\";\nimport * as sysApi from \"../services/sys\";\nimport * as util from \"../services/util\";\nimport { ElMessage } from \"element-plus\";\nexport default {\n  name: \"search\",\n  data() {\n    return {\n      editDisabled: false,\n      fullscreenLoading: false,\n      lists: [\n        {\n          name: \"数据\",\n          value: \"DATA\",\n          modelName: \"DATA\",\n        },\n      ],\n      activeLists: [],\n      value: \"\",\n      taskId: null,\n      pageTotleNum: 0,\n      editHistory: {},\n      pageNum: 0,\n      activeName: \"DATA\",\n    };\n  },\n  mounted() {\n    this.refresh(1);\n    // editDisabled：属性编辑栏根据用户权限验证是否可修改\n    var role = util.isRoleAuth(this.$user);\n    if ([1, 3].includes(role)) {\n      this.editDisabled = false;\n    } else {\n      this.editDisabled = true;\n    }\n  },\n  methods: {\n    // 模型类型切换\n    handleClick(tab) {\n      console.log(tab);\n      return;\n    },\n    mouseenter(event) {\n      event.currentTarget.className = \"blockImage show\";\n    },\n    mouseleave(event) {\n      event.currentTarget.className = \"blockImage hide\";\n    },\n    logout() {\n      console.log(\"退出\");\n    },\n    // 是否被标记的状态\n    renderMarkType(tag) {\n      if (!tag) {\n        return;\n      }\n      var key = \"FLAGTO\";\n      var editTag = tag.find((d) => {\n        return d.k == key;\n      });\n      if (editTag && editTag.v == \"1\") {\n        return true;\n      }\n      return false;\n    },\n    editList(id, form) {\n      this.eidtTask(id, form);\n    },\n    checkList(id, form) {\n      this.eidtTask(id, form);\n    },\n    tagImage(id) {\n      var key = \"FLAGTO\";\n      if (!this.editHistory[id]) {\n        var activeList = this.activeLists[this.activeName];\n        var activeData = activeList.find((d) => {\n          return d.id == id;\n        });\n        this.editHistory[id] = activeData;\n      }\n      var editTag = this.editHistory[id].tag.find((d) => {\n        return d.k == key;\n      });\n      if (editTag) {\n        editTag.v = editTag.v == \"2\" ? \"1\" : \"2\";\n      } else {\n        this.editHistory[id].tag.push({\n          k: key,\n          v: \"1\",\n        });\n      }\n    },\n    // 修改属性\n    eidtTask(id, form) {\n      if (!this.editHistory[id]) {\n        var activeList = this.activeLists[this.activeName];\n        var activeData = activeList.find((d) => {\n          return d.id == id;\n        });\n        this.editHistory[id] = activeData;\n      }\n      for (var key in form) {\n        var editTag = this.editHistory[id].tag.find((d) => {\n          return d.k == key;\n        });\n        if (editTag) {\n          editTag.v = form[key];\n        } else {\n          this.editHistory[id].tag.push({\n            k: key,\n            v: form[key],\n          });\n        }\n      }\n      console.log(this.editHistory[id]);\n    },\n    // 完成保存所修改的数据\n    finishTask() {\n      var list = [];\n      for (var id in this.editHistory) {\n        list.push(this.editHistory[id]);\n      }\n      if (!list.length) {\n        return;\n      }\n      var $this = this;\n      $this.fullscreenLoading = true;\n      var $url =\n        $this.$config.kds_data +\n        \"data/tags/edit?keys=lane_400951053_1&namespace=hdmap\";\n      sysApi\n        .postAsyncDatas({\n          url: $url,\n          data: list,\n        })\n        .then((res) => {\n          $this.message(res.code, res.message);\n          $this.fullscreenLoading = false;\n          console.log(\"完成\");\n          if (res.code == \"0\") {\n            $this.taskId = null;\n            $this.$emit(\"refresh\");\n          }\n        });\n    },\n    // 刷新数据\n    refresh(param = {}) {\n      var page = param.page || this.pageNum;\n      if (param.id) {\n        this.taskId = param.id;\n      }\n      this.findLists(page);\n    },\n    // 刷新报表\n    refreshForm() {\n      this.$emit(\"refreshForm\", this.taskId);\n    },\n    // 分页查询\n    pageChange(page) {\n      this.pageTotleNum = 0;\n      this.activeLists = [];\n      if (!this.taskId) {\n        return;\n      }\n      if (page) {\n        this.pageNum = page;\n      }\n      var $this = this;\n      var $url =\n        $this.$config.kds_data +\n        \"data/queryPage?keys=lane_400951053_1&namespace=hdmap\";\n      $this.fullscreenLoading = true;\n      sysApi\n        .postAsyncDatas({\n          url: $url,\n          data: {\n            ops: [],\n            page: {\n              ops: [\n                {\n                  k: \"modelName\",\n                  type: \"string\",\n                  v: \"DIVIDER\",\n                  op: \"in\",\n                },\n              ],\n              sort: [\n                {\n                  k: \"DIVIDER.SOURCE\",\n                  order: \"desc\",\n                },\n                {\n                  k: \"DIVIDER.R_LINE\",\n                  order: \"desc\",\n                },\n              ],\n              page: {\n                pageNo: this.pageNum,\n                pageSize: 20,\n              },\n            },\n          },\n        })\n        .then((res) => {\n          res = {\n            code: \"0\",\n            message: \"成功\",\n            error: null,\n            result: [\n              {\n                modelName: \"DIVIVER\",\n                groupKeys: { TYPE: \"1\", SUBTYPE: \"1\" },\n                datas: [\n                  {\n                    id: \"60da9dc4ff622a279e1fab1d\",\n                    entityId: 1,\n                    key: \"lane_1_1\",\n                    taskId: \"1_1\",\n                    autoProjectId: \"1\",\n                    featureGroupId: \"1\",\n                    entityType: \"way\",\n                    modelName: \"DIVIVER\",\n                    tags: { TYPE: \"1\", SUBTYPE: \"1\", ROAND_NAME: \"亮马桥路1\" },\n                    layerId: null,\n                    changesetId: 1,\n                    visible: true,\n                    timestamp: 1550732121186,\n                    version: 1,\n                    createTime: 1624939972184,\n                    updateTime: 1624939972184,\n                  },\n                  {\n                    id: \"60da9dc4ff622a279e1fab11\",\n                    entityId: 2,\n                    key: \"lane_1_1\",\n                    taskId: \"1_1\",\n                    autoProjectId: \"1\",\n                    featureGroupId: \"1\",\n                    entityType: \"way\",\n                    modelName: \"DIVIVER\",\n                    tags: { TYPE: \"1\", SUBTYPE: \"1\", ROAND_NAME: \"亮马桥路2\" },\n                    layerId: null,\n                    changesetId: 1,\n                    visible: true,\n                    timestamp: 1550732121186,\n                    version: 1,\n                    createTime: 1624939972184,\n                    updateTime: 1624939972184,\n                  },\n                ],\n              },\n              {\n                modelName: \"DIVIVER\",\n                groupKeys: { TYPE: \"1\", SUBTYPE: \"2\" },\n                datas: [\n                  {\n                    id: \"60da9dc4ff622a279e1fab1q\",\n                    entityId: 3,\n                    key: \"lane_1_1\",\n                    taskId: \"1_1\",\n                    autoProjectId: \"1\",\n                    featureGroupId: \"1\",\n                    entityType: \"way\",\n                    modelName: \"DIVIVER\",\n                    tags: { TYPE: \"1\", SUBTYPE: \"2\", ROAND_NAME: \"亮马桥路1\" },\n                    layerId: null,\n                    changesetId: 1,\n                    visible: true,\n                    timestamp: 1550732121186,\n                    version: 1,\n                    createTime: 1624939972184,\n                    updateTime: 1624939972184,\n                  },\n                  {\n                    id: \"60da9dc4ff622a279e1fab1d\",\n                    entityId: 4,\n                    key: \"lane_1_1\",\n                    taskId: \"1_1\",\n                    autoProjectId: \"1\",\n                    featureGroupId: \"1\",\n                    entityType: \"way\",\n                    modelName: \"DIVIVER\",\n                    tags: { TYPE: \"1\", SUBTYPE: \"2\", ROAND_NAME: \"亮马桥路2\" },\n                    layerId: null,\n                    changesetId: 1,\n                    visible: true,\n                    timestamp: 1550732121186,\n                    version: 1,\n                    createTime: 1624939972184,\n                    updateTime: 1624939972184,\n                  },\n                ],\n              },\n            ],\n          };\n\n          var results = res.result || [];\n          if (results.length) {\n            $this.pageNum = 1;\n          }\n          $this.fullscreenLoading = false;\n          $this.pageTotleNum = results.length;\n          $this.activeLists = results;\n        });\n    },\n    // 查询模型分类\n    findLists(value) {\n      if (!this.taskId) {\n        return;\n      }\n      var $this = this;\n      var $url =\n        $this.$config.kds_data +\n        \"data/queryPage?keys=lane_400951053_1&namespace=hdmap\";\n      $this.fullscreenLoading = true;\n      sysApi\n        .postAsyncDatas({\n          url: $url,\n          data: {\n            ops: [],\n            page: {\n              pageSize: 10,\n              pageNo: 1,\n            },\n          },\n        })\n        .then(function (res) {\n          $this.fullscreenLoading = false;\n          $this.pageChange(value);\n          // $this.activeName = $this.lists[0].value;\n          // $this.lists = [\n          //   {\n          //     name: \"路牌\",\n          //     value: \"1\",\n          //   },\n          //   {\n          //     name: \"灯杆\",\n          //     value: \"2\",\n          //   },\n          //   {\n          //     name: \"车道线\",\n          //     value: \"3\",\n          //   },\n          //   {\n          //     name: \"地面定位目标\",\n          //     value: \"4\",\n          //   },\n          // ];\n        });\n    },\n    message(type, message) {\n      if (type == \"0\") {\n        ElMessage.success({\n          message: message,\n          type: \"success\",\n        });\n      } else {\n        ElMessage.error(\"错误信息：\" + message);\n      }\n    },\n  },\n  components: {\n    contentSearch,\n    contentPage,\n    contentEdit,\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n.tabs {\n  float: left;\n  width: 100%;\n  margin: 10px 0px;\n  height: calc(100% - 140px);\n  border-bottom: 1px solid #e4e7ed;\n}\n.tabs .contentTabs {\n  height: 100%;\n}\n.tabs .contentTabs .el-tabs__content {\n  height: calc(100% - 60px);\n  padding-top: 10px;\n  background-color: #f2f4f9;\n  overflow: auto;\n}\n.tabs .contentTabs .el-tabs__content .el-tab-pane {\n  height: 100%;\n}\n.tabs .blockImage {\n  width: calc(20% - 30px);\n  margin: 0px 15px;\n  height: 200px;\n  float: left;\n  position: relative;\n}\n.tabs .blockImage .mark {\n  color: rgb(255, 0, 0);\n  position: absolute;\n  right: 5px;\n  bottom: 35px;\n  z-index: 1;\n}\n.tabs .blockImage img {\n  width: calc(100% - 4px);\n  height: calc(100% - 4px);\n  border: 2px solid rgba(58, 142, 230, 0);\n}\n.tabs .blockImage img:hover {\n  border: 2px solid rgba(58, 142, 230, 1);\n}\n.tabs .blockImage .demonstration {\n  float: left;\n  height: 30px;\n  position: absolute;\n  bottom: 0px;\n  width: 100%;\n  left: 0px;\n  line-height: 30px;\n  font-size: 16px;\n}\n.tabs .blockImage.hide .footHeaderToggle {\n  opacity: 0;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}